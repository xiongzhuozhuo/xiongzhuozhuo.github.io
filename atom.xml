<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiongZhuo</title>
  
  
  <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/"/>
  <updated>2021-09-17T02:49:54.570Z</updated>
  <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/</id>
  
  <author>
    <name>软糖豆人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DJ音标表</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87%E8%A1%A8/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87%E8%A1%A8/</id>
    <published>2021-09-16T17:27:15.130Z</published>
    <updated>2021-09-17T02:49:54.570Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="音标表"><a href="#音标表" class="headerlink" title="音标表"></a>音标表</h2><table><thead><tr><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24568.html">元音</a></th><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24557.html">单元音</a></th><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24554.html">前元音</a></th><th>/iː/</th><th>/ɪ/</th><th>/e/</th><th>/æ/</th><th></th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24555.html">中元音</a></td><td>/ɜː/</td><td>/ə/</td><td>/ʌ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24556.html">后元音</a></td><td>/uː/</td><td>/ʊ/</td><td>/ɔː/</td><td>/ɒ/</td><td>/ɑː/</td></tr><tr><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24560.html">双元音</a></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24558.html">开合双元音</a></td><td>/eɪ/</td><td>/aɪ/</td><td>/ɔɪ/</td><td>/aʊ/</td><td>/əʊ/</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24559.html">集中双元音</a></td><td>/ɪə/</td><td>/eə/</td><td>/ʊə/</td><td></td><td></td></tr><tr><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24569.html">辅音</a></td><td align="center">爆破音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/p/</td><td>/t/</td><td>/k/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/b/</td><td>/d/</td><td>/ɡ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">摩擦音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/f/</td><td>/s/</td><td>/ʃ/</td><td>/θ/</td><td>/h/</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/v/</td><td>/z/</td><td>/ʒ/</td><td>/ð/</td><td>/r/</td></tr><tr><td align="center"></td><td align="center">破擦音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/tʃ/</td><td>/tr/</td><td>/ts/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/dʒ/</td><td>/dr/</td><td>/dz/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">鼻音</td><td align="center">（浊辅音）</td><td>/m/</td><td>/n/</td><td>/ŋ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">舌则音</td><td align="center">（浊辅音）</td><td>/l/</td><td></td><td></td><td></td><td></td></tr><tr><td align="center"></td><td align="center">半元音</td><td align="center">（浊辅音）</td><td>/j/</td><td>/w/</td><td></td><td></td><td></td></tr></tbody></table><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271627621.png" alt="音标"></p>]]></content>
    
    
    <summary type="html">音标</summary>
    
    
    
    <category term="英语" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="IPA" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/IPA/"/>
    
  </entry>
  
  <entry>
    <title>DJ音标——元音</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87/</id>
    <published>2021-09-16T17:27:15.108Z</published>
    <updated>2021-09-17T02:49:50.550Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="DJ音标简介和示范"><a href="#DJ音标简介和示范" class="headerlink" title="DJ音标简介和示范 "></a><a href="https://www.yingyutu.com/dj">DJ音标简介和示范 </a></h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271600814.png" alt="image-20210827160037276"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271627621.png" alt="音标"></p><table><thead><tr><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24568.html">元音</a></th><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24557.html">单元音</a></th><th align="center"><a href="https://en-yinbiao.xiao84.com/study/24554.html">前元音</a></th><th>/iː/</th><th>/ɪ/</th><th>/e/</th><th>/æ/</th><th></th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24555.html">中元音</a></td><td>/ɜː/</td><td>/ə/</td><td>/ʌ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24556.html">后元音</a></td><td>/uː/</td><td>/ʊ/</td><td>/ɔː/</td><td>/ɒ/</td><td>/ɑː/</td></tr><tr><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24560.html">双元音</a></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24558.html">开合双元音</a></td><td>/eɪ/</td><td>/aɪ/</td><td>/ɔɪ/</td><td>/aʊ/</td><td>/əʊ/</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24559.html">集中双元音</a></td><td>/ɪə/</td><td>/eə/</td><td>/ʊə/</td><td></td><td></td></tr><tr><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24569.html">辅音</a></td><td align="center">爆破音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/p/</td><td>/t/</td><td>/k/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/b/</td><td>/d/</td><td>/ɡ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">摩擦音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/f/</td><td>/s/</td><td>/ʃ/</td><td>/θ/</td><td>/h/</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/v/</td><td>/z/</td><td>/ʒ/</td><td>/ð/</td><td>/r/</td></tr><tr><td align="center"></td><td align="center">破擦音</td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24561.html">清辅音</a></td><td>/tʃ/</td><td>/tr/</td><td>/ts/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"><a href="https://en-yinbiao.xiao84.com/study/24562.html">浊辅音</a></td><td>/dʒ/</td><td>/dr/</td><td>/dz/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">鼻音</td><td align="center">（浊辅音）</td><td>/m/</td><td>/n/</td><td>/ŋ/</td><td></td><td></td></tr><tr><td align="center"></td><td align="center">舌则音</td><td align="center">（浊辅音）</td><td>/l/</td><td></td><td></td><td></td><td></td></tr><tr><td align="center"></td><td align="center">半元音</td><td align="center">（浊辅音）</td><td>/j/</td><td>/w/</td><td></td><td></td><td></td></tr></tbody></table><h3 id="1-元音"><a href="#1-元音" class="headerlink" title="1. 元音"></a>1. 元音</h3><h4 id="1-1-单元音"><a href="#1-1-单元音" class="headerlink" title="1.1 单元音"></a>1.1 单元音</h4><h5 id="1-1-1-前元音"><a href="#1-1-1-前元音" class="headerlink" title="1.1.1 前元音"></a>1.1.1 前元音</h5><h6 id="iː"><a href="#iː" class="headerlink" title="/iː/"></a>/iː/</h6> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271639127.png" alt="image-20210827163922965" style="zoom:25%;" /><p>b<code>ee</code>  f<code>ee</code>  p<code>ea</code></p><p><strong>音标符号</strong></p><ul><li>DJ音标中的长元音/iː/</li><li>小写字母i右边加上两点(ː)，表示长音</li><li>在句中书写时为/iː/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108280920194.png" alt="image-20210828092006413"></p><p>上唇和上下齿都稍微分开，双唇扁平发音，念成字母e的本身读音</p><blockquote><p>前元音、长元音<br>舌身前部尽量抬向硬腭，在舌面和硬腭之间留一定空隙，舌尖抵住前下齿，下颚略向下伸，使牙齿分开；<br>唇形：两唇展开，拉向两侧的嘴角；<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>和“医”发音相似</li><li>舌位更高（舌面更靠近硬腭）</li><li>嘴角要向两侧拉开</li></ul><p><strong>单词练习</strong></p><table><thead><tr><th>b<code>ee</code>  /biː/</th><th>f<code>ee</code>  /fiː/</th><th>p<code>ea</code>  /piː/</th></tr></thead><tbody><tr><td><strong>r<code>ea</code>d  /riːd/</strong></td><td><strong>m<code>ea</code>t  /miːt/</strong></td><td><strong>l<code>ea</code>d  /liːd/</strong></td></tr></tbody></table><p><strong>常见错误</strong></p><p>如果发音时离**<u>硬腭</u>**太远，就容易发成汉语拼音里的ei，从而导致以下错误读音</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271708786.png" alt="image-20210827170842177" style="zoom: 33%;" /><hr><h6 id="ɪ"><a href="#ɪ" class="headerlink" title="/ɪ/"></a>/ɪ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108271717595.png" alt="image-20210827171238150" style="zoom:33%;" /> <p>l<code>i</code>t      h<code>i</code>t     f<code>i</code>sh</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音</li><li>缩小了的大写字母I</li><li>在句中书写时为/ɪ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108280919846.png" alt="image-20210828091933546"></p><p>嘴型和/e/音一样，但上下齿开合度又更小一些，也是不必太用力，音自然由水平方向流出，只须发字母A[e]的后半部声即可</p><blockquote><p>高位前元音，短元音<br>舌身抬起的高度略低于长元音/iː/，舌尖抵住前下齿，舌尖用力略小于发/iː/时的力度，两齿分开；<br>唇形：稍扁；<br>声带：振动</p></blockquote><p><strong>发音诀窍</strong></p><ul><li>在中文（普通话）里没有（虽然发音近似“医”）</li><li>舌位更低（舌上方空间更大），再扩大就更像/e/</li><li>舌尖在下齿后方</li><li>嘴角没有/iː/那么咧开</li><li>发音更加放松</li></ul><p><strong>单词练习</strong></p><table><thead><tr><th>b<code>i</code>t    /bɪt/</th><th>f<code>i</code>t    /fɪt/</th><th>p<code>i</code>t    /pɪt/</th></tr></thead><tbody><tr><td><strong>l<code>i</code>t    /lɪt/</strong></td><td><strong>h<code>i</code>t    /hɪt/</strong></td><td><strong>f<code>i</code>sh    /fɪʃ/</strong></td></tr></tbody></table><p><strong>常见错误</strong></p><p>读这个音，容易把普通话“医生”的“医”短着读，也就是**<u>舌位过高</u>**，舌头离硬腭太近，以下是舌位过高产生的错误读音</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108272012083.png" alt="image-20210827201225658" style="zoom:50%;" /><p>注意发/ɪ/这个音时，舌位要降低，离开硬腭，嘴角不需要像/iː/那样向两边拉开，舌端和硬腭离得更远，但是矫枉过正，读过头，以下是舌位过低时所产生的错误读音</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108272032987.png" alt="image-20210827203236018" style="zoom:50%;" /><hr><h6 id="e"><a href="#e" class="headerlink" title="/e/"></a>/e/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108280921450.png" alt="image-20210828092105350" style="zoom: 67%;" /> <p>b<code>e</code>d    g<code>e</code>t    p<code>e</code>t</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音</li><li>和小写字母e相同</li><li>在句中书写时为/e/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108280925621.png" alt="image-20210828092543740"></p><blockquote><p>中高位前元音<br>舌尖抵住下齿，舌前部向硬腭上抬，舌侧边缘轻贴上臼齿，舌位略低于发/ɪ/音时的舌位。口腔接近半开，舌稍扁；<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>双唇自然张开，口腔放松</li><li>舌尖在下牙齿后方，舌面平放，离开硬腭有一段距离</li></ul><p><strong>单词练习</strong></p><table><thead><tr><th>b<code>e</code>d    /bed/</th><th>g<code>e</code>t    /get/</th><th>p<code>e</code>t    /pet/</th></tr></thead><tbody><tr><td><strong>l<code>e</code>t    /let/</strong></td><td><strong>m<code>e</code>t    /met/</strong></td><td><strong>s<code>e</code>t    /set/</strong></td></tr></tbody></table><p><strong>常见错误</strong></p><p>有人会把它发成普通话中的“爱”</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281013949.png" alt="image-20210828101301123" style="zoom:50%;" /><p><strong>DJ音标与KK音标对比</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281011784.png" alt="image-20210828100900362" style="zoom:50%;" /><p>但是这两个音并非同一个音</p><hr><h6 id="ae"><a href="#ae" class="headerlink" title="/æ/"></a>/æ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281016393.png" alt="image-20210828101616064" style="zoom: 50%;" /> <p>b<code>a</code>d    f<code>a</code>t    p<code>a</code>t</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音/æ/</li><li>像是小写字母a和e的组合</li><li>在句中书写时为/æ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281045262.png" alt="image-20210828104538447" style="zoom: 50%;" /><blockquote><p>中下位前元音<br>舌尖抵住下前齿，舌位稍高，但比其他前元音/ɪ/和/e/要低；<br>唇形：牙床要开得比较大，可以容下一个食指和一个中指，口要张至近乎全开<br>声带：振动</p></blockquote><p><strong>发音诀窍</strong></p><ul><li>这个音在中文中不存在</li><li>最容易读错的音之一</li><li>口型一定要张大，饱满</li><li>嘴角也要向两边拉伸</li><li>舌端在牙齿后方</li><li>“同时”发/ɑː/和/e/这两个音，口型张大像/ɑː/，舌位近似于/e/</li></ul><p><strong>单词练习</strong></p><table><thead><tr><th>b<code>a</code>d   /bæd/</th><th>f<code>a</code>t    /fæt/</th><th>p<code>a</code>t    /pæt/</th></tr></thead><tbody><tr><td><strong>l<code>a</code>d    /læd/</strong></td><td><strong>m<code>a</code>t   /mæt/</strong></td><td><strong>s<code>a</code>t    /sæt/</strong></td></tr></tbody></table><p><strong>绕口令</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281038380.png" alt="image-20210828103806231" style="zoom:50%;" /><p><strong>常见错误</strong></p><p>使用汉语拼音的ai来代替这个读音</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281055160.png" alt="image-20210828105517920"></p><hr><h5 id="1-1-2-中元音"><a href="#1-1-2-中元音" class="headerlink" title="1.1.2 中元音"></a>1.1.2 中元音</h5><h6 id="ɜː"><a href="#ɜː" class="headerlink" title="/ɜː/"></a>/ɜː/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281058218.png" alt="image-20210828105821427" style="zoom:50%;" /> <p>h<code>er</code>    p<code>er</code>son    l<code>ear</code>n</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的长元音/ɜː/</li><li>反过来写的希腊字母，ε(epsilon)</li><li>右侧加长音符号ː，表示长元音</li><li>在句中书写时为/ɜː/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281105880.png" alt="image-20210828110508698" style="zoom:50%;" /><blockquote><p>中央、不圆唇长元音<br>发音时，舌中部向硬腭中部上抬，其高度位中高，舌身与臼齿有接触，但不紧密；<br>唇形：展唇形，展开程度与/iː/相同<br>声带：振动</p></blockquote><p><strong>发音诀窍</strong></p><ul><li>嘴自然张开，唇和舌都自然放松</li><li>像普通话里的“饿”（汉语拼音e）</li><li>要确保发音时间够长</li><li>不重度，更短 —&gt; <strong>/ə/</strong></li></ul><p><strong>单词练习</strong></p><table><thead><tr><th>h<code>er</code>    /hɜː/</th><th>p<code>er</code>son    /`pɜːsn/</th><th>l<code>ear</code>n    /lɜːn/</th></tr></thead><tbody><tr><td><strong>b<code>ir</code>d    /bɜːd/</strong></td><td><strong>w<code>or</code>d    /wɜːd/</strong></td><td><strong>f<code>ur</code>    /fɜː/</strong></td></tr></tbody></table><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281122633.png" alt="image-20210828112242719" style="zoom:50%;" /> <p><strong>常见错误</strong></p><ul><li>这个读音中国人很少犯严重错误</li><li>单词拼写与er，ear，ir，or，ur等情况</li></ul><p><strong>DJ音标与KK音标对比</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281125064.png" alt="image-20210828112524731" style="zoom:50%;" /><hr><h6 id="ə"><a href="#ə" class="headerlink" title="/ə/"></a>/ə/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281127312.png" alt="image-20210828112715851" style="zoom:67%;" /> <p><code>a</code>bout    probl<code>e</code>m    eas<code>i</code>ly    mem<code>o</code>ry    s<code>u</code>pply    s<code>y</code>ringe</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音/ə/</li><li>上下和左右都颠倒的小写字母e</li><li>在句中书写时为/ə/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281130245.png" alt="image-20210828113031300" style="zoom:50%;" /><blockquote><p>中央非、不圆唇、非重读<br>舌头中间部分抬起，舌，唇和牙床都很自然，肌肉相对放松<br>声带：振动</p></blockquote><p><strong>发音诀窍</strong></p><ul><li>嘴自然张开，唇和舌都自然放松</li><li>像普通话里的轻声“么”的韵母</li><li>不要重读，轻轻地让气流冲出声带自然读出</li><li>重度，变长 —&gt; /ɜː/</li><li>英语中出现频率最高，最特殊，最重要的音</li><li>schwa（“中央元音”或“中性元音”）</li><li>代表了很多元音字母在英语中的发音</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281142731.png" alt="image-20210828114231144" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>对于我们中国人来说不算难发音</li><li>但恰恰是最经常读错的音</li><li>因为很多单词中的元音字母都读/ə/，而不是元音字母本音</li><li>学汉语拼音“后遗症”：看见字母a就读“啊”，u读“呜”，o读“哦”</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281222554.png" alt="image-20210828122208878"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281222347.png" alt="image-20210828122247750"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281224847.png" alt="image-20210828122446948"></p><hr><h6 id="v"><a href="#v" class="headerlink" title="/ʌ/"></a>/ʌ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281226733.png" alt="image-20210828122611912" style="zoom:67%;" /> <p>b<code>u</code>t    h<code>u</code>t    m<code>u</code>st</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音/ʌ/</li><li>倒过来的小写字母v</li><li>在句中书写时为/ʌ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281229352.png" alt="image-20210828122855627" style="zoom:50%;" /><blockquote><p>中后、中下、不圆唇短元音<br>舌中部向硬腭中部上抬，上抬高度与/æ/几乎相等，口腔接近全开<br>唇形：自然状态<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>舌尖在下牙齿后方，舌头平放</li><li>发音靠口腔中后方</li><li>近似普通话“啊”，但是口型没有那么大，时长更短</li><li>英美发音不一样</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281238867.png" alt="image-20210828123818924" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>对于中国人来说不算难发音</li><li>避免用普通话的“啊”来取代他</li><li>避免口型过大，或发音过长</li><li>避免发成/ɑː/这个音</li></ul><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281241511.png" alt="image-20210828124125916" style="zoom:67%;" /><hr><h5 id="1-1-3-后元音"><a href="#1-1-3-后元音" class="headerlink" title="1.1.3 后元音"></a>1.1.3 后元音</h5><h6 id="ɑː"><a href="#ɑː" class="headerlink" title="/ɑː/"></a>/ɑː/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281245872.png" alt="image-20210828124502769" style="zoom:50%;" /> <p>f<code>a</code>ther    f<code>a</code>st    gl<code>a</code>ss</p><p><strong>音标符号</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281246775.png" alt="image-20210828124646063" style="zoom: 33%;" /> <p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281247305.png" alt="image-20210828124733493" style="zoom:50%;" /><blockquote><p>后元音、长元音<br>舌身平放在口腔里，发音时舌后靠前的部分用力<br>唇形：上下颚分得很开，两唇张开呈自然状，肌肉放松<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/ɑː/和“啊”（汉语拼音a）相似，但不同</li><li>/ɑː/的口型更大，发音更靠口腔后部（舌根处）</li><li>发音时长要足够</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281254047.png" alt="image-20210828125412862" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>对于中国人来说不算难发音</li><li>常见的问题是口型不够饱满（张嘴过小）</li><li>发音过于短促</li></ul><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281256145.png" alt="image-20210828125554591" style="zoom: 50%;" /><hr><h6 id="oː"><a href="#oː" class="headerlink" title="/ɔː/"></a>/ɔː/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281300461.png" alt="image-20210828125955724" style="zoom:50%;" /> <p>c<code>augh</code>t   b<code>ough</code>t    l<code>aw</code></p><p><strong>音标符号</strong></p><ul><li>DJ音标中的长元音/ɔː/</li><li>左右颠倒的小写字母c，右边再加上长音符号ː</li><li>在句中书写时为/ɔː/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281303059.png" alt="image-20210828130316572" style="zoom:50%;" /><blockquote><p>中高、后舌位、圆唇长元音<br>舌尖抵住下齿，舌后部向软腭抬起，舌后身肌肉稍紧张些<br>唇形：双唇呈圆形而突出<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/ɔː/和普通话里的“哦”（o）相似</li><li>嘴唇要撅起来，圆而外凸，肌肉较为紧张</li><li>口腔后方发音</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281310839.png" alt="image-20210828131010407" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>对中国人来说不难发</li><li>但是英音美音读法不同</li><li>美音内也有两大读法</li></ul><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281312395.png" alt="image-20210828131220582" style="zoom:50%;" /><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281314863.png" alt="image-20210828131402816" style="zoom:50%;" /><hr><h6 id="ɒ"><a href="#ɒ" class="headerlink" title="/ɒ/"></a>/ɒ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281805111.png" alt="image-20210828180547496" style="zoom:50%;" /> <p>t<code>o</code>p    h<code>o</code>t    l<code>o</code>t </p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音/ɒ/</li><li>转过来的a，“手写体a”</li><li>在句中书写时为/ɒ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108281810008.png" alt="image-20210828181015333" style="zoom:50%;" /><blockquote><p>低、后舌位、圆唇短元音<br>舌尖离下齿，舌后向软腭微微抬起，舌后和喉头比较紧张；<br>唇形：双唇稍用力，使嘴唇呈圆形，不突出<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/ɒ/和普通话的“凹”（ao）相似，但并不相同</li><li>发/ɒ/时，嘴型更小，时间更短</li><li>“凹”有口型变化，但/ɒ/没有</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282049336.png" alt="image-20210828204937547" style="zoom:50%;" /><p><strong>绕口令</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282051664.png" alt="image-20210828205134537" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>第一个常见错误：把/ɔː/短着读，或者读成“哦”</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282055823.png" alt="image-20210828205510994"></p><ul><li>第二个错误常见错误：张口过大，发成类似“奥”的音</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282056733.png" alt="image-20210828205610182"></p><ul><li>第三个常见错误：英音美音混读</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282058608.png" alt="image-20210828205812186"></p><hr><h6 id="uː"><a href="#uː" class="headerlink" title="/uː/"></a>/uː/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282100203.png" alt="image-20210828210041428" style="zoom:50%;" /> <p>t<code>oo</code>    f<code>oo</code>d    l<code>oo</code>se</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的长元音/uː/</li><li>小写字母u右侧加上长音符号ː</li><li>在句中书写为/uː/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282106506.png" alt="image-20210828210622789" style="zoom:50%;" /><blockquote><p>高位、圆唇后元音<br>舌尖离开下齿，舌后部向软腭抬起，在后元音中舌位最高<br>唇形：双唇收圆，向前用力突出，肌肉紧张，形成小孔<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/uː/和普通话“呜”相似，但并不相同</li><li>/uː/口型没有那么圆，而是更扁，嘴角向两边拉伸</li><li>发音部位靠口腔后部（不要发成“淤”）</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282117003.png" alt="image-20210828211730101" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>嘴唇过于外凸，唇形太圆，发成汉语的“呜”</li><li>请比较：“too”和“兔”</li></ul><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282119660.png" alt="image-20210828211943129" style="zoom:50%;" /><hr><h6 id="ʊ"><a href="#ʊ" class="headerlink" title="/ʊ/"></a>/ʊ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282122317.png" alt="image-20210828212227239" style="zoom:50%;" /> <p>b<code>oo</code>k    l<code>oo</code>k    g<code>oo</code>d</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的短元音/ʊ/</li><li>从希腊字母υ(Upsilon)变过来的</li><li>ʊ叫做“拉丁Upsilon”</li><li>俗称“马蹄u”（horseshoe u）</li><li>在句中书写时为/ʊ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282128607.png" alt="image-20210828212839711" style="zoom:50%;" /><blockquote><p>次高位、圆唇后元音<br>舌尖离开下齿，舌后部向软腭抬起，舌最高点比元音相对前移，比/ɑː/还略前些<br>唇形：双唇略微用力向前突出，但双唇没有发/uː/的唇形紧张<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/ʊ/和普通话“呜”相似，但并不相同</li><li>发/ʊ/时，嘴唇没有那么“噘”，更放松，时长更短，发音更靠后</li><li>/ʊ/并不仅仅是把长音/uː/短着读</li><li>/uː/的唇形向两边拉开，而/ʊ/唇形更圆更放松</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282137099.png" alt="image-20210828213712726" style="zoom:50%;" /><p><strong>绕口令</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282138967.png" alt="image-20210828213756994" style="zoom:50%;" /><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282139276.png" alt="image-20210828213901604" style="zoom:50%;" /><p><strong>常见错误</strong></p><ul><li>最容易读错的音之一</li><li>很多人把它读成中文“呜”，唇形过于突出，过于圆</li></ul><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108282145489.png" alt="image-20210828214544496" style="zoom:50%;" /><hr><h4 id="1-2-双元音"><a href="#1-2-双元音" class="headerlink" title="1.2 双元音"></a>1.2 双元音</h4><h5 id="1-2-1-开双元音"><a href="#1-2-1-开双元音" class="headerlink" title="1.2.1 开双元音"></a>1.2.1 开双元音</h5><h6 id="eɪ"><a href="#eɪ" class="headerlink" title="/eɪ/"></a>/eɪ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291214920.png" alt="image-20210829121326364" style="zoom:50%;" /> <p>m<code>a</code>ke    d<code>a</code>te    c<code>a</code>ke</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/e/和/ɪ/连在一起</li><li>在句中书写时为/eɪ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291231055.png" alt="image-20210829123103176"  /><blockquote><p>合口双元音<br>将舌尖抵住下前齿，舌前部抬向硬腭，高度为中高，发元音/e/，然后两唇拉向两边，宽度减小，同时舌身抬至/ɪ/的高度，在这一滑动过程中形成/eɪ/音<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/e/和/ɪ/一前一后快速紧密发出</li><li>发这个音口腔是有变化的</li><li>类似“嘿”的韵母</li></ul><p><strong>单词练习</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291239719.png" alt="image-20210829123901488"  /><p><strong>常见错误</strong></p><ul><li>用“唉”来取代</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291240648.png" alt="image-20210829124054203"></p><ul><li>另一个常见错误：把/eɪn/读成/en/</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291243422.png" alt="image-20210829124312772"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291243039.png" alt="image-20210829124351482"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291245346.png" alt="image-20210829124500761"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291246131.png" alt="image-20210829124631417"></p><hr><h6 id="aɪ"><a href="#aɪ" class="headerlink" title="/aɪ/"></a>/aɪ/</h6><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291248927.png" alt="image-20210829124836217" style="zoom:67%;" /> <p>b<code>i</code>ke    n<code>i</code>ce    t<code>i</code>me</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/a/和/ɪ/连在一起</li><li>在句中书写时为/aɪ/</li></ul><p><strong>舌位图</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291255858.png" alt="image-20210829125509109"  /><blockquote><p>合口双元音<br>先将舌身放平在口腔中，起始音是低位前元音/a/，然后滑向放松的高位前元音/ɪ/。舌身由/a/的舌位抬向/ɪ/的方位，这一滑动过程形成的音便是/aɪ/<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/a/(类似汉语“啊”)和/ɪ/一前一后快速紧密发出</li><li>发这个音口腔是有变化的</li><li>类似“爱”的韵母，但更加饱满</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291304669.png" alt="image-20210829130411218"></p><p><strong>常见错误</strong></p><ul><li>口型过小，不够饱满</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291305233.png" alt="image-20210829130532286"></p><hr><h6 id="oɪ"><a href="#oɪ" class="headerlink" title="/ɔɪ/"></a>/ɔɪ/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291306013.png" alt="image-20210829130638857"> </p><p>b<code>oy</code>    t<code>oy</code>  v<code>oi</code>ce</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/ɔ/和/ɪ/连在一起</li><li>在句中书写时为/ɔɪ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291309413.png" alt="image-20210829130906029"></p><blockquote><p>合口双元音<br>舌身平放于口腔中，先发圆唇音/ɔ/，然后滑向放松的高位前元音/ɪ/，舌身抬向硬腭/ɪ/的高度，这一滑动过程中形成的音便是/ɔɪ/<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/ɔː/变短后和/ɪ/一前一后快速紧密发出</li><li>发这个音口腔是有变化的</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291319959.png" alt="image-20210829131917702"></p><p><strong>常见错误</strong></p><ul><li>/ɔɪ/中的/ɪ/读成/e/，/ɔɪ/就误读成了/ɔe/</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291321340.png" alt="image-20210829132153880"></p><hr><h6 id="aʊ"><a href="#aʊ" class="headerlink" title="/aʊ/"></a>/aʊ/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291322101.png" alt="image-20210829132255702"> </p><p>h<code>ow</code>    c<code>ow</code>    all<code>ow</code></p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/a/和/ʊ/连在一起，注意不是/aʊ/</li><li>在句中书写时为/aʊ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291325563.png" alt="image-20210829132547295"></p><blockquote><p>合口双元音<br>/aʊ/的起始音是低位后元音/a/，然后向高位后元音/ʊ/的舌位过渡，此时舌位稍抬高，口型变小<br>唇形：呈圆形，并向前稍微突出<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>类似于“啊”的音(/a/，比/ɑ/发音考前)和/ʊ/一前一后紧密发出</li><li>发这个音口腔是有变化的</li><li>类似于“嗷”(汉语拼音ao)，但是更饱满，更长</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291339255.png" alt="image-20210829133947614"></p><p><strong>常见错误</strong></p><ul><li>用汉语拼音的ao来取代，导致嘴型过小，发音不够饱满</li><li>把双元音/aʊ/读成单元音/ɔː/</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291341107.png" alt="image-20210829134145181"></p><hr><h6 id="əʊ"><a href="#əʊ" class="headerlink" title="/əʊ/"></a>/əʊ/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291342595.png" alt="image-20210829134236156"> </p><p><code>o</code>pen    h<code>o</code>pe p<code>o</code>st</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/ə/和/ʊ/连在一起</li><li>在句中书写时为/əʊ/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291345251.png" alt="image-20210829134539757"></p><blockquote><p>开口双元音<br>舌头在口腔中自然放松，/əʊ/的起始音是/ə/，发音时向/ʊ/方向过渡，口型也相应的做一些变化<br>唇形：由扁平转化为圆唇<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/ə/和/ʊ/一前一后紧密发出</li><li>发这个音口腔是有变化的</li><li>类似于“欧”（汉语拼音ou）</li><li>英音更靠前</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291350624.png" alt="image-20210829135051419"></p><p><strong>常见错误</strong></p><ul><li>发音避免过于夸张（尤其英音），读成近似/aʊ/的音</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291352476.png" alt="image-20210829135245036"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291353911.png" alt="image-20210829135307845"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291356537.png" alt="image-20210829135628430"></p><hr><h5 id="1-2-2-集中双元音"><a href="#1-2-2-集中双元音" class="headerlink" title="1.2.2 集中双元音"></a>1.2.2 集中双元音</h5><h6 id="ɪə"><a href="#ɪə" class="headerlink" title="/ɪə/"></a>/ɪə/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291357729.png" alt="image-20210829135730011"> </p><p>ar<code>ea</code>    id<code>ea</code>    var<code>iou</code>s</p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/ɪ/和/ə/连在一起</li><li>在句中书写时为/ɪə/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291408883.png" alt="image-20210829140806771"></p><blockquote><p>集中双元音<br>发音时，舌身从前元音/ɪ/的近似位置向/ə/的方向滑动，在整个滑动过程中，唇形是非圆唇，唇由扁到开<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/ɪ/和/ə/一前一后紧密发出</li><li>发音一定要连贯</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291418505.png" alt="image-20210829141840397"></p><p><strong>常见错误</strong></p><ul><li>把其中的/ɪ/读成普通话中的“医”</li><li>把其中的/ə/读成普通话中的“额”</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291421663.png" alt="image-20210829142100132"></p><ul><li>从/ɪ/到/ə/过渡时舌端往口腔后部上扬，导致末尾/ə/误读成卷舌</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291423422.png" alt="image-20210829142300344"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291424394.png" alt="image-20210829142427754"></p><hr><h6 id="eə"><a href="#eə" class="headerlink" title="/eə/"></a>/eə/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291425887.png" alt="image-20210829142515843"> </p><p>h<code>air</code>    p<code>air</code>    ch<code>air</code></p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/e/和/ə/连在一起</li><li>在句中书写时为/eə/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291430983.png" alt="image-20210829143037513"></p><blockquote><p>集中双元音<br>发音时，舌头从前元音/e/的位置上开始移向/ə/，形成的音便是/eə/<br>唇形：非圆唇<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/e/和/ə/一前一后快速紧密发出</li><li>发音一定要连贯</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291439789.png" alt="image-20210829143933520"></p><p><strong>常见错误</strong></p><ul><li>把其中的/e/读成普通话中的“爱”</li><li>把其中的/ə/读成普通话中的“尔”</li><li>错误发成/æə/，/ær/，/aɪə/或/aɪr/</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291727995.png" alt="image-20210829172633869"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291742813.png" alt="image-20210829174206421"></p><hr><h6 id="ʊə"><a href="#ʊə" class="headerlink" title="/ʊə/"></a>/ʊə/</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108291742722.png" alt="image-20210829174231770"> </p><p>t<code>our</code>    p<code>oor</code>    m<code>oor</code></p><p><strong>音标符号</strong></p><ul><li>DJ音标中的双元音</li><li>/ʊ/和/ə/连在一起</li><li>在句中书写时为/ʊə/，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292020722.png" alt="image-20210829202002428"></p><blockquote><p>集中双元音<br>发音时，舌头从/ʊ/的位置开始，朝/ə/的方向滑动，在此过程中形成的音便是/ʊə/<br>唇形：由微圆到开<br>声带：振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>它是双元音(diphthong)，由两个元音组成</li><li>/ʊ/和/ə/一前一后快速紧密发出</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292008825.png" alt="image-20210829200825212"></p><p><strong>常见错误</strong></p><ul><li>把/ʊə/读成/ɔː/</li><li>/ʊə/和/ɔː/听起来有点像，但是往往拼写不同</li><li>前者是双元音，后者是单元音</li></ul><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292011973.png" alt="image-20210829201104189"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292011048.png" alt="image-20210829201137857"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292013225.png" alt="image-20210829201321890"></p>]]></content>
    
    
    <summary type="html">音标</summary>
    
    
    
    <category term="英语" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="IPA" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/IPA/"/>
    
  </entry>
  
  <entry>
    <title>DJ音标——辅音</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87-%E8%BE%85%E9%9F%B3/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E9%9F%B3%E6%A0%87-%E8%BE%85%E9%9F%B3/</id>
    <published>2021-09-16T17:27:15.097Z</published>
    <updated>2021-09-17T02:49:44.613Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="2-辅音"><a href="#2-辅音" class="headerlink" title="2. 辅音"></a>2. 辅音</h3><h4 id="2-1-爆破音"><a href="#2-1-爆破音" class="headerlink" title="2.1 爆破音"></a>2.1 爆破音</h4><h5 id="p-b"><a href="#p-b" class="headerlink" title="/p/ /b/"></a>/p/ /b/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292042618.png" alt="image-20210829204250371" style="zoom:50%;" /> <p><code>p</code>eak    <code>p</code>et    <code>p</code>ig<br><code>b</code>reak    <code>b</code>ed    <code>b</code>ig</p><p><strong>音标符号</strong></p><ul><li>/p/,/b/的音标符号分别是小写字母p，b</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301036048.png" alt="image-20210830103650322"></p><blockquote><p>双唇紧闭，气流挡在口腔内，形成一定的气之后，猛张开双唇，气流爆发而出<br>[p]有气无声，[b]有声有气</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/p/发音技巧</strong></p><ul><li>如果p后有元音<ul><li>比如：<code>p</code>eak</li><li>送气音(aspirated)</li><li>国际音标：[p^h^]</li><li>普通话“婆”的声母</li></ul></li><li>如果p紧跟s<ul><li>比如：s<code>p</code>eak</li><li>不送气音(unaspirated)</li><li>国际音标：[p]</li><li>普通话“菠”的声母(汉语拼音b) != 英语/b/</li><li>speak不读做/sbi:k/</li></ul></li><li>如果p后紧跟某些辅音<ul><li>嘴巴闭上就基本完成发音</li><li>国际音标：[p^┐^]</li><li>比如：tra<code>p</code> door,hel<code>p</code> me,lea<code>p</code> year</li><li>无声除阻音(unreleased stop)(也称“不完全爆破音”)</li></ul></li><li>这些不同发音被称作“同位异音”或者“音位变体”(allophone)</li><li>请再听以下单词中字母p发音的区别：<ul><li>peak  [p^h^]</li><li>speak  [p]</li><li>trapdoor  [p^┐^]</li></ul></li></ul><p><strong>/b/发音技巧</strong></p><ul><li>/b/在中文普通话中并不存在</li><li>/b/是浊辅音(voiced consonant),声带是振动</li><li>中文的“菠”的声母(汉语拼音b)是清音，国际音标为[p]</li><li>汉语拼音b相当于speak中的/p/，而不是英语的/b/</li><li>所以外国人学中文常常也落入误区：“北京”，“我不知道”，“皮包”，“旁边”</li><li>发英语/b/时，需加强声带振动(把手放在喉咙处检查)</li><li>请听以下发音区别：<ul><li>不可 b</li><li>book  /b/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292125152.png" alt="image-20210829212541909"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292039986.png" alt="image-20210829203946921"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292040927.png" alt="image-20210829204015892"></p><p><strong>常见错误</strong></p><ul><li>在以辅音结尾的单词后面加上一个不存在的元音</li><li>以下是错误读音，请避免：<ul><li>speak  <del>死比克</del></li><li>lap       <del>辣普</del></li><li>lab       <del>辣不</del></li></ul></li><li>这点在发无声除阻音时，尤其要避免：<ul><li>trapdoor    <del>tra普door</del></li><li>help me     <del>hel普me</del></li><li>leap year    <del>lea普year</del></li></ul></li></ul><hr><h5 id="t-d"><a href="#t-d" class="headerlink" title="/t/ /d/"></a>/t/ /d/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292140775.png" alt="image-20210829213959192" style="zoom:67%;" /> <p><code>t</code>ip    <code>t</code>ea    <code>t</code>est<br><code>d</code>ip    <code>d</code>eep  <code>d</code>esk</p><p><strong>音标符号</strong></p><ul><li>/t/,/d/的音标符号分别是小写字母t，d</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301043944.png" alt="image-20210830104350647"></p><blockquote><p>舌尖抵住上齿龈，然后放开，使气流爆破而出，吐气很强<br>[t]有气无声，[d]有声有气</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/t/的发音技巧</strong></p><ul><li>如果t后有元音<ul><li>比如：<code>t</code>op</li><li>送气音(aspirated)</li><li>国际音标：[t^h^]</li><li>普通话“兔”的声母</li></ul></li><li>如果t紧跟s<ul><li>比如：s<code>t</code>op</li><li>不送气音(unaspirated)</li><li>国际音标：[t]</li><li>普通话“刀”的声母(汉语拼音d) != 英语/d/</li><li>stop不读做/sdɒp/</li></ul></li><li>如果t后紧跟某些辅音<ul><li>嘴巴闭上就基本完成发音</li><li>国际音标：[t^┐^]</li><li>比如：se<code>t</code>back,forge<code>t</code> me</li><li>无声除阻音(unreleased stop)(也称“不完全爆破音”)</li></ul></li><li>美式英语中，元音之间的字母t(尤其是非重读音节中)，读作闪音(flap)<ul><li>国际音标：[ɾ]</li><li>舌尖在上牙齿上方硬腭处，阻挡气流，轻轻一弹</li><li>比如：water,batter,little</li><li>在标准英音中仍然读作“正常的t”：water,better,little</li></ul></li><li>美式英语中，鼻音/n/之前的t往往读作“喉塞音”(glottal stop)<ul><li>国际音标：[ʔ]</li><li>声门阻住气流，像是把声音“卡在喉咙”里一样</li><li>比如：certain,important,button</li><li>在标准英音中仍读作“正常t”：certain,important,button</li></ul></li><li>美式英语中，鼻音/n/之后的t往往基本听不见<ul><li>比如：winter ≈ winner, interview ≈ innerview</li><li>甚至有的词中，t前后都有鼻音，比如：mountain</li><li>在标准英音中仍然读作“正常t”：winter,interview,mountain</li></ul></li><li>这些不同发音被称作“同位异音”或“音位变体”(allophone)</li><li>请再听一下单词总字母t的发音区别<ul><li>top    [t^h^]</li><li>stop  [t]</li><li>setback    [t^┐^]</li><li>better       [ɾ] (美音)</li><li>button      [ʔ] (美音)</li><li>winter       [] (美音)</li></ul></li></ul><p><strong>/d/的发音技巧</strong></p><ul><li>/d/在中文普通话中并不存在</li><li>/d/是浊辅音(voiced consonant)，声带振动</li><li>中文中的“刀”的声母(汉语拼音d)是清音，国际音标为[t]</li><li>汉语拼音d相当于stop中的/t/，而不是英语的/d/</li><li>汉语拼音之所以使用d，主要是为了实用和书写方便</li><li>所以外国人在学中文常常也落入误区：“很大”，“很多”；“特别”，“太好了”</li><li>发英语/d/时，需加强声带振动(把手放在喉咙处检查)</li><li>请听以下发音区别：<ul><li>菜刀  d</li><li>dog   /d/</li></ul></li><li>在美音中，/d/和/t/一样会有闪音的读法：metal ≈ medal;鼻音也会影响/d/的读音：abandon</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292230363.png" alt="image-20210829223023074"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108292231613.png" alt="image-20210829223137545"></p><p> <strong>常见错误</strong></p><ul><li>在以辅音结尾的单词后面加上一个不存在的元音</li><li>以下是错误读音，请避免：<ul><li>bat    <del>爸特</del></li><li>bad   <del>爸的</del></li><li>bet   <del>拜特</del></li><li>bed   <del>拜的</del></li></ul></li><li>这点在发无声除阻音时，尤其要避免：<ul><li>setback    <del>塞特百科</del></li><li>batman    <del>白特曼</del></li><li>forget me  <del>forge特米</del></li></ul></li></ul><hr><h5 id="k-ɡ"><a href="#k-ɡ" class="headerlink" title="/k/ /ɡ/"></a>/k/ /ɡ/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301054778.png" alt="image-20210830105357626" style="zoom:67%;" /> <p><code>k</code>it    <code>K</code>ate    <code>c</code>up<br><code>g</code>it    <code>g</code>ate    <code>g</code>ut</p><p><strong>音标符号</strong></p><ul><li>/k/,/g/的音标符号分别是小写字母k，g</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301112036.png" alt="image-20210830111230363"></p><blockquote><p>舌后位向上升，抵住软腭，然后放开，使气流爆破而出，吐气较强<br>[k]有气无声，[g]有气有声</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/k/的发音技巧</strong></p><ul><li><p>如果k后有元音</p><ul><li>比如：<code>k</code>ite</li><li>送气音(aspirated)</li><li>国际音标：[k^h^]</li><li>普通话“开”的声母</li></ul></li><li><p>如果k紧跟s</p><ul><li>比如：sky</li><li>不送气音(unaspirated)</li><li>国际音标：[k]</li><li>普通话“该”的声母(汉语拼音g) != 英语/g/</li><li>/sky/不读做/sgaɪ/</li></ul></li><li><p>如果k后紧跟某些辅音</p><ul><li>把嘴巴闭上基本完成发音</li><li>国际音标：[k^┐^]</li><li>比如：do<code>c</code>tor,ba<code>ck</code>door,ma<code>ke</code> dinner</li><li>无声除阻音(unreleased stop)(也称“不完全爆破音”)</li></ul></li><li><p>这些不同发音被称作“同位异音”或“音位变体”(allophone)</p></li><li><p>请再听一下单词中字母k的发音区别：</p><ul><li>kite    [k^h^]</li><li>sky     [k]</li><li>dictor [k^┐^]</li></ul></li></ul><p><strong>/ɡ/的发音技巧</strong></p><ul><li>/ɡ/在中文普通话里并不存在</li><li>/ɡ/是浊辅音(voiced consonant)，声带振动</li><li>中文的“该”的声母(汉语拼音g)是清音，国际音标为[k]</li><li>汉语拼音g相当于sky中的/k/，而不是英语的/ɡ/</li><li>汉语拼音之所以使用g，主要是为了使用和书写方便</li><li>所以外国人学中文也常常落入误区：“国家”，“故事”；“可以”，“我看看”</li><li>发英语/ɡ/时，需要加强声带振动(把手放在喉咙处检查)</li><li>请听以下发音<ul><li>哥哥  g</li><li>goose  /ɡ/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301203997.png" alt="image-20210830120317686"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301204643.png" alt="image-20210830120415614"></p><p><strong>常见错误</strong></p><ul><li>在以辅音结尾的单词后面加一个不存在的元音</li><li>以下是错误读音，请避免：<ul><li>pick  <del>匹克</del></li><li>pig    <del>匹格</del></li></ul></li><li>这点在发无声除阻音时，尤其要避免：<ul><li>doctor    <del>刀客特</del></li><li>backdoor <del>爸刻刀</del></li><li>make dinner  <del>没课滴呢</del></li></ul></li></ul><hr><h4 id="2-2-摩擦音"><a href="#2-2-摩擦音" class="headerlink" title="2.2 摩擦音"></a>2.2 摩擦音</h4><h5 id="f-v"><a href="#f-v" class="headerlink" title="/f/ /v/"></a>/f/ /v/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301210305.png" alt="image-20210830121003813" style="zoom:67%;" /> <p><code>f</code>at    <code>f</code>it    <code>f</code>erry<br><code>v</code>alley  <code>v</code>isit    <code>v</code>ery</p><p><strong>音标符号</strong></p><ul><li>/f/,/v/的音标符号分别是小写字母f，v</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301215669.png" alt="image-20210830121521233"></p><blockquote><p>上齿轻触下唇：气流从唇齿之间的空隙通过，唇齿发出摩擦而成<br>[f]有气无声，[v]有声有气</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/f/和普通话“夫”的声母(汉语拼音f)基本一样</li><li>/v/是“声带振动版的”/f/</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301223086.png" alt="image-20210830122309491"></p><p><strong>常见错误</strong></p><ul><li>在以辅音结尾的单词后面加一个不存在的元音</li><li>以下是错误读音，请避免：<ul><li>life   <del>来福</del></li><li>drive  <del>拽乌</del></li><li>leaf    <del>力福</del></li><li>live    <del>力乌</del></li></ul></li></ul><hr><h5 id="s-z"><a href="#s-z" class="headerlink" title="/s/ /z/"></a>/s/ /z/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301237131.png" alt="image-20210830123709608" style="zoom:67%;" /> <p><code>s</code>ip    <code>s</code>oon  <code>s</code>oup<br><code>z</code>ip    <code>z</code>oom <code>z</code>oo</p><p><strong>音标符号</strong></p><ul><li>/s/,/z/的音标符号分别是小写字母s，z</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301240761.png" alt="image-20210830124025527"></p><blockquote><p>舌尖接近上齿龈，舌尖与上齿龈之间的距离较小；气流从舌头与硬腭和齿龈之间通过，发生摩擦<br>[s]有气无声，[z]有声有气</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/s/的发音技巧</strong></p><ul><li>英语的/s/，/z/都属于所谓的“摩擦音”，不同于爆破音</li><li>/s/和普通话“斯”的声母(汉语拼音s)一样</li><li>/s/和/z/很像，区别就在于/z/发音时声带振动</li></ul><p><strong>/z/的发音技巧</strong></p><ul><li>/z/在普通话里不存在，不同于汉语拼音z</li><li>汉语拼音z属于“破擦音”，国际音标为[ts]</li><li>汉语拼音之所以使用z，主要是为了实现和书写便利</li><li>所以外国人学中文也常落入误区：“再见”，“请坐”</li><li>可以把英语/z/想作浊音版声带振动的/s/</li><li>请听以下发音的区别；<ul><li>再见 z</li><li>zoo  /z/</li></ul></li><li>英语中大量的字母s其实发/z/的音而不是/s/，比如大多数复数词尾s，以及whose,goose,days,boys等</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301250709.png" alt="image-20210830125034633"></p><p><strong>常见错误</strong></p><ul><li>因为英语字母s经常发/z/而不是/s/，所以也容易混读</li><li>以下是错误读音，请避免<ul><li>lose   <del>露丝</del></li><li>please  <del>普里斯</del></li><li>whose  <del>胡思</del></li></ul></li><li>在英语/s/，/z/结尾的音节后加上一个不存在的元音</li><li>也就是普通话“斯”和“资”的韵母(它和 /ɪ/的发音不太一样)</li><li>以下是错误读音，请避免：<ul><li>books    <del>不可斯</del></li><li>peace     <del>匹斯</del></li><li>once       <del>万斯</del></li><li>lose        <del>露字</del></li><li>please    <del>普利兹</del></li><li>whose    <del>胡子</del></li></ul></li></ul><hr><h5 id="θ-ð"><a href="#θ-ð" class="headerlink" title="/θ/ /ð/"></a>/θ/ /ð/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301300949.png" alt="image-20210830130012095" style="zoom:67%;" /> <p><code>th</code>ree    <code>th</code>in    <code>th</code>ank<br><code>th</code>ere    <code>th</code>at    <code>th</code>ose</p><hr><p><strong>音标符号</strong></p><ul><li>/θ/是希腊字母Theta(读作/`θiːtə/或 /`θeɪtə/)，经常在数学里用到</li><li>/ð/古英语字母，也经常在数学中用到</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301302932.png" alt="image-20210830130213752"></p><blockquote><p>舌头放在略微张开的上下齿之间，并略微接触，舌尖精灵向下齿用力，其流通过舌尖和上下齿尖的缝隙发生摩擦而发音；两唇之间的距离很窄<br>/θ/不振动声带，/ð/振动声带</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/θ/,/ð/和/s/,/z/一样，属于摩擦音</li><li>不同在于舌尖不在上下牙齿后方，而是在上下牙齿之间，被轻轻咬住</li><li>可以把/θ/想作是普通话“斯”声母(汉语拼音s)的“大舌头版本”</li><li>/ð/和/θ/的区别在于/ð/的发音要求声带振动</li><li>/ð/和/θ/在普通话里不存在</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301314885.png" alt="image-20210830131452818"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301315737.png" alt="image-20210830131532341"></p><p><strong>常见错误</strong></p><ul><li>最常见错误就是把它们当作/s/和/z/来读</li><li>不要觉得“伸舌头被牙齿咬住”这个动作很麻烦，故而省略</li><li>这个音的发音往往能体现语音好坏</li><li>请比较下列单词中/s/和/θ/,/z/和/ð/的区别<ul><li>sank       thank</li><li>sin          thin</li><li>truce      truth</li><li>breeze   breathe</li><li>buzz       bathe</li><li>zip          this</li></ul></li></ul><hr><h5 id="ʃ-ʒ"><a href="#ʃ-ʒ" class="headerlink" title="/ʃ/  /ʒ/"></a>/ʃ/  /ʒ/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301321913.png" alt="image-20210830132111566" style="zoom:67%;" /> <p>me<code>sh</code>    fre<code>sh</code>   lea<code>sh</code><br>mea<code>s</code>ure    plea<code>s</code>ure   deci<code>s</code>ion</p><p><strong>音标符号</strong></p><ul><li>/ʃ/的符号像是拉长的字母s，注意它不是微积分里的∫</li><li>/ʒ/的符号像字母z的下方加上一个“小钩子”，甚至像数字3</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301324898.png" alt="image-20210830132413871"></p><blockquote><p>舌尖端接近上齿龈后，舌身要向上抬向硬腭，气流从舌和硬腭及上齿龈间的缝隙中通过，发出摩擦音<br>/ʃ/不振动声带，/ʒ/振动声带</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/ʃ/ 的发音技巧</strong></p><ul><li>/ʃ/,/ʒ/都属于所谓的“摩擦音</li><li>/ʃ/和普通话“史”的声母(汉语拼音的sh)非常像</li><li>汉语拼音sh(国际音标[ʂ])的发音舌端更靠后</li></ul><p><strong>/ʒ/的发音诀窍</strong></p><ul><li>/ʒ/和/ʃ/的区别就在于声带振动</li><li>/ʒ/听上去虽然和普通话的“日”的声母(汉语拼音r)很相似，但他们并不相同</li><li>汉语拼音的r(国际音标[ɻ])的发音舌头更往后卷</li><li>请听以下发音区别<ul><li>然后  r</li><li>measure  /ʒ/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301348642.png" alt="image-20210830134833604"></p><p><strong>常见错误</strong></p><ul><li>有人会把/ʃ/发成汉语拼音的s，就是所谓的“普通话平翘舌不分”，请避免<ul><li>mesh    <del>mes</del></li><li>fresh     <del>fres</del></li><li>leash     <del>leas</del></li></ul></li><li>有人会把/ʒ/当作汉语拼音的zh<ul><li>measure    <del>mea着</del></li><li>pleasure    <del>plea着</del></li><li>dicision     <del>deci振</del></li></ul></li><li>在/ʃ/和/ʒ/结尾的音节后面加上一个不存在的元音<ul><li>mesh  <del>me史</del></li><li>fresh   <del>fre史</del></li><li>leash   <del>lea史</del></li></ul></li></ul><hr><h5 id="h"><a href="#h" class="headerlink" title="/h/"></a>/h/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301359279.png" alt="image-20210830135944830" style="zoom:67%;" /> <p><code>h</code>at   <code>h</code>ot    <code>h</code>igh</p><p><strong>音标符号</strong></p><ul><li>/h/的音标符号分别是小写字母h</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301402047.png" alt="image-20210830140247188"></p><blockquote><p>舌身平放于口腔中并使其保持松弛状态，气流通过声门时发生轻微摩擦，然后从口腔中出去；声带不振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>舌面后部抬起接近软腭，形成缝隙，让气流向外通过，声带不振动</li><li>和中文普通话“哈”的声母(汉语拼音h)相似，但是不完全相同</li><li>普通话h舌位比英语的/h/的舌位要更高<ul><li>后 h</li><li>home /h/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301409053.png" alt="image-20210830140949778"></p><p><strong>常见错误</strong></p><ul><li>注意不要发成“粗犷”的“喉音”<ul><li>have   <del>khave</del></li><li>happy    <del>khappi</del></li><li>Halloween   <del>khalloween</del></li></ul></li></ul><hr><h5 id="r"><a href="#r" class="headerlink" title="/r/"></a>/r/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301412571.png" alt="image-20210830141250791" style="zoom:67%;" /> <p><code>r</code>at    <code>r</code>ed    <code>r</code>ead</p><p><strong>音标符号</strong></p><ul><li>/r/的音标符号分别是小写字母r</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301414107.png" alt="image-20210830141450791"></p><blockquote><p>舌尖向后齿龈后部与硬腭连接处翘起，气流在卷起的舌尖与连接处划过；声带振动</p></blockquote><p><strong>发音技巧</strong></p><p><strong>英音</strong></p><ul><li>当字母r出现在元音之前<ul><li>双唇突出并圆唇，舌尖上扬，气流从舌面上方滑出，声带振动</li><li>和普通话“日”的声母(汉语拼音r)相似，但是并不相同</li><li>发英音/r/的音时，有圆唇动作<ul><li>日  r</li><li>right  /r/</li></ul></li><li>发英语/r/的音时，舌尖指向上齿龈，而不是普通话r那样指向后一定的硬腭</li></ul></li><li>当字母r出现在元音之后<ul><li>一般不发音或读作中央元音(/ə/)</li><li>如果r出现在单词末尾，而下一个单词以元音开头，则连读时一般读出<ul><li>bear it</li><li>fear us</li><li>gear up</li></ul></li></ul></li></ul><p><strong>美音</strong></p><ul><li>美音和英音的区别在于：当字母r出现在元音之后，字母r往往会让元音“r化”(r-coloring),而在英音中则一般不发音或读作中央元音(/ə/)</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301426825.png" alt="image-20210830142626588" style="zoom:67%;" /> </li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301426327.png" alt="image-20210830142554567" style="zoom:67%;" /> </li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301427103.png" alt="image-20210830142700928"></p><p><strong>英音</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301427905.png" alt="image-20210830142752769"></p><p><strong>美音</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301428298.png" alt="image-20210830142832818"></p><p><strong>常见错误</strong></p><ul><li>最常见的错误就是用汉语拼音r来取代它</li><li>汉语拼音的r的发音是不需要圆唇的，而英语/r/需要圆唇</li><li>如果用拼音r来读英语，就会有以下错误读音<ul><li>red      <del>日ed</del></li><li>read    <del>日ead</del></li><li>right    <del>日ight</del></li></ul></li><li>这个区别导致外国人读中文r经常读错</li></ul><hr><h4 id="2-3-破擦音"><a href="#2-3-破擦音" class="headerlink" title="2.3 破擦音"></a>2.3 破擦音</h4><h5 id="tʃ-dʒ"><a href="#tʃ-dʒ" class="headerlink" title="/tʃ/  /dʒ/"></a>/tʃ/  /dʒ/</h5><p><code>ch</code>uck    <code>ch</code>op    <code>ch</code>oke<br><code>j</code>ug        <code>j</code>ob      <code>j</code>oke</p><p><strong>音标符号</strong></p><ul><li>/tʃ/的符号是/t/和/ʃ/连在一起，而/dʒ/的符号是/d/和/ʒ/连在一起</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301719736.png" alt="image-20210830171939657"></p><blockquote><p>双唇稍微张开，舌前端向上置于牙龈后，用力把气压送出去，<br>/tʃ/无需振动声带， /dʒ/需要震动声带</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/tʃ/可以理解由/t/和/ʃ/构成，爆破音/t/和摩擦音/ʃ/“同时发出”，声带不振动</li><li>/dʒ/可以理解由/d/和/ʒ/构成，爆破音/d/和摩擦音/ʒ/“同时发出”，声带不振动</li><li>所以这两个音被归类为所谓的“破擦音”(爆破+摩擦)</li><li>/tʃ/和普通话“吃”的声母(汉语拼音ch)非常像，但ch舌端更靠后</li><li>/dʒ/和/tʃ/的区别就在于声带振动</li><li>/dʒ/和普通话“知”的声母(汉语拼音的zh)相似，但zh舌端更靠后</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108301729849.png" alt="image-20210830172923020"></p><p><strong>常见错误</strong></p><ul><li>在英语/tʃ/,/dʒ/结尾的音节后加上一个不存在的元音<ul><li>catch    <del>开吃</del></li><li>pitch     <del>匹吃</del></li><li>page      <del>配知</del></li></ul></li></ul><hr><h5 id="ts-dz"><a href="#ts-dz" class="headerlink" title="/ts/  /dz/"></a>/ts/  /dz/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108302056812.png" alt="image-20210830205635725" style="zoom:67%;" /> <p>ba<code>ts</code>    da<code>tes</code>    ki<code>tes</code><br>ban<code>ds</code>    dee<code>ds</code>    ki<code>ds</code></p><p><strong>音标符号</strong></p><ul><li>/ts/的符号是/t/和/s/连在一起，而/dz/的符号是/d/和/z/连在一起</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108302107371.png" alt="image-20210830210746656"></p><blockquote><p>发音时舌前端抵住上齿龈，堵住气流，然后略下降，气流送出口腔<br>/ts/是清辅音，/dz/是浊辅音</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/ts/可以理解为由/t/和/s/构成，爆破音/t/和摩擦音/s/“同时”发出，声带不振动</li><li>/dz/可以理解为由/d/和/z/构成，爆破音/d/和摩擦音/z/“同时”发出，声带振动</li><li>所以这两个音被归类为所谓的“破擦音”(爆破+摩擦)</li><li>/ts/和普通话的“词”的声母(汉语拼音c)基本一致</li><li>/dz/和/ts/的区别就在于声带振动</li><li>/dz/和普通话“资”的声母(汉语拼音的z)相似，但并不完全一样</li><li>汉语拼音的z国际音标写作[ts]，是[t]和[s]构成，不送气，是个“清”音</li><li>但是英语/dz/是的“浊”音<ul><li>资本    z</li><li>kids    /dz/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011214736.png" alt="image-20210901121357291"></p><p><strong>常见错误</strong></p><ul><li>有些人会把/ts/读成/tʃ/，把/dz/读成/dʒ/，也就是所谓的“平翘舌不分”</li><li>发/ts/和/dz/时，上下牙齿基本闭合，舌尖不卷，而发/tʃ/和/dʒ/时，上下齿不闭合，而且卷舌</li><li>以下是错误读音：<ul><li>bats     <del>白吃</del></li><li>dates   <del>带齿</del></li><li>deeds  <del>地址</del></li></ul></li><li>在英语/ts/，/dz/结尾的音节后加上一个不存在的元音</li><li>也就是普通话“吃”和“知”的韵母(它和/ɪ/的发音不一样)</li><li>请注意英语中辅音结尾的发音要干脆，以下是错误读音，请避免：<ul><li>bats      <del>白词</del></li><li>dates    <del>带词</del></li><li>deeds   <del>地字</del></li></ul></li></ul><hr><h5 id="tr-dr"><a href="#tr-dr" class="headerlink" title="/tr/  /dr/"></a>/tr/  /dr/</h5><p><code>tr</code>ip    <code>tr</code>ue    <code>tr</code>ee<br><code>dr</code>ip    <code>dr</code>ew   <code>dr</code>eam</p><p><strong>音标符号</strong></p><ul><li>/tr/的符号是/t/和/r/连在一起，而/dr/的符号是/d/和/r/连在一起</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011242142.png" alt="image-20210901124224066"></p><blockquote><p>/tr/，/dr/分别是tr，dr的发音，齿龈后部破擦辅音，发音时舌身与/r/相似，舌尖贴齿龈后部，气流冲破阻碍发出短促的/t/(/d/)后立即发/r/，/tr/是清辅音，/dr/是浊辅音</p></blockquote><p><strong>发音技巧</strong></p><ul><li>/tr/可以理解为由/t/和/r/构成，爆破音/t/和摩擦音/r/“同时”发出，声带不振动</li><li>/dr/可以理解为由/d/和/r/构成，爆破音/d/和摩擦音/r/“同时”发出，声带振动</li><li>所以这两个音被归类为所谓的“破擦音”(爆破+摩擦)</li><li>/dr/和/tr/的区别在于声带振动</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011258050.png" alt="image-20210901125841890"></p><p><strong>常见错误</strong></p><ul><li>/tr/和/dr/最常见的错误就是把他们同/tʃ/和/dʒ/弄混</li><li>我们可以把/tr/理解为比/tʃ/“更卷舌”，而/dr/比/dʒ/“更卷舌”</li><li>请听以下单词的区别：<ul><li>train chain</li><li>drive  jive</li><li>true   choose</li><li>drop  job</li><li>tribe  chime</li><li>drian  Jane</li></ul></li></ul><p><strong>注意</strong></p><ul><li>“破擦音”最早的版本包括：/tʃ/和/dʒ/，/ts/和/dz/，/tr/和/dr/</li><li>有些语音学家主张把/ts/和/dz/，/tr/和/dr/从音标里“除名”，把他们归入“辅音连缀”(像speak中的sp，sky中的sk，great中的gr一样)</li><li>中国大陆的英语教学中的DJ音标一直还保留着这四个音标</li><li>KK音标从美国传入台湾，其中也没有/ts/和/dz/，/tr/和/dr/</li></ul><hr><h4 id="2-4-鼻音"><a href="#2-4-鼻音" class="headerlink" title="2.4 鼻音"></a>2.4 鼻音</h4><h5 id="m-n-ŋ"><a href="#m-n-ŋ" class="headerlink" title="/m/  /n/  /ŋ/"></a>/m/  /n/  /ŋ/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021420468.png" alt="image-20210902142025591" style="zoom:67%;" /> <p>su<code>m</code>    su<code>n</code>    su<code>ng</code></p><p><strong>音标符号</strong></p><ul><li>/m/,/n/的音标符号分别是小写字母m，n</li><li>/ŋ/的音标符号像是字母n右边往下延伸再往回勾一下</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><strong>/m/</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011357995.png" alt="image-20210901135710659"></p><blockquote><p>舌身平放在口腔内，双唇紧闭，软腭下垂，气流在口腔内形成一定的气压，和发/b/和/p/音时的舌位一样，气流从鼻孔中出来，声带振动</p></blockquote><p><strong>/n/</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011924513.png" alt="image-20210901135742047"></p><blockquote><p>舌尖抵住上齿龈，软腭下垂，气流从鼻孔出来，声带振动</p></blockquote><p><strong>/ŋ/</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109011358073.png" alt="image-20210901135824993"></p><blockquote><p>舌后部升起抵住软腭，同时软腭下垂气流从鼻腔中出来，声带振动</p></blockquote><p><strong>发音技巧</strong></p><p><strong>/m/</strong></p><ul><li>在元音之前，和普通话“妈”的声母(汉语拼音m)相似</li><li>在元音之后，发音方式相似，但只是双唇闭拢发鼻音</li></ul><p><strong>/n/</strong></p><ul><li>在元音之前，和普通话“拿”的声母(汉语拼音n)相似</li><li>/n/要比/m/的舌位高，尤其是舌端部分</li><li>在元音之后，发音方式相似，轻微通过鼻子出气</li></ul><p><strong>/ŋ/</strong></p><ul><li>和/n/相似，但舌后端抵住软腭，而不像/n/一样舌前端抵住上齿龈</li><li>普通话中的后鼻音往往没有英语中那么清晰明显</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021230932.png" alt="image-20210902123033389"></p><p><strong>常见错误</strong></p><p><strong>/m/</strong></p><ul><li>元音之前的/m/大多数人不会犯太大错</li><li>/m/在元音之后，有些人会加一个不存在的元音/uː/  或者/ʊ/，读成“母”</li><li>以下是错误读音，请避免<ul><li>room     <del>乳母</del></li><li>home    <del>后母</del></li><li>tomb    <del>兔母</del></li></ul></li></ul><p><strong>/n/</strong></p><ul><li>元音之前的/n/大多数人不会犯太大错</li><li>有些地区的人容易”n,l”不分，请比较<ul><li>nice    lice</li><li>no      low</li><li>need  lead</li></ul></li><li>/n/在元音之后(an,en,in,on,un)，请勿照搬拼音<ul><li>an在汉语里读安，英语里重读时多半读/æn/，bank不要读成半颗</li><li>en在汉语里读恩，英语里重度时多半读/en/，enter不要读成嗯特</li><li>in在汉语拼音里读因，英语里重读时多半读/ɪn/，两者相似，但是汉语的鼻音没有英语重，所以英语的/n/要读明显，tin不要读成听</li><li>on在汉语里不存在，但是汉语拼音里有ong和ang，很多人用来代替英语的on，而on在英语里重读多半读  /ʌn/，ton不要读成痛或者烫</li><li>un在汉语拼音里读un，英语里重读时多半读/ʌn/，trunk不要读成春克</li></ul></li></ul><p><strong>/ŋ/</strong>  </p><ul><li><p>普通话也有后鼻音，其中也包含/ŋ/ ，但是没有英语那么明显</p></li><li><p>英语国家的人为了强调，会发音明显，比如</p><ul><li>sing   /sɪŋ/</li><li>sung   /sʌŋ/</li></ul></li><li><p>请比较</p><ul><li>long   龙</li></ul></li><li><p>ing后如果出现元音字母，连读，这个音就更明显，比如：</p><ul><li>singer    /`sɪŋə/</li><li>singing  /`sɪŋɪŋ/</li><li>sing it    /sɪŋ ɪt/</li></ul></li><li><p>很多人发音不到位，不读甚至把ing当in来读：</p><ul><li>sing    <del>sin</del></li><li>singer  <del>sin er</del></li><li>singing <del>sin in</del></li><li>sing it    <del>sin it</del></li></ul></li><li><p>也有人把ng拼写的末尾g当作/ɡ/来读，比如把ing拆分成in + g，而不是正确的i + ng</p><ul><li>singer    <del>sin-ger</del></li><li>singing  <del>sin-ging</del></li></ul></li><li><p>/ŋ/在平时口语(非正式场合)的ing里经常被省略</p></li><li><p>歌词，影视剧里也会听到：</p><ul><li>dancin`</li><li>rainin`</li><li>movin`</li><li>what`s goin` on</li></ul></li></ul><hr><h4 id="2-5-舌边音"><a href="#2-5-舌边音" class="headerlink" title="2.5 舌边音"></a>2.5 舌边音</h4><h5 id="l"><a href="#l" class="headerlink" title="/l/"></a>/l/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021420802.png" alt="image-20210902142052174" style="zoom:67%;" /> <p><code>l</code>ack    <code>l</code>ake    a<code>ll</code></p><p><strong>音标符号</strong></p><ul><li>/l/的音标符号分别是小写字母l</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021308613.png" alt="image-20210902130855408"></p><blockquote><p>可以分为清晰舌边音（出现在元音之前）和含糊舌边音（出现在辅音或词尾）。发清晰舌边音时舌尖及舌端紧贴上齿龈，舌前部向硬腭抬起，气流从舌旁边泄出，声带振动；发含糊舌边音时舌端紧贴上齿龈，舌前下陷，舌后上抬，舌面形成凹型，气流在此发出共鸣的声音，声带振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>如果l后有元音<ul><li>舌尖抵住上牙齿后方，让气流从舌两边（两侧）滑出，同时舌尖离开上牙齿后，声带振动，所以/l/被叫做“舌边音”或“舌侧音”</li><li>和普通话“了”的声母（汉语拼音l）基本一致，国际音标写作[l]</li></ul></li><li>如果l后没有元音<ul><li>舌位和元音前的[l]一致，但是舌尖不离开上下牙齿，声带振动</li><li>可以理解为[l]发音“发一半”，国际音标写作[ɫ]</li></ul></li><li>/l/的不同“版本”被称作“同位异音”或“音位变体”(allophone)</li><li>第一个版本被叫做“清晰舌边音”或“清晰L”(light L)；第二个版本被称作“模糊L”(dark L)，“模糊舌边音”，“含糊舌边音”等等</li></ul><p><strong>单词练习</strong></p><p><strong>清晰L</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021329095.png" alt="image-20210902132907768"></p><p><strong>模糊L</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021329724.png" alt="image-20210902132937761"></p><p><strong>绕口令</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021330353.png" alt="image-20210902133035040"></p><p><strong>常见错误</strong></p><ul><li>“清晰L”对于大多数人来说不算困难，除非方言里有n,l不分的情况<ul><li>n,l不分在英语中的歧义更大：如lack发成knack，lice发成nice，look发成nook</li><li>发/l/时，气流主要是从舌两侧发出，而/n/是鼻音，气流从鼻腔出去</li></ul></li><li>“模糊L”在普通话中不存在，所以是一大难点<ul><li>错误一：省略，比如all只读/ɔː/，girl只读/ɡɜː/</li><li>错误二：近似音代替，读成“尔”，“欧”，“要”，“奥”，比如full读福尔，tool读兔欧，help读还要普</li></ul></li><li>以下是错误读音，请避免<ul><li>school    <del>schoo, schoo尔</del></li><li>ball         <del>包，包尔</del></li><li>tool         <del>兔，兔尔</del></li><li>golf         <del>高夫，高尔夫</del></li><li>mile        <del>买药，卖噢</del></li></ul></li><li>其实字母L本身的发音，/el/的末尾就是个“模糊L”，不要说成“艾尔”</li></ul><p><strong>“模糊L”对连读的重要性</strong></p><ul><li>“模糊L”要发到位，否则导致连读时不顺畅，或者没法连读</li><li>比如all of中，模糊音不发到位容易说成“哦哦夫”</li></ul><p><strong>不发音L</strong></p><ul><li>字母l还有一个版本：不发音(silent L)</li><li>英语中不少单词的l都是不发音的，比如：<ul><li>calm  /kɑːm/</li><li>palm /pɑːm/</li><li>salmon   /`sæmən/</li><li>colonel   /`kɜːnl/</li><li>folk    /fəʊk/</li></ul></li></ul><p><strong>英音美音发音区别</strong></p><ul><li>有的包含l的词在英式英语(英音)和美式英语(美音)中的发音不同</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021349501.png" alt="image-20210902134933241"></li><li>主要原因：音节划分，比如million</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021350151.png" alt="image-20210902135009088"></li></ul><hr><h4 id="2-6-半元音"><a href="#2-6-半元音" class="headerlink" title="2.6 半元音"></a>2.6 半元音</h4><h5 id="j"><a href="#j" class="headerlink" title="/j/"></a>/j/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021421908.png" alt="image-20210902142120772" style="zoom:67%;" /> <p><code>y</code>es    <code>y</code>ard    <code>y</code>ellow</p><p><strong>音标符号</strong></p><ul><li>/j/的音标符号分别是小写字母j</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021314197.png" alt="image-20210902131416070"></p><blockquote><p>舌前部抬向硬腭，近似发/iː/的舌位；展唇；气流从抬起的舌身与硬腭之间通过，产生摩擦，声带振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>舌端往上抬向硬腭，与元音/iː/的舌位相似，但是更高一些</li><li>气流从舌面和硬腭之间通过，产生摩擦出声，声带振动</li><li>和中文普通话“叶”的声母(汉语拼音y)相似</li><li>/j/往往听上去像元音/iː/或/ɪ/，所以又被称作半元音</li><li>舌端和硬腭靠的更近，有“摩擦”的感觉</li><li>请听区别：<ul><li>yeast   east  /jiːst  iːst/</li><li>year     ear  /jɪə  ɪə/</li></ul></li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021358906.png" alt="image-20210902135852433"></p><p><strong>常见错误</strong></p><ul><li>字母j的发音往往是/dʒ/(比如just)，而/j/一般代表的是字母y的发音</li></ul><p><strong>/j/的省略</strong></p><ul><li>在美式英语(美音)中，有些辅音(如/t/,/d/,/n/)后的/j/经常被省略，这个被称作yod-dropping(yod就是/j/)</li><li>请比较以下单词在英音和美音中的区别</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021403320.png" alt="image-20210902140320590"></li></ul><p><strong>/j/的融合</strong></p><ul><li>/j/和之前的辅音经常“合在一起读”，这个被称作yod-coalescene</li><li>请听下列单词的发音区别</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021404061.png" alt="image-20210902140455155"></li><li>这样的发音在口语中(尤其是英音口语中)常见，“标准”英语一般尽量避免</li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021407996.png" alt="image-20210902140705659"></li><li>yod-coalescence也是适用于单词之间，比如：<ul><li>Nice to meet you!</li><li>Would you do it?</li></ul></li><li>如果说成meet you /miːt jʊ/,would you/wʊd jʊ/也不算错</li></ul><hr><h5 id="w"><a href="#w" class="headerlink" title="/w/"></a>/w/</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021421615.png" alt="image-20210902142147674" style="zoom:67%;" /> <p><code>w</code>as   <code>wh</code>y    <code>w</code>ide</p><p><strong>音标符号</strong></p><ul><li>/w/的音标符号分别是小写字母w</li><li>他们在DJ音标和KK音标中符号相同</li><li>他们在句中书写时放在一头一尾的斜杠里，以免和字母混淆</li></ul><p><strong>舌位图</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021314527.png" alt="image-20210902131445338"></p><blockquote><p>舌后部向软腭抬起，形成发元音/uː/时的状态，双唇呈圆形突出；气流从抬起的后舌与软腭之间的空隙通过，产生摩擦，声带振动</p></blockquote><p><strong>发音技巧</strong></p><ul><li>双唇圈起，向外凸出，气流冲出发音，声带振动</li><li>和中文普通话“呜”的声母(汉语拼音w)相似，但是不完全相同</li><li>/w/往往听上去像元音/uː/或/ʊ/  ，所以又被称作半元音</li><li>英语w开头的单词基本都是/w/开始，而不是/uː/或/ʊ/</li></ul><p><strong>单词练习</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021414912.png" alt="image-20210902141442497"></p><p><strong>绕口令</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109021415720.png" alt="image-20210902141511552"></p><p><strong>常见错误</strong></p><ul><li>一般不易发错</li></ul>]]></content>
    
    
    <summary type="html">音标</summary>
    
    
    
    <category term="英语" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="IPA" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/IPA/"/>
    
  </entry>
  
  <entry>
    <title>语音技巧</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E8%AF%AD%E9%9F%B3%E6%8A%80%E5%B7%A7/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E8%AF%AD%E9%9F%B3%E6%8A%80%E5%B7%A7/</id>
    <published>2021-09-16T17:27:15.095Z</published>
    <updated>2021-09-17T02:49:58.519Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="语音技巧"><a href="#语音技巧" class="headerlink" title="语音技巧"></a>语音技巧</h2><h3 id="1-连音-狭义连读"><a href="#1-连音-狭义连读" class="headerlink" title="1. 连音(狭义连读)"></a>1. 连音(狭义连读)</h3><p><strong>连音 Catenation / Liaison</strong></p><p>单词(<code>辅音</code>结尾) + 单词(<code>元音</code>开头)</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109040945270.png" alt="image-20210904094528520"></p><h4 id="1-1-连音造成的最大困扰？"><a href="#1-1-连音造成的最大困扰？" class="headerlink" title="1.1 连音造成的最大困扰？"></a>1.1 连音造成的最大困扰？</h4><p>连音给咱们很多中国人造成的困扰就是很难区分单词的界限，尤其是咱们中国人很习惯把句子“断句”为一个个以辅音开头元音结尾的词，因为大多数中文汉字都是这样，于是当你听到几个词，然后断句如下时：</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109040954180.png" alt="image-20210904095424392"></p><p>实际上说话者报的是</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109040955561.png" alt="image-20210904095534100" style="zoom:80%;" /> <h4 id="1-2-忽略连音会造成"><a href="#1-2-忽略连音会造成" class="headerlink" title="1.2 忽略连音会造成"></a>1.2 忽略连音会造成</h4><p><strong>听力问题</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109040957325.png" alt="image-20210904095659026" style="zoom:80%;" /> <p><strong>口语问题</strong></p><p>not at all = 闹特 艾特 奥</p><p>take it easy = ta课 伊特 一sy</p><p>in an instant = 音 安 instan特</p><h4 id="1-3-说英文不要按中文习惯划分单词界限"><a href="#1-3-说英文不要按中文习惯划分单词界限" class="headerlink" title="1.3 说英文不要按中文习惯划分单词界限"></a>1.3 说英文不要按中文习惯划分单词界限</h4><ul><li>以辅音结尾的单词的结尾辅音要发到位，不要加上不存在的元音<ul><li>take it easy：take的结尾加不存在的元音，不要说成ta课，it不要说成伊特</li><li>in an instant：in和an的结尾鼻音发到位</li></ul></li><li>意识到英文和中文发音习惯不同，比如鼻音<ul><li>i<code>n</code>,a<code>n</code>  vs.  mia<code>n</code> ao   棉袄</li><li>all of it /ɔː<code>l</code> əv ɪt/  vs.  嗷嗷福伊特</li></ul></li></ul><h3 id="2-加音-intrusion"><a href="#2-加音-intrusion" class="headerlink" title="2. 加音(intrusion)"></a>2. 加音(intrusion)</h3><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041020963.png" alt="image-20210904102032228" style="zoom:50%;" /> <p><strong>英语：元音 + 元音 = 容易“糊”</strong></p><p>人工干预：①a -&gt; an  ②加音</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041050124.png" alt="加音"></p><h3 id="3-同化-assimilation-amp-异化-dissimilation"><a href="#3-同化-assimilation-amp-异化-dissimilation" class="headerlink" title="3.同化(assimilation) &amp; 异化(dissimilation)"></a>3.同化(assimilation) &amp; 异化(dissimilation)</h3><h4 id="3-1-同化"><a href="#3-1-同化" class="headerlink" title="3.1 同化"></a>3.1 同化</h4><p>一前一后的两个音碰到一起时，互相影响，改变原来的发音，可以分为三种主要情况</p><h5 id="3-1-1-逆行同化-前面的音受后面音的影响-Regressive-Assimilation"><a href="#3-1-1-逆行同化-前面的音受后面音的影响-Regressive-Assimilation" class="headerlink" title="3.1.1 逆行同化(前面的音受后面音的影响)(Regressive Assimilation)"></a>3.1.1 逆行同化(前面的音受后面音的影响)(Regressive Assimilation)</h5><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041250988.png" alt="同化1"></p><h5 id="3-1-2-顺行同化-后面的音受前面音的影响-Progressive-Assimilation"><a href="#3-1-2-顺行同化-后面的音受前面音的影响-Progressive-Assimilation" class="headerlink" title="3.1.2 顺行同化(后面的音受前面音的影响)(Progressive Assimilation)"></a>3.1.2 顺行同化(后面的音受前面音的影响)(Progressive Assimilation)</h5><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041316242.png" alt="同化2"></p><h5 id="3-1-3-前后音相互作用"><a href="#3-1-3-前后音相互作用" class="headerlink" title="3.1.3 前后音相互作用"></a>3.1.3 前后音相互作用</h5><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041326436.png" alt="同化3"></p><h4 id="3-2-异化"><a href="#3-2-异化" class="headerlink" title="3.2 异化"></a>3.2 异化</h4><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041333399.png" alt="异化"></p><h3 id="4-省音-吞音-elision"><a href="#4-省音-吞音-elision" class="headerlink" title="4. 省音(吞音)(elision)"></a>4. 省音(吞音)(elision)</h3><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041551106.png" alt="省音"></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041551170.png" alt="image-20210904155141906" style="zoom:67%;" /> <h3 id="5-缩读"><a href="#5-缩读" class="headerlink" title="5. 缩读"></a>5. 缩读</h3><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041556668.png" alt="image-20210904155617547" style="zoom:67%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041557911.png" alt="image-20210904155743165" style="zoom:67%;" />  <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041558229.png" alt="image-20210904155834730" style="zoom:67%;" /><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041600952.png" alt="image-20210904160019811" style="zoom:67%;" /> <h3 id="6-弱读-reduction-weak-forms"><a href="#6-弱读-reduction-weak-forms" class="headerlink" title="6. 弱读(reduction / weak forms)"></a>6. 弱读(reduction / weak forms)</h3><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041603775.png" alt="image-20210904160316914" style="zoom:50%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041608436.png" alt="image-20210904160849609" style="zoom: 50%;" /><p><strong>英语以下词一般会弱读</strong></p><p>常用的，少音节的虚词，如介词，代词，连词 ，他们弱读时，中间的元音一般都会变成中央元音/ə/</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041621325.png" alt="image-20210904162148896" style="zoom:80%;" /><p>不过有些词的弱读，元音/iː/会变成/ɪ/，比如he,me,she</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041623464.png" alt="image-20210904162310850" style="zoom:80%;" /><p><strong>以下情况一般不弱读</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041625812.png" alt="image-20210904162459252" style="zoom:67%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041625833.png" alt="image-20210904162521943" style="zoom:67%;" /><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041625853.png" alt="image-20210904162552357" style="zoom:67%;" /><h3 id="7-节奏"><a href="#7-节奏" class="headerlink" title="7. 节奏"></a>7. 节奏</h3><h4 id="7-1-重音规律"><a href="#7-1-重音规律" class="headerlink" title="7.1 重音规律"></a>7.1 重音规律</h4><h5 id="7-1-1-等时性-isochrony"><a href="#7-1-1-等时性-isochrony" class="headerlink" title="7.1.1 等时性(isochrony)"></a>7.1.1 等时性(isochrony)</h5><p>普通话：基本上每个字就是一个音节，“音节等时”（<code>音节时长基本相等</code>）</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041638471.png" alt="image-20210904163838545" style="zoom:50%;" /> <p>英语并非如此：单词中有重读音节和非重读音节，“重音等时”(<code>重读音节之间的时长基本相等</code>)</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041636861.png" alt="image-20210904163603033" style="zoom:50%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041636890.png" alt="image-20210904163633683" style="zoom:50%;" /> <h5 id="7-1-2-音节等时-vs-重音等时"><a href="#7-1-2-音节等时-vs-重音等时" class="headerlink" title="7.1.2 音节等时 vs. 重音等时"></a>7.1.2 音节等时 vs. 重音等时</h5><p><strong>音节等时</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041640492.png" alt="image-20210904164018288" style="zoom:50%;" /> <blockquote><p>中文因为每个字，也就是每个音节时长基本相同，长句子自然更花时间</p></blockquote><p><strong>重音等时</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041641562.png" alt="image-20210904164153966" style="zoom:67%;" /><blockquote><p>英语虽然句子变长了，可是重度音节的数量却并没有增加，英文句中词语所花的时间并非由音节数量的总数决定，而是由重读音节数量决定</p></blockquote><p><strong>中国人常见错误</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041653713.png" alt="image-20210904165300991"></p><p><strong>正确发音</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041654245.png" alt="image-20210904165407687"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041655393.png" alt="image-20210904165525865"></p><h4 id="7-2-英语的节奏-amp-弱读"><a href="#7-2-英语的节奏-amp-弱读" class="headerlink" title="7.2 英语的节奏 &amp; 弱读"></a>7.2 英语的节奏 &amp; 弱读</h4><p>很多不同的元音在句中都会弱化为中央元音/ə/</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041659604.png" alt="image-20210904165917001"></p><h3 id="8-语调"><a href="#8-语调" class="headerlink" title="8. 语调"></a>8. 语调</h3><h4 id="8-1-地道自然的英语"><a href="#8-1-地道自然的英语" class="headerlink" title="8.1 地道自然的英语"></a>8.1 地道自然的英语</h4><h5 id="8-1-1-语音"><a href="#8-1-1-语音" class="headerlink" title="8.1.1 语音"></a>8.1.1 语音</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041709333.png" alt="image-20210904170940565" style="zoom:67%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041710749.png" alt="image-20210904171012265" style="zoom: 50%;" /> <h5 id="8-1-2-节奏"><a href="#8-1-2-节奏" class="headerlink" title="8.1.2 节奏"></a>8.1.2 节奏</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041711115.png" alt="image-20210904171103551" style="zoom:67%;" /> <h5 id="8-1-3-断句-amp-停顿"><a href="#8-1-3-断句-amp-停顿" class="headerlink" title="8.1.3 断句 &amp; 停顿"></a>8.1.3 断句 &amp; 停顿</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041712905.png" alt="image-20210904171240702" style="zoom:67%;" /> <h5 id="8-1-4-强调-amp-响度-≠-节奏"><a href="#8-1-4-强调-amp-响度-≠-节奏" class="headerlink" title="8.1.4 强调 &amp; 响度 ≠ 节奏"></a>8.1.4 强调 &amp; 响度 ≠ 节奏</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041714302.png" alt="image-20210904171433105" style="zoom: 80%;" /> <h5 id="8-1-5-语气（说话方式）"><a href="#8-1-5-语气（说话方式）" class="headerlink" title="8.1.5 语气（说话方式）"></a>8.1.5 语气（说话方式）</h5><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041717144.png" alt="image-20210904171717544" style="zoom: 67%;" /> <h5 id="8-1-6-“狭义”语调"><a href="#8-1-6-“狭义”语调" class="headerlink" title="8.1.6 “狭义”语调"></a>8.1.6 “狭义”语调</h5><p>音调/音高(pitch)的改变</p><p><strong>英语的语调</strong></p><p>语句中的某一处，或某几处，高音持平，或者升高，或者降低，或者先升高再降低，或者先降低再升高</p><p><strong>音高的变化</strong></p><p>声调：tone<br>语调：intonation</p><p>汉字的声调就是由音高的改变来实现的，比如普通话的阳平（也就是“第二声”）就是低音升到高音，而去声（也就是“第四声”）则是高音降到低音</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041724426.png" alt="image-20210904172453652" style="zoom:50%;" /> <p><strong>英语的“声调”</strong></p><p>英语理论上是没有“声调”的概念的</p><p><strong>英语语调的作用</strong></p><p>汉字“自带声调”不易“走形”，英语单词没有“声调”，易“发挥”</p><h4 id="8-2-英语语调的作用"><a href="#8-2-英语语调的作用" class="headerlink" title="8.2 英语语调的作用"></a>8.2 英语语调的作用</h4><ol><li><p>表达态度/情感</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041735277.png" alt="image-20210904173525410" style="zoom:50%;" />  <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041736375.png" alt="image-20210904173616908" style="zoom:50%;" /><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041737059.png" alt="image-20210904173704400" style="zoom:50%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041737163.png" alt="image-20210904173732645" style="zoom:50%;" />  <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109041738619.png" alt="image-20210904173800635" style="zoom:50%;" /></li></ol><blockquote><p>英语：虽然有不同语气，但是<code>语调</code>也起了很大作用<br>中文：更加依赖<code>语气</code>，而不是语调</p></blockquote><ol start="2"><li><p>表示陈述/疑问</p><p>中文：陈述句降调，问句升调（+“吗”，“啊”，“吧”…）</p><p>英文：升降调和陈述/疑问往往不对应</p><p>This way, please↗.</p><p>I didn&#39;t do it because I don’t want to↗.</p><p>What time is it ↘?</p><p>Do you understand ↘?</p></li><li><p>强调</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109042022189.png" alt="image-20210904202151314" style="zoom: 67%;" /> </li><li><p>帮助解释语句中成分的关系</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109042023681.png" alt="image-20210904202318163" style="zoom: 67%;" /> </li><li><p>社会/行为因素</p><p>下级对上级用升调，上级对下级用降调</p></li></ol><h4 id="8-3-英语的升调"><a href="#8-3-英语的升调" class="headerlink" title="8.3 英语的升调"></a>8.3 英语的升调</h4><ol><li><p>“一般疑问句”(yes/no问题)</p><p>Did the rabbit eat the carrot ↗?</p><p>Are there relly black rabbits ↗?</p></li><li><p>陈述形式的疑问</p><p>Rabbits eat carrots ↗?</p></li><li><p>反义疑问句中的附加问句</p><p>Rabbits eat carrots, don’t they ↗?</p><p>Rabbits are white, aren’t they ↗?</p></li><li><p>列举中，最有一个元素之前的元素</p><p>Rabbits like to eat ↗, play ↗,sleep↗and run.</p><p>The rabbit ran around ↗,rest ↗,ate some carrots ↗,and fell asleep.</p><p>Are rabbits red ↗, yellow ↗, blue ↗,green ↗,or white?</p></li><li><p>礼貌的请求，建议或问题</p><p>Tell me, please ↗.</p><p>Take a seat ↗.</p><p>This way ↗.</p><p>Nice to meet you. What’s your name ↗?</p></li><li><p>句子中未完成的部分</p><p>The rabbit ate a carrot ↗ and then slept.</p></li></ol><h4 id="8-4-英语的降调"><a href="#8-4-英语的降调" class="headerlink" title="8.4 英语的降调"></a>8.4 英语的降调</h4><ol><li><p>“特殊疑问句”(非yes/no问题)</p><p>What is the color of the rabbit ↘?</p></li><li><p>陈述事实或回答问题</p><p>I see a white rabbit ↘.</p><p>What is the color of this rabbit? Withe ↘.</p></li><li><p>感叹</p><p>What a cute rabbit ↘!</p></li><li><p>命令</p><p>Put the rabbit down ↘!</p></li><li><p>列举中，最后一个元素</p><p>Rabbits like to eat, play, sleep and run ↘.</p><p>The tabbit ran around, rest, ate some carrots, and fell asleep ↘.</p><p>Are rabbits red, yellow, bule, green, or white ↘.</p></li><li><p>反义疑问句前一部分</p><p>Rabbits eat carrots ↘, don’t they?</p></li><li><p>作为回答/附和/确认的问句形式</p><p>The rabbit ate all the carrots.<br>Did it ↘?</p><p>I went to the park just now.<br>Did you ↘?</p></li><li><p>已知道提问的答案</p><p>Can you call me at 6 ↘?</p><p>Can you hold this for a second ↘?</p><p>Are you going now ↘? See ya!</p></li><li><p>问句形式表礼貌，并非真的再问问题</p><p>Would you pass me the salt ↘?</p><p>Would you follow me, please ↘?</p></li><li><p>不满，愤怒</p><p>Is that what you think ↘?!</p><p>Do you understand that ↘?!</p><p>Would you sit down and shut up ↘?!</p><p>Are you going now↘?! Are you kidding me ↘?!</p></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202109042120143.png" alt="image-20210904212052381" style="zoom:80%;" /> ]]></content>
    
    
    <summary type="html">语音技巧</summary>
    
    
    
    <category term="英语" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="IPA" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/IPA/"/>
    
  </entry>
  
  <entry>
    <title>个人分享平台构建（博客搭建篇）——Hexo + Next + Github</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA%EF%BC%88%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94Hexo%20+%20Next%20+%20Github/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA%EF%BC%88%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94Hexo%20+%20Next%20+%20Github/</id>
    <published>2021-09-16T17:27:15.061Z</published>
    <updated>2021-03-06T05:31:19.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h3><h4 id="1-1-1-安装前提"><a href="#1-1-1-安装前提" class="headerlink" title="1.1.1 安装前提"></a>1.1.1 安装前提</h4><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><h4 id="1-1-2-安装-Node-js"><a href="#1-1-2-安装-Node-js" class="headerlink" title="1.1.2 安装 Node.js"></a>1.1.2 安装 Node.js</h4><p>简单的说 <strong>Node.js</strong> 就是运行在服务端的 JavaScript。**Node.js **是一个基于Chrome JavaScript 运行时建立的一个平台。</p><p><strong>Node.js</strong>是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p><strong>Node.js</strong> 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/">安装程序</a>。也可以前往 <a href="https://npm.taobao.org/mirrors/node">淘宝 Node.js 镜像</a> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/">nvs</a>（推荐）或者<a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/">Homebrew</a> 或 <a href="http://www.macports.org/">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指导</a></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><blockquote><p><strong>Windows 用户</strong></p><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></blockquote><blockquote><p><strong>For Mac / Linux 用户</strong></p><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">由 npmjs 发布的指导</a> 修复该问题。建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p></blockquote><blockquote><p><strong>Linux</strong></p><p>‎如果您使用Snap安装了<strong>Node.js</strong>，在‎<a href="https://hexo.io/docs/commands#init">‎初始化‎</a>‎博客时，您可能需要手动运行在目标文件夹中。‎<code>npm install</code></p></blockquote><h4 id="1-1-3-安装-Git"><a href="#1-1-3-安装-Git" class="headerlink" title="1.1.3 安装 Git"></a>1.1.3 安装 Git</h4><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p><strong>Mac 用户</strong></p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p><strong>Windows 用户</strong></p><p>前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h4 id="1-1-4-安装-Hexo"><a href="#1-1-4-安装-Hexo" class="headerlink" title="1.1.4 安装 Hexo"></a>1.1.4 安装 Hexo</h4><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="1-1-5-进阶安装和使用"><a href="#1-1-5-进阶安装和使用" class="headerlink" title="1.1.5 进阶安装和使用"></a>1.1.5 进阶安装和使用</h4><p>对于熟悉 npm 的进阶用户，可以仅局部安装 <code>hexo</code> 包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br></pre></td></tr></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><p><code>npx hexo &lt;command&gt;</code></p></li><li><p>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;PATH&#x3D;&quot;$PATH:.&#x2F;node_modules&#x2F;.bin&quot;&#39; &gt;&gt; ~&#x2F;.profile</span><br></pre></td></tr></table></figure></li></ol><h4 id="1-1-6-Node-js-版本限制"><a href="#1-1-6-Node-js-版本限制" class="headerlink" title="1.1.6 Node.js 版本限制"></a>1.1.6 Node.js 版本限制</h4><p>我们强烈建议永远安装最新版本的 Hexo，以及 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">推荐的 Node.js 版本</a>。</p><table><thead><tr><th align="left">Hexo 版本</th><th align="center">最低兼容 Node.js 版本</th></tr></thead><tbody><tr><td align="left">5.0+</td><td align="center">10.13.0</td></tr><tr><td align="left">4.1 - 4.2</td><td align="center">8.10</td></tr><tr><td align="left">4.0</td><td align="center">8.6</td></tr><tr><td align="left">3.3 - 3.9</td><td align="center">6.9</td></tr><tr><td align="left">3.2 - 3.3</td><td align="center">0.12</td></tr><tr><td align="left">3.0 - 3.1</td><td align="center">0.10 or iojs</td></tr><tr><td align="left">0.0.1 - 2.8</td><td align="center">0.10</td></tr></tbody></table><h3 id="2-建站"><a href="#2-建站" class="headerlink" title="2 建站"></a>2 建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h4 id="2-1-config-yml"><a href="#2-1-config-yml" class="headerlink" title="2.1 _config.yml"></a>2.1 _config.yml</h4><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，您可以在此配置大部分的参数。</p><h4 id="2-2-package-json"><a href="#2-2-package-json" class="headerlink" title="2.2 package.json"></a>2.2 package.json</h4><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderer 已默认安装，您可以自由移除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package.json&#123;</span><br><span class="line">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class="line">  &quot;private&quot;: true,</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;hexo&quot;: &quot;^3.8.0&quot;,</span><br><span class="line">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class="line">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class="line">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class="line">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class="line">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-scaffolds"><a href="#2-3-scaffolds" class="headerlink" title="2.3 scaffolds"></a>2.3 scaffolds</h4><p><a href="https://hexo.io/zh-cn/docs/writing">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h4 id="2-4-source"><a href="#2-4-source" class="headerlink" title="2.4 source"></a>2.4 source</h4><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><h4 id="2-5-themes"><a href="#2-5-themes" class="headerlink" title="2.5 themes"></a>2.5 themes</h4><p><a href="https://hexo.io/zh-cn/docs/themes">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3 配置"></a>3 配置</h3><p>您可以在 <code>_config.yml</code> 中修改大部分的配置。</p><h4 id="3-1-网站"><a href="#3-1-网站" class="headerlink" title="3.1 网站"></a>3.1 网站</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h4 id="3-2-网址"><a href="#3-2-网址" class="headerlink" title="3.2 网址"></a>3.2 网址</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址, must starts with <code>http://</code> or <code>https://</code></td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"><code>url&#39;s pathname</code></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>pretty_urls.trailing_html</code></td><td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="left"><code>true</code></td></tr></tbody></table><blockquote><p>网站存放在子目录</p><p>如果您的网站存放在子目录中，例如 <code>http://example.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://example.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p></blockquote><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 比如，一个页面的永久链接是 http:&#x2F;&#x2F;example.com&#x2F;foo&#x2F;bar&#x2F;index.html</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: false</span><br><span class="line"># 此时页面的永久链接会变为 http:&#x2F;&#x2F;example.com&#x2F;foo&#x2F;bar&#x2F;</span><br></pre></td></tr></table></figure><h4 id="3-3-目录"><a href="#3-3-目录" class="headerlink" title="3.3 目录"></a>3.3 目录</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>source_dir</code></td><td align="left">资源文件夹，这个文件夹用来存放内容。</td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>public_dir</code></td><td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td><td align="left"><code>public</code></td></tr><tr><td align="left"><code>tag_dir</code></td><td align="left">标签文件夹</td><td align="left"><code>tags</code></td></tr><tr><td align="left"><code>archive_dir</code></td><td align="left">归档文件夹</td><td align="left"><code>archives</code></td></tr><tr><td align="left"><code>category_dir</code></td><td align="left">分类文件夹</td><td align="left"><code>categories</code></td></tr><tr><td align="left"><code>code_dir</code></td><td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td><td align="left"><code>downloads/code</code></td></tr><tr><td align="left"><code>i18n_dir</code></td><td align="left">国际化（i18n）文件夹</td><td align="left"><code>:lang</code></td></tr><tr><td align="left"><code>skip_render</code></td><td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing">glob 表达式</a>来匹配路径。</td><td align="left"></td></tr></tbody></table><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">skip_render: &quot;mypage&#x2F;**&#x2F;*&quot;</span><br><span class="line"># 将会直接将 &#96;source&#x2F;mypage&#x2F;index.html&#96; 和 &#96;source&#x2F;mypage&#x2F;code.js&#96; 不做改动地输出到 &#39;public&#39; 目录</span><br><span class="line"># 你也可以用这种方法来跳过对指定文章文件的渲染</span><br><span class="line">skip_render: &quot;_posts&#x2F;test-post.md&quot;</span><br><span class="line"># 这将会忽略对 &#39;test-post.md&#39; 的渲染</span><br></pre></td></tr></table></figure><blockquote><p>提示</p><p>如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值。</p></blockquote><h4 id="3-4-文章"><a href="#3-4-文章" class="headerlink" title="3.4 文章"></a>3.4 文章</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>new_post_name</code></td><td align="left">新文章的文件名称</td><td align="left">:title.md</td></tr><tr><td align="left"><code>default_layout</code></td><td align="left">预设布局</td><td align="left">post</td></tr><tr><td align="left"><code>auto_spacing</code></td><td align="left">在中文和英文之间加入空格</td><td align="left">false</td></tr><tr><td align="left"><code>titlecase</code></td><td align="left">把标题转换为 title case</td><td align="left">false</td></tr><tr><td align="left"><code>external_link</code></td><td align="left">在新标签中打开链接</td><td align="left">true</td></tr><tr><td align="left"><code>external_link.enable</code></td><td align="left">在新标签中打开链接</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>external_link.field</code></td><td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td><td align="left"><code>site</code></td></tr><tr><td align="left"><code>external_link.exclude</code></td><td align="left">需要排除的域名。主域名和子域名如 <code>www</code> 需分别配置</td><td align="left"><code>[]</code></td></tr><tr><td align="left"><code>filename_case</code></td><td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td><td align="left">0</td></tr><tr><td align="left"><code>render_drafts</code></td><td align="left">显示草稿</td><td align="left">false</td></tr><tr><td align="left"><code>post_asset_folder</code></td><td align="left">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders">Asset 文件夹</a></td><td align="left">false</td></tr><tr><td align="left"><code>relative_link</code></td><td align="left">把链接改为与根目录的相对位址</td><td align="left">false</td></tr><tr><td align="left"><code>future</code></td><td align="left">显示未来的文章</td><td align="left">true</td></tr><tr><td align="left"><code>highlight</code></td><td align="left">代码块的设置, see <a href="https://hexo.io/docs/syntax-highlight#Highlight-js">Highlight.js</a> section for usage guide</td><td align="left"></td></tr><tr><td align="left"><code>prismjs</code></td><td align="left">代码块的设置, see <a href="https://hexo.io/docs/syntax-highlight#PrismJS">PrismJS</a> section for usage guide</td><td align="left"></td></tr></tbody></table><blockquote><p>相对地址</p><p>默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果您的网站域名为 <code>example.com</code>,您有一篇文章名为 <code>hello</code>，那么绝对链接可能像这样：<code>http://example.com/hello.html</code>，它是<strong>绝对</strong>于域名的。相对链接像这样：<code>/hello.html</code>，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p></blockquote><h4 id="3-5-分类-amp-标签"><a href="#3-5-分类-amp-标签" class="headerlink" title="3.5 分类 &amp; 标签"></a>3.5 分类 &amp; 标签</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>default_category</code></td><td align="left">默认分类</td><td align="left"><code>uncategorized</code></td></tr><tr><td align="left"><code>category_map</code></td><td align="left">分类别名</td><td align="left"></td></tr><tr><td align="left"><code>tag_map</code></td><td align="left">标签别名</td><td align="left"></td></tr></tbody></table><h4 id="3-6-日期-时间格式"><a href="#3-6-日期-时间格式" class="headerlink" title="3.6 日期 / 时间格式"></a>3.6 日期 / 时间格式</h4><hr><p>Hexo 使用 <a href="http://momentjs.com/">Moment.js</a> 来解析和显示时间。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>date_format</code></td><td align="left">日期格式</td><td align="left"><code>YYYY-MM-DD</code></td></tr><tr><td align="left"><code>time_format</code></td><td align="left">时间格式</td><td align="left"><code>HH:mm:ss</code></td></tr><tr><td align="left"><code>updated_option</code></td><td align="left">当 Front Matter 中没有指定 <a href="https://hexo.io/zh-cn/docs/variables#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F"><code>updated</code></a> 时 <code>updated</code> 的取值</td><td align="left"><code>mtime</code></td></tr></tbody></table><blockquote><p>updated_option</p><p><code>updated_option</code> 控制了当 Front Matter 中没有指定 <code>updated</code> 时，<code>updated</code> 如何取值：</p><ul><li><code>mtime</code>: 使用文件的最后修改时间。这是从 Hexo 3.0.0 开始的默认行为。</li><li><code>date</code>: 使用 <code>date</code> 作为 <code>updated</code> 的值。可被用于 Git 工作流之中，因为使用 Git 管理站点时，文件的最后修改日期常常会发生改变</li><li><code>empty</code>: 直接删除 <code>updated</code>。使用这一选项可能会导致大部分主题和插件无法正常工作。</li></ul><p><code>use_date_for_updated</code> 选项已经被废弃，将会在下个重大版本发布时去除。请改为使用 <code>updated_option: &#39;date&#39;</code>。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use_date_for_updated&#96; | 启用以后，如果 Front Matter 中没有指定 &#96;updated&#96;， [&#96;post.updated&#96;](https:&#x2F;&#x2F;hexo.io&#x2F;zh-cn&#x2F;docs&#x2F;configuration) 将会使用 &#96;date&#96; 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用 | &#96;true</span><br></pre></td></tr></table></figure><h4 id="3-7-分页"><a href="#3-7-分页" class="headerlink" title="3.7 分页"></a>3.7 分页</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>per_page</code></td><td align="left">每页显示的文章量 (0 = 关闭分页功能)</td><td align="left"><code>10</code></td></tr><tr><td align="left"><code>pagination_dir</code></td><td align="left">分页目录</td><td align="left"><code>page</code></td></tr></tbody></table><h4 id="3-8-扩展"><a href="#3-8-扩展" class="headerlink" title="3.8 扩展"></a>3.8 扩展</h4><hr><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td align="left"><code>theme_config</code></td><td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置</td></tr><tr><td align="left"><code>deploy</code></td><td align="left">部署部分的设置</td></tr><tr><td align="left"><code>meta_generator</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签</td></tr></tbody></table><h4 id="3-9-包括或不包括目录和文件"><a href="#3-9-包括或不包括目录和文件" class="headerlink" title="3.9 包括或不包括目录和文件"></a>3.9 包括或不包括目录和文件</h4><hr><p>在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 <a href="https://github.com/isaacs/minimatch">glob 表达式</a> 对目录和文件进行匹配。</p><p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>include</code></td><td align="left">Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td></tr><tr><td align="left"><code>exclude</code></td><td align="left">Hexo 会忽略这些文件和目录</td></tr><tr><td align="left"><code>ignore</code></td><td align="left">Ignore files/folders</td></tr></tbody></table><p>举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># Include&#x2F;Exclude Files&#x2F;Folders</span><br><span class="line">include:</span><br><span class="line">  - &quot;.nojekyll&quot;</span><br><span class="line">  # 包括 &#39;source&#x2F;css&#x2F;_typing.css&#39;</span><br><span class="line">  - &quot;css&#x2F;_typing.css&quot;</span><br><span class="line">  # 包括 &#39;source&#x2F;_css&#x2F;&#39; 中的任何文件，但不包括子目录及其其中的文件。</span><br><span class="line">  - &quot;_css&#x2F;*&quot;</span><br><span class="line">  # 包含 &#39;source&#x2F;_css&#x2F;&#39; 中的任何文件和子目录下的任何文件</span><br><span class="line">  - &quot;_css&#x2F;**&#x2F;*&quot;</span><br><span class="line"></span><br><span class="line">exclude:</span><br><span class="line">  # 不包括 &#39;source&#x2F;js&#x2F;test.js&#39;</span><br><span class="line">  - &quot;js&#x2F;test.js&quot;</span><br><span class="line">  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 中的文件、但包括子目录下的所有目录和文件</span><br><span class="line">  - &quot;js&#x2F;*&quot;</span><br><span class="line">  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 中的文件和子目录下的任何文件</span><br><span class="line">  - &quot;js&#x2F;**&#x2F;*&quot;</span><br><span class="line">  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 目录下的所有文件名以 &#39;test&#39; 开头的文件，但包括其它文件和子目录下的单文件</span><br><span class="line">  - &quot;js&#x2F;test*&quot;</span><br><span class="line">  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 及其子目录中任何以 &#39;test&#39; 开头的文件</span><br><span class="line">  - &quot;js&#x2F;**&#x2F;test*&quot;</span><br><span class="line">  # 不要用 exclude 来忽略 &#39;source&#x2F;_posts&#x2F;&#39; 中的文件。你应该使用 &#39;skip_render&#39;，或者在要忽略的文件的文件名之前加一个下划线 &#39;_&#39;</span><br><span class="line">  # 在这里配置一个 - &quot;_posts&#x2F;hello-world.md&quot; 是没有用的。</span><br><span class="line"></span><br><span class="line">ignore:</span><br><span class="line">  # Ignore any folder named &#39;foo&#39;.</span><br><span class="line">  - &quot;**&#x2F;foo&quot;</span><br><span class="line">  # Ignore &#39;foo&#39; folder in &#39;themes&#x2F;&#39; only.</span><br><span class="line">  - &quot;**&#x2F;themes&#x2F;*&#x2F;foo&quot;</span><br><span class="line">  # Same as above, but applies to every subfolders of &#39;themes&#x2F;&#39;.</span><br><span class="line">  - &quot;**&#x2F;themes&#x2F;**&#x2F;foo&quot;</span><br></pre></td></tr></table></figure><p>列表中的每一项都必须用单引号或双引号包裹起来。</p><p><code>include</code> 和 <code>exclude</code> 并不适用于 <code>themes/</code> 目录下的文件。如果需要忽略 <code>themes/</code> 目录下的部分文件或文件夹，可以使用 <code>ignore</code> 或在文件名之前添加下划线 <code>_</code>。</p><h4 id="3-10-使用代替配置文件"><a href="#3-10-使用代替配置文件" class="headerlink" title="3.10 使用代替配置文件"></a>3.10 使用代替配置文件</h4><hr><p>可以在 hexo-cli 中使用 <code>--config</code> 参数来指定自定义配置文件的路径。你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># use &#39;custom.yml&#39; in place of &#39;_config.yml&#39;</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># use &#39;custom.yml&#39; &amp; &#39;custom2.json&#39;, prioritizing &#39;custom3.yml&#39;, then &#39;custom2.json&#39;</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><p>例如，使用 <code>--options</code> 指定了两个自定义配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --config custom.yml,custom2.json</span><br></pre></td></tr></table></figure><p>如果 <code>custom.yml</code> 中指定了 <code>foo: bar</code>，在 custom2.json 中指定了 <code>&quot;foo&quot;: &quot;dinosaur&quot;</code>，那么在 <code>_multiconfig.yml</code> 中你会得到 <code>foo: dinosaur</code>。</p><h4 id="3-11-使用代替主题配置文件"><a href="#3-11-使用代替主题配置文件" class="headerlink" title="3.11 使用代替主题配置文件"></a>3.11 使用代替主题配置文件</h4><hr><p>通常情况下，Hexo 主题是一个独立的项目，并拥有一个独立的 <code>_config.yml</code> 配置文件。</p><p>除了自行维护独立的主题配置文件，你也可以在其它地方对主题进行配置。</p><p><strong>配置文件中的 <code>theme_config</code></strong></p><blockquote><p>该特性自 Hexo 2.8.2 起提供</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">theme: &quot;my-theme&quot;</span><br><span class="line">theme_config:</span><br><span class="line">  bio: &quot;My awesome bio&quot;</span><br><span class="line">  foo:</span><br><span class="line">    bar: &#39;a&#39;</span><br><span class="line"># themes&#x2F;my-theme&#x2F;_config.yml</span><br><span class="line">bio: &quot;Some generic bio&quot;</span><br><span class="line">logo: &quot;a-cool-image.png&quot;</span><br><span class="line">  foo:</span><br><span class="line">    baz: &#39;b&#39;</span><br></pre></td></tr></table></figure><p>最终主题配置的输出是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  bio: &quot;My awesome bio&quot;,</span><br><span class="line">  logo: &quot;a-cool-image.png&quot;,</span><br><span class="line">  foo: &#123;</span><br><span class="line">    bar: &quot;a&quot;,</span><br><span class="line">    baz: &quot;b&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>独立的 <code>_config.[theme].yml</code> 文件</strong></p><blockquote><p>该特性自 Hexo 5.0.0 起提供</p></blockquote><p>独立的主题配置文件应放置于站点根目录下，支持 <code>yml</code> 或 <code>json</code> 格式。需要配置站点 <code>_config.yml</code> 文件中的 <code>theme</code> 以供 Hexo 寻找 <code>_config.[theme].yml</code> 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">theme: &quot;my-theme&quot;</span><br><span class="line"># _config.my-theme.yml</span><br><span class="line">bio: &quot;My awesome bio&quot;</span><br><span class="line">foo:</span><br><span class="line">  bar: &#39;a&#39;</span><br><span class="line"># themes&#x2F;my-theme&#x2F;_config.yml</span><br><span class="line">bio: &quot;Some generic bio&quot;</span><br><span class="line">logo: &quot;a-cool-image.png&quot;</span><br><span class="line">  foo:</span><br><span class="line">    baz: &#39;b&#39;</span><br></pre></td></tr></table></figure><p>最终主题配置的输出是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  bio: &quot;My awesome bio&quot;,</span><br><span class="line">  logo: &quot;a-cool-image.png&quot;,</span><br><span class="line">  foo: &#123;</span><br><span class="line">    bar: &quot;a&quot;,</span><br><span class="line">    baz: &quot;b&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>建议将所有的主题配置集中在一处。如果不得不在多处配置你的主题，注意以下信息：Hexo 在合并主题配置时，Hexo 配置文件中的 <code>theme_config</code> 的优先级最高，其次是 <code>_config.[theme].yml</code> 文件，最后是位于主题目录下的 <code>_config.yml</code> 文件。</p></blockquote><h3 id="4-指令"><a href="#4-指令" class="headerlink" title="4 指令"></a>4 指令</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。 如果没有设置 ，Hexo 默认在目前的文件夹建立网站。<code>folder</code></p><p>此命令是运行以下步骤的快捷方式：</p><ol><li>Git 克隆<a href="https://github.com/hexojs/hexo-starter">hexo 启动器</a>，包括<a href="https://github.com/hexojs/hexo-theme-landscape">hexo 主题</a>到当前目录或目标文件夹（如果指定）。</li><li>使用包管理器安装依赖项：<a href="https://classic.yarnpkg.com/lang/en/">Yarn 1</a>、pnpm 或<a href="https://docs.npmjs.com/cli/install">npm，</a>以安装者为准： 如果安装了多个，则优先级将列出。默认情况下npm与Node.js捆绑。</li></ol><h4 id="list"><a href="#list" class="headerlink" title="list"></a>list</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure><p>列出网站资料。</p><h4 id="version"><a href="#version" class="headerlink" title="version"></a>version</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>显示 Hexo 版本。</p><h4 id="4-1-新增功能"><a href="#4-1-新增功能" class="headerlink" title="4.1 新增功能"></a>4.1 新增功能</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。 如果没有设置 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 参数代替。 如果标题包含空格的话，请使用引号括起来。<code>layout``default_layout</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>,<code>--path</code></td><td align="left">自定义新文章的路径</td></tr><tr><td align="left"><code>-r</code>,<code>--replace</code></td><td align="left">如果存在同名文章，将其替换</td></tr><tr><td align="left"><code>-s</code>,<code>--slug</code></td><td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。 对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 文件。 你可以使用 参数来覆盖上述行为、自行决定文件的目录：<code>index.md``--path</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me &quot;About me&quot;</span><br></pre></td></tr></table></figure><p>以上命令会创建一个 文件，同时 Front Matter 中的 title 为 <code>source/about/me.md``&quot;About me&quot;</code></p><p>注意！ title 是必须指定的！ 如果你这么做并不能达到你的目的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me</span><br></pre></td></tr></table></figure><p>此时 Hexo 会创建 ，同时 的 Front Matter 中的 title 为 。 这是因为在上述命令中，hexo-cli 将 视为指定文章的标题、并采用默认的 。<code>source/_posts/about/me.md``me.md``&quot;page&quot;``page``layout</code></p><h4 id="4-2-生成"><a href="#4-2-生成" class="headerlink" title="4.2 生成"></a>4.2 生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>,<code>--deploy</code></td><td align="left">文件生成后立即部署网站</td></tr><tr><td align="left"><code>-w</code>,<code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>,<code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>,<code>--force</code></td><td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 目录存在，那么 只会重新生成改动的文件。 使用该参数的效果接近 <code>public``hexo g``hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="left"><code>-c</code>,<code>--concurrency</code></td><td align="left">最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h4 id="4-3-发布"><a href="#4-3-发布" class="headerlink" title="4.3 发布"></a>4.3 发布</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h4 id="4-4-服务器"><a href="#4-4-服务器" class="headerlink" title="4.4 服务器"></a>4.4 服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。 默认情况下，访问网址为： 。<code>http://localhost:4000/</code></p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>,<code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>,<code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>,<code>--log</code></td><td align="left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h4 id="4-5-部署"><a href="#4-5-部署" class="headerlink" title="4.5 部署"></a>4.5 部署</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>,<code>--generate</code></td><td align="left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h4 id="4-6-呈现"><a href="#4-6-呈现" class="headerlink" title="4.6 呈现"></a>4.6 呈现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-o</code>,<code>--output</code></td><td align="left">设置输出路径</td></tr></tbody></table><h4 id="4-7-迁移"><a href="#4-7-迁移" class="headerlink" title="4.7 迁移"></a>4.7 迁移</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p><h4 id="4-8-清理"><a href="#4-8-清理" class="headerlink" title="4.8 清理"></a>4.8 清理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 () 和已生成的静态文件 ()。<code>db.json``public</code></p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h4 id="4-9-选项"><a href="#4-9-选项" class="headerlink" title="4.9 选项"></a>4.9 选项</h4><h5 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h5 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。<code>debug.log</code></p><h5 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure><p>隐藏终端信息。</p><h5 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。 例如：<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 。 如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。 这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。<code>_multiconfig.yml</code></p><h5 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure><p>显示 文件夹中的草稿文章。<code>source/_drafts</code></p><h5 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd &#x2F;path&#x2F;to&#x2F;cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p><h3 id="5-迁移"><a href="#5-迁移" class="headerlink" title="5 迁移"></a>5 迁移</h3><h4 id="5-1-RSS"><a href="#5-1-RSS" class="headerlink" title="5.1 RSS"></a>5.1 RSS</h4><p>首先，安装 <code>hexo-migrator-rss</code> 插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></table></figure><p>插件安装完成后，执行下列命令，从 RSS 迁移所有文章。<code>source</code> 可以是文件路径或网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate rss &lt;source&gt;</span><br></pre></td></tr></table></figure><h4 id="5-2-Jekyll"><a href="#5-2-Jekyll" class="headerlink" title="5.2 Jekyll"></a>5.2 Jekyll</h4><p>把 <code>_posts</code> 文件夹内的所有文件复制到 <code>source/_posts</code> 文件夹，并在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><h4 id="5-3-Octopress"><a href="#5-3-Octopress" class="headerlink" title="5.3 Octopress"></a>5.3 Octopress</h4><p>把 Octopress <code>source/_posts</code> 文件夹内的所有文件转移到 Hexo 的 <code>source/_posts</code> 文件夹，并修改 <code>_config.yml</code> 中的 <code>new_post_name</code> 参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><h4 id="5-4-WordPress"><a href="#5-4-WordPress" class="headerlink" title="5.4 WordPress"></a>5.4 WordPress</h4><p>首先，安装 <code>hexo-migrator-wordpress</code> 插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure><p>在 WordPress 仪表盘中导出数据(“Tools” → “Export” → “WordPress”)（详情参考<a href="http://en.support.wordpress.com/export/">WP支持页面</a>）。</p><p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate wordpress &lt;source&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意</p><p>这个插件并不能完美地实现WordPress-&gt;Hexo的数据转换，尤其是在处理WordPress的分类方面存在问题（见<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter中的分类与标签</a>）。因此，建议您在迁移完成后，手工审阅所有生成的markdown文件，检查其中是否有错误。对于文章数量较大的WordPress站点，这项工作可能要花很长的时间。</p></blockquote><h4 id="5-5-Joomla"><a href="#5-5-Joomla" class="headerlink" title="5.5 Joomla"></a>5.5 Joomla</h4><p>首先，安装 <code>hexo-migrator-joomla</code> 插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></table></figure><p>使用 <a href="http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ==">J2XML</a> 组件导出 Joomla 文章。<br>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 Joomla 导出的文件路径或网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate joomla &lt;source&gt;</span><br></pre></td></tr></table></figure><h3 id="6-写作"><a href="#6-写作" class="headerlink" title="6 写作"></a>6 写作</h3><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><h4 id="6-1-布局（Layout）"><a href="#6-1-布局（Layout）" class="headerlink" title="6.1 布局（Layout）"></a>6.1 布局（Layout）</h4><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><blockquote><p>Disabling layout</p><p>If you don’t want an article (post/page) to be processed with a theme, set <code>layout: false</code> in its front-matter. Refer to <a href="https://hexo.io/zh-cn/docs/front-matter#%E5%B8%83%E5%B1%80">this section</a> for more details.</p></blockquote><h4 id="6-2-文件名称"><a href="#6-2-文件名称" class="headerlink" title="6.2 文件名称"></a>6.2 文件名称</h4><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>:title</code></td><td align="left">标题（小写，空格将会被替换为短杠）</td></tr><tr><td align="left"><code>:year</code></td><td align="left">建立的年份，比如， <code>2015</code></td></tr><tr><td align="left"><code>:month</code></td><td align="left">建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td align="left"><code>:i_month</code></td><td align="left">建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td align="left"><code>:day</code></td><td align="left">建立的日期（有前导零），比如， <code>07</code></td></tr><tr><td align="left"><code>:i_day</code></td><td align="left">建立的日期（无前导零），比如， <code>7</code></td></tr></tbody></table><h4 id="6-3-草稿"><a href="#6-3-草稿" class="headerlink" title="6.3 草稿"></a>6.3 草稿</h4><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><h4 id="6-4-模版（Scaffold）"><a href="#6-4-模版（Scaffold）" class="headerlink" title="6.4 模版（Scaffold）"></a>6.4 模版（Scaffold）</h4><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure><p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td></tr><tr><td align="left"><code>date</code></td><td align="left">文件建立日期</td></tr></tbody></table><h4 id="6-5-支持的格式"><a href="#6-5-支持的格式" class="headerlink" title="6.5 支持的格式"></a>6.5 支持的格式</h4><p>Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。</p><p>例如，Hexo 默认安装了 <code>hexo-renderer-marked</code> 和 <code>hexo-renderer-ejs</code>，因此你不仅可以用 Markdown 写作，你还可以用 EJS 写作。如果你安装了 <code>hexo-renderer-pug</code>，你甚至可以用 Pug 模板语言书写文章。</p><p>只需要将文章的扩展名从 <code>md</code> 改成 <code>ejs</code>，Hexo 就会使用 <code>hexo-renderer-ejs</code> 渲染这个文件，其他格式同理。</p><h3 id="7-Front-matter"><a href="#7-Front-matter" class="headerlink" title="7 Front-matter"></a>7 Front-matter</h3><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013&#x2F;7&#x2F;13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">Page excerpt in plain text. Use <a href="https://hexo.io/docs/tag-plugins#Post-Excerpt">this plugin</a> to format the text</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">Disable rendering of Nunjucks tag <code>&#123;&#123; &#125;&#125;</code>/<code>&#123;% %&#125;</code> and <a href="https://hexo.io/docs/tag-plugins">tag plugins</a> when enabled</td><td align="left"></td></tr></tbody></table><h4 id="7-1-布局"><a href="#7-1-布局" class="headerlink" title="7.1 布局"></a>7.1 布局</h4><p>‎默认布局是 <code>post</code>, 根据设置在<code>_config.yml</code>里的 <a href="https://hexo.io/zh-cn/docs/(/docs/configuration#Writing)"><code>default_layout</code></a> 的值。当文章中的布局被禁用时 (<code>layout: false</code>),它将不会以主题进行处理。但是，它仍将由任何可用的渲染器呈现：如果一篇文章写在标记和标记渲染器（如默认‎<a href="https://github.com/hexojs/hexo-renderer-marked">‎的 hexo 渲染器标记‎</a>‎）中，它将呈现给 HTML。‎<code>post``_config.yml``layout: false</code></p><p>‎无论布局如何，‎<a href="https://hexo.io/docs/tag-plugins">‎标记插件‎</a>‎始终被处理，除非设置或‎<a href="https://hexo.io/api/renderer#Disable-Nunjucks-tags">‎渲染器‎</a>‎禁用。‎<code>disableNunjucks</code></p><h4 id="7-2-分类和标签"><a href="#7-2-分类和标签" class="headerlink" title="7.2 分类和标签"></a>7.2 分类和标签</h4><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><blockquote><p>分类方法的分歧</p><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - Diary</span><br><span class="line">  - Life</span><br></pre></td></tr></table></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p></blockquote><h4 id="7-3-JSON-Front-matter"><a href="#7-3-JSON-Front-matter" class="headerlink" title="7.3 JSON Front-matter"></a>7.3 JSON Front-matter</h4><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;title&quot;: &quot;Hello World&quot;,</span><br><span class="line">&quot;date&quot;: &quot;2013&#x2F;7&#x2F;13 20:46:25&quot;</span><br><span class="line">;;;</span><br></pre></td></tr></table></figure><h3 id="8-标签插件（Tag-Plugins）"><a href="#8-标签插件（Tag-Plugins）" class="headerlink" title="8 标签插件（Tag Plugins）"></a>8 标签插件（Tag Plugins）</h3><p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p><p>虽然你可以使用任何格式书写你的文章，但是标签插件永远可用，且语法也都是一致的。</p><p><em>‎标记插件不应包裹在标记语法中，‎</em>, e.g. <code>[](&#123;% post_path lorem-ipsum %&#125;)</code> 是不被支持的</p><h4 id="8-1-引用块"><a href="#8-1-引用块" class="headerlink" title="8.1 引用块"></a>8.1 引用块</h4><p>在文章中插入引言，可包含作者、来源和标题。</p><p><strong>别号：</strong> quote</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><h4 id="8-2-样例"><a href="#8-2-样例" class="headerlink" title="8.2 样例"></a>8.2 样例</h4><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><p><strong>引用书上的句子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><p><strong>David Levithan</strong>Wide Awake</p></blockquote><p><strong>引用 Twitter</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;</span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p><p><strong>@DevDocs</strong><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></p></blockquote><p><strong>引用网络上的文章</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><p><strong>Seth Godin</strong><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></p></blockquote><h4 id="8-3-代码块"><a href="#8-3-代码块" class="headerlink" title="8.3 代码块"></a>8.3 代码块</h4><p>在文章中插入代码。</p><p><strong>别名：</strong> code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p><table><thead><tr><th align="left">Extra Options</th><th align="left">Description</th><th align="left">Default</th></tr></thead><tbody><tr><td align="left"><code>line_number</code></td><td align="left">Show line number</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>highlight</code></td><td align="left">Enable code highlighting</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>first_line</code></td><td align="left">Specify the first line number</td><td align="left"><code>1</code></td></tr><tr><td align="left"><code>mark</code></td><td align="left">Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: <code>mark:1,4-7,10</code> will mark line 1, 4 to 7 and 10.</td><td align="left"></td></tr><tr><td align="left"><code>wrap</code></td><td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">``</a></td><td align="left"><code>true</code></td></tr></tbody></table><h4 id="8-5-样例"><a href="#8-5-样例" class="headerlink" title="8.5 样例"></a>8.5 样例</h4><p><strong>普通的代码块</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#39;Hello World!&#39;);</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">alert(&#39;Hello World!&#39;);</span><br></pre></td></tr></table></figure><p><strong>指定语言</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br></pre></td></tr></table></figure><p><strong>附加说明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">Array.maparray.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><p><strong>附加说明和网址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">_.compactUnderscore.js_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure><h4 id="8-6-反引号代码块"><a href="#8-6-反引号代码块" class="headerlink" title="8.6 反引号代码块"></a>8.6 反引号代码块</h4><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p><p>``` [language] [title] [url] [link text] code snippet ```</p><h4 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h4><p>在文章中插入 Pull quote。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><h4 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h4><p>在文章中嵌入 jsFiddle。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h4 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h4><p>在文章中嵌入 Gist。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure><h4 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h4><p>在文章中插入 iframe。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h4 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h4><p>在文章中插入指定大小的图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] &#39;&quot;title text&quot; &quot;alt text&quot;&#39; %&#125;</span><br></pre></td></tr></table></figure><h4 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h4><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure><h4 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h4><p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] [from:line] [to:line] path&#x2F;to&#x2F;file %&#125;</span><br></pre></td></tr></table></figure><h4 id="8-7-样例"><a href="#8-7-样例" class="headerlink" title="8.7 样例"></a>8.7 样例</h4><p><strong>嵌入 test.js 文件全文</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code lang:javascript test.js %&#125;</span><br></pre></td></tr></table></figure><p><strong>只嵌入第 3 行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:3 to:3 test.js %&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌入第 5 行至第 8 行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 to:8 test.js %&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌入第 5 行至文件结束</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 test.js %&#125;</span><br></pre></td></tr></table></figure><p><strong>嵌入第 1 行至第 8 行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code lang:javascript to:8 test.js %&#125;</span><br></pre></td></tr></table></figure><h4 id="8-8-引用文章"><a href="#8-8-引用文章" class="headerlink" title="8.8 引用文章"></a>8.8 引用文章</h4><p>引用其他文章的链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure><p>在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。</p><p>例如，在文章中使用 <code>&#123;% post_link how-to-bake-a-cake %&#125;</code> 时，只需有一个名为 <code>how-to-bake-a-cake.md</code> 的文章文件即可。即使这个文件位于站点文件夹的 <code>source/posts/2015-02-my-family-holiday</code> 目录下、或者文章的永久链接是 <code>2018/en/how-to-bake-a-cake</code>，都没有影响。</p><p>默认链接文字是文章的标题，你也可以自定义要显示的文本。</p><p>默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用<code>escape</code>选项，禁止对特殊字符进行转义。</p><p><strong>链接使用文章的标题</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link hexo-3-8-released %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">Hexo 3.8.0 Released</a></p><p><strong>链接使用自定义文字</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link hexo-3-8-released &#39;通往文章的链接&#39; %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">通往文章的链接</a></p><p><strong>对标题的特殊字符进行转义</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link hexo-4-released &#39;How to use &lt;b&gt; tag in title&#39; %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/">How to use  tag in title</a></p><p><strong>禁止对标题的特殊字符进行转义</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link hexo-4-released &#39;&lt;b&gt;bold&lt;&#x2F;b&gt; custom title&#39; false %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/"><strong>bold</strong> custom title</a></p><h4 id="8-9-引用资源"><a href="#8-9-引用资源" class="headerlink" title="8.9 引用资源"></a>8.9 引用资源</h4><p>引用文章的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path filename %&#125;</span><br><span class="line">&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;</span><br><span class="line">&#123;% asset_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure><h3 id="Embed-image"><a href="#Embed-image" class="headerlink" title="Embed image"></a>Embed image</h3><p><em>‎hexo-渲染器标记的 3.1.0+ 可以（可选地）自动解析帖子的图像路径，请参阅‎<a href="https://hexo.io/docs/asset-folders#Embedding-an-image-using-markdown">‎此部分‎</a>‎，了解如何启用该图像。‎</em></p><p>“foo.jpg” is located at <code>http://example.com/2020/01/02/hello/foo.jpg</code>.</p><p><strong>Default (no option)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img foo.jpg %&#125;</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>Custom class</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img post-image foo.jpg %&#125;</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; class&#x3D;&quot;post-image&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>Display size</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img foo.jpg 500 400 %&#125;</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; width&#x3D;&quot;500&quot; height&#x3D;&quot;400&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>Title &amp; Alt</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img logo.svg &quot;lorem ipsum&#39;dolor&#39;&quot; %&#125;</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; title&#x3D;&quot;lorem ipsum&quot; alt&#x3D;&quot;dolor&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h4><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h4 id="8-10-文章摘要和截断"><a href="#8-10-文章摘要和截断" class="headerlink" title="8.10 文章摘要和截断"></a>8.10 文章摘要和截断</h4><p>在文章中使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure><p>首页中将只会出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br></pre></td></tr></table></figure><p>正文中则会出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure><p>注意，摘要可能会被 Front Matter 中的 <code>excerpt</code> 覆盖。</p><h3 id="9-资源文件夹"><a href="#9-资源文件夹" class="headerlink" title="9 资源文件夹"></a>9 资源文件夹</h3><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p><h4 id="9-1-文章资源文件夹"><a href="#9-1-文章资源文件夹" class="headerlink" title="9.1 文章资源文件夹"></a>9.1 文章资源文件夹</h4><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_config.ymlpost_asset_folder: true</span><br></pre></td></tr></table></figure><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><h4 id="9-2-相对路径引用的标签插件"><a href="#9-2-相对路径引用的标签插件" class="headerlink" title="9.2 相对路径引用的标签插件"></a>9.2 相对路径引用的标签插件</h4><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的<a href="https://hexo.io/docs/tag-plugins#Include-Assets">标签插件</a>被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](example.jpg)</code> ，它将 <em>不会</em> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h4 id="9-3-‎使用‎-markdown嵌入图像"><a href="#9-3-‎使用‎-markdown嵌入图像" class="headerlink" title="9.3 ‎使用‎ markdown嵌入图像"></a>9.3 ‎使用‎ markdown嵌入图像</h4><p><a href="https://github.com/hexojs/hexo-renderer-marked">‎hexo-渲染器标记的‎</a>‎3.1.0引入了一个新的选项，允许您在不使用标签插件的情况下在标记中嵌入图像。‎</p><p>To enable:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">_config.ymlpost_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>‎一旦启用，资产图像将自动解决到其相应的帖子路径。例如，”图像.jpg”位于”/2020/01/02/foo/图像.jpg”，这意味着它是”/2020/01/02/foo/“帖子的资产图像，将呈现为。‎ <code>![](image.jpg)</code> will be rendered as <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code>.</p><h3 id="10-数据文件"><a href="#10-数据文件" class="headerlink" title="10 数据文件"></a>10 数据文件</h3><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p><p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Home: &#x2F;</span><br><span class="line">Gallery: &#x2F;gallery&#x2F;</span><br><span class="line">Archives: &#x2F;archives&#x2F;</span><br></pre></td></tr></table></figure><p>您就能在模板中使用这些资料：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class="line">  &lt;a href&#x3D;&quot;&lt;%&#x3D; site.data.menu[link] %&gt;&quot;&gt; &lt;%&#x3D; link %&gt; &lt;&#x2F;a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>渲染结果如下 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#x2F;&quot;&gt; Home &lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&#x2F;gallery&#x2F;&quot;&gt; Gallery &lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&#x2F;archives&#x2F;&quot;&gt; Archives &lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h3 id="11-服务器"><a href="#11-服务器" class="headerlink" title="11 服务器"></a>11 服务器</h3><h4 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h4><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <a href="https://github.com/hexojs/hexo-server">hexo-server</a> 才能使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><h4 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h4><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></table></figure><h4 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h4><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure><p>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p><h4 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h4><p><a href="http://pow.cx/">Pow</a> 是一个 Mac 系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>在 <code>~/.pow</code> 文件夹建立链接（symlink）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;.pow</span><br><span class="line">$ ln -s &#x2F;path&#x2F;to&#x2F;myapp</span><br></pre></td></tr></table></figure><p>您的网站将会在 <code>http://myapp.dev</code> 下运行，网址根据链接名称而定。</p><h3 id="11-生成文件"><a href="#11-生成文件" class="headerlink" title="11 生成文件"></a>11 生成文件</h3><p>使用 Hexo 生成静态文件快速而且简单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h4 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h4><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></table></figure><h4 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h4><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><blockquote><p>简写</p><p>上面两个命令可以简写为<br>$ hexo g -d<br>$ hexo d -g</p></blockquote><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><p>访问Hexo官网，下载喜欢的主题，此处下载主题为NexT，Next主题有非常多的自定义选项，网络上的美化教程也十分丰富，建议下载。</p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h4><p>如果您使用的是 Hexo 5.0 或更晚，安装最简单的方法是通过 npm：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd hexo-site</span><br><span class="line">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure><p>或者您可以克隆整个存储库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd hexo-site</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>如果您需要任何其他变体，请参阅<a href="https://theme-next.js.org/docs/getting-started/installation.html">详细的安装说明</a>。</p><p>安装后，打开 Hexo 配置文件并设置变量。<code>theme``next</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2 配置"></a>2 配置</h4><p>目前，NexT 鼓励用户使用<a href="https://theme-next.js.org/docs/getting-started/configuration.html">备用主题配置</a>来配置 NexT。使用<a href="https://theme-next.js.org/docs/advanced-settings/custom-files.html">自定义文件</a>可以轻松地自定义 NexT 的布局或样式。</p><p>不建议直接修改 NexT 主题中的任何文件。因为这可能导致错误（例如合并冲突），修改后的文件在升级主题时可能会被丢弃。</p><p>但是，您可以绕过合并冲突（错误消息（如**”提交更改或在合并之前将其存放”），**使用本地更改的命令。请参阅<a href="https://stackoverflow.com/a/15745424/5861495">此处</a>如何做到这一点。<code>Commit``Stash``Reset</code></p><h4 id="3-插件"><a href="#3-插件" class="headerlink" title="3 插件"></a>3 插件</h4><p>插件扩展和扩展了 NexT 的功能。插件有两种类型：核心插件和第三方插件。核心插件由 NexT 的基本功能要求。第三方插件提供大量可选功能。</p><p>配置这些插件非常容易。例如，如果您想在您的网站上启用，只需设置为在NexT配置文件中：<code>pjax``pjax``true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Easily enable fast Ajax navigation on your website.</span><br><span class="line"># For more information: https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;pjax</span><br><span class="line">pjax: true</span><br></pre></td></tr></table></figure><h4 id="4-配置-CDN"><a href="#4-配置-CDN" class="headerlink" title="4 配置 CDN"></a>4 配置 CDN</h4><p>默认情况下，第三方插件将从<a href="https://www.jsdelivr.com/">jsDelivr</a> CDN 加载。我们还提供其他可选的清洁发展机制，包括著名的<a href="https://unpkg.com/">联合国驻科特派团</a>和<a href="https://cdnjs.com/">CDNJS。</a></p><p>例如，如果您想使用而不是作为默认的 CDN 提供商，则需要编辑 NexT 配置文件中的以下设置：<code>unpkg``jsdelivr</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vendors:</span><br><span class="line">  # ...</span><br><span class="line">  # Some contents...</span><br><span class="line">  # ...</span><br><span class="line">  plugins: unpkg</span><br></pre></td></tr></table></figure><h4 id="5-更新"><a href="#5-更新" class="headerlink" title="5 更新"></a>5 更新</h4><p>NexT 的新版本将每月发布一次。请在更新主题之前阅读<a href="https://github.com/next-theme/hexo-theme-next/releases">发布说明</a>。您可以通过以下命令更新NexT。</p><p>安装最新版本的npm：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd hexo-site</span><br><span class="line">$ npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure><p>或更新到最新的主分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes&#x2F;next</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><p><strong>如果您想从v5.x/v7.x更新到最新版本，请阅读<a href="https://theme-next.js.org/docs/getting-started/upgrade.html">本文</a>。</strong></p><p>创建 Hexo 主题非常容易，您只要在 <code>themes</code> 文件夹内，新增一个任意名称的文件夹，并修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可切换主题。一个主题可能会有以下的结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── layout</span><br><span class="line">├── scripts</span><br><span class="line">└── source</span><br></pre></td></tr></table></figure><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>在本教程中，我们将会使用 <a href="https://travis-ci.com/">Travis CI</a> 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。如果你希望你的站点文件不被公开，请直接前往本文 [私有 Repository](#私有 Repository) 部分。</p><ol><li>新建一个 repository。如果你希望你的站点能通过 <code>&lt;你的 GitHub 用户名&gt;.github.io</code> 域名访问，你的 repository 应该直接命名为 <code>&lt;你的 GitHub 用户名&gt;.github.io</code>。</li><li>将你的 Hexo 站点文件夹推送到 repository 中。默认情况下不应该 <code>public</code> 目录将不会被推送到 repository 中，你应该检查 <code>.gitignore</code> 文件中是否包含 <code>public</code> 一行，如果没有请加上。</li><li>将 <a href="https://github.com/marketplace/travis-ci">Travis CI</a> 添加到你的 GitHub 账户中。</li><li>前往 GitHub 的 <a href="https://github.com/settings/installations">Applications settings</a>，配置 Travis CI 权限，使其能够访问你的 repository。</li><li>你应该会被重定向到 Travis CI 的页面。如果没有，请 <a href="https://travis-ci.com/">手动前往</a>。</li><li>在浏览器新建一个标签页，前往 GitHub <a href="https://github.com/settings/tokens">新建 Personal Access Token</a>，只勾选 <code>repo</code> 的权限并生成一个新的 Token。Token 生成后请复制并保存好。</li><li>回到 Travis CI，前往你的 repository 的设置页面，在 <strong>Environment Variables</strong> 下新建一个环境变量，<strong>Name</strong> 为 <code>GH_TOKEN</code>，<strong>Value</strong> 为刚才你在 GitHub 生成的 Token。确保 <strong>DISPLAY VALUE IN BUILD LOG</strong> 保持 <strong>不被勾选</strong> 避免你的 Token 泄漏。点击 <strong>Add</strong> 保存。</li><li>在你的 Hexo 站点文件夹中新建一个 <code>.travis.yml</code> 文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo: false</span><br><span class="line">language: node_js</span><br><span class="line">node_js:</span><br><span class="line">  - 10 # use nodejs v10 LTS</span><br><span class="line">cache: npm</span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - master # build master branch only</span><br><span class="line">script:</span><br><span class="line">  - hexo generate # generate static files</span><br><span class="line">deploy:</span><br><span class="line">  provider: pages</span><br><span class="line">  skip-cleanup: true</span><br><span class="line">  github-token: $GH_TOKEN</span><br><span class="line">  keep-history: true</span><br><span class="line">  on:</span><br><span class="line">    branch: master</span><br><span class="line">  local-dir: public</span><br></pre></td></tr></table></figure><ol><li>将 <code>.travis.yml</code> 推送到 repository 中。Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 <code>gh-pages</code> 分支下</li><li>在 GitHub 中前往你的 repository 的设置页面，修改 <code>GitHub Pages</code> 的部署分支为 <code>gh-pages</code>。</li><li>前往 <code>https://&lt;你的 GitHub 用户名&gt;.github.io</code> 查看你的站点是否可以访问。这可能需要一些时间。</li></ol><h4 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h4><p>如果你更希望你的站点部署在 <code>&lt;你的 GitHub 用户名&gt;.github.io</code> 的子目录中，你的 repository 需要直接命名为子目录的名字，这样你的站点可以通过 <code>https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code> 访问。你需要检查你的 Hexo 配置文件，将 <code>url</code> 修改为 <code>https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code>、将 <code>root</code> 的值修改为 <code>/&lt;repository 的名字&gt;/</code></p><h4 id="私有-Repository"><a href="#私有-Repository" class="headerlink" title="私有 Repository"></a>私有 Repository</h4><p>下面的指示基于 <a href="https://hexo.io/docs/one-command-deployment">一键部署</a> 编写。</p><ol><li><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>.</p></li><li><p>在 <strong>_config.yml</strong>（如果有已存在的请删除）添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;project&gt;</span><br><span class="line">  # example, https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexojs.github.io</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure></li><li><p>运行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</p></li><li><p>查看 <em>username</em>.github.io 上的网页是否部署成功。</p></li></ol><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://help.github.com/categories/github-pages-basics/">GitHub Pages 使用文档</a></li><li><a href="https://docs.travis-ci.com/user/tutorial/">Travis CI 使用文档</a></li><li><a href="https://github.com/hexojs/awesome-hexo">Awesome Hexo</a></li><li>[在百度上搜索 “Hexo GitHub”](<a href="https://www.baidu.com/s?wd=Hexo">https://www.baidu.com/s?wd=Hexo</a> GitHub)</li></ul>]]></content>
    
    
    <summary type="html">博客搭建及部署</summary>
    
    
    
    <category term="办公技能" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E5%8A%9E%E5%85%AC%E6%8A%80%E8%83%BD/"/>
    
    
    <category term="Hexo + Next + Github" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/Hexo-Next-Github/"/>
    
  </entry>
  
  <entry>
    <title>个人分享平台构建(工具篇)——Typora + PicGo + Gitee</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA(%E5%B7%A5%E5%85%B7%E7%AF%87)%E2%80%94%E2%80%94Typora+PicGo+Gitee/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA(%E5%B7%A5%E5%85%B7%E7%AF%87)%E2%80%94%E2%80%94Typora+PicGo+Gitee/</id>
    <published>2021-09-16T17:27:15.055Z</published>
    <updated>2021-03-06T05:23:33.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305161628.png" alt="个人分享平台构建"></p><span id="more"></span><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><h4 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a><a href="https://www.typora.io/">Typora</a></h4><p>​    <strong>Typora</strong>是一个所见即所得的Markdown格式文本编辑器，支持Windows、macOS和GNU/Linux操作系统，包括对GitHub Flavored Markdown扩展格式的支持、拼写检查、自定义CSS样式、数学公式渲染（通过MathJax）等特性，<a href="https://www.typora.io/">点击跳转下载</a>，软件截图如下：</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305140341.png" alt="image-20210305140336396" style="zoom: 50%;" /><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a><a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4">PicGo</a></h4><p>​    我们在写作、写 Markdown、博客时，经常都要插入图片。然而要贴图 (上传图片) 时还得登录图床网站/服务器去手工上传和复制链接，操作比较繁琐。</p><p>​    <strong>PicGo</strong> 是一款开源跨平台的免费图片上传工具以及图床相册管理软件，它能帮你快速地将图片上传到微博、又拍云、阿里云 OSS、腾讯云 COS、七牛、GitHub、sm.ms、Imgur 等常见的免费图床网站或云存储服务上，并自动复制图片的链接到剪贴板里，使用上非常高效便捷。<a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4">点击跳转下载</a>，软件截图如下：</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305140622.png" alt="image-20210305140621282" style="zoom: 50%;" /><h4 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a><a href="https://gitee.com/">Gitee</a></h4><p>​    <strong>Gitee</strong>是深圳市奥思网络科技有限公司推出的代码托管平台，支持Git和SVN，提供免费的私有仓库托管。目前开发者超过500万，托管项目超过1000万，汇聚几乎所有本土原创开源项目，并于2016年推出企业版，提供企业级代码托管服务。<a href="https://gitee.com/">点击跳转官网</a>进行Gitee账户注册。</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305141040.png" alt="image-20210305141038648" style="zoom: 25%;" /><h3 id="工具配置"><a href="#工具配置" class="headerlink" title="工具配置"></a>工具配置</h3><p>​    Typora作为一款Markdown编辑器，搭配图床工具PicGo以及托管平台Gitee，能够简洁高效的编写图文并茂的博客。按照链接==<strong>下载好Typora、PicGo并注册Gitee账号后</strong>==，下面进入配置环节。</p><h4 id="1-配置Gitee"><a href="#1-配置Gitee" class="headerlink" title="1.配置Gitee"></a>1.配置Gitee</h4><p>【创建仓库】</p><p>​    点击头像右侧“+”，【新建仓库】——填写【仓库名称】——是否开源选择【公开】（如果不公开，PicGo上传之后的图片无法在Typora中通过网络地址进行显示）——【创建】</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305144104.png" alt="image-20210305144102602" style="zoom: 67%;" /><p>【生成私人令牌】</p><p>​    点击头像，【设置】——【私人令牌】——【生成新令牌】——填写令牌描述【提交】，复制令牌</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305145414.png" alt="image-20210305145412307"></p><h4 id="2-配置PicGo"><a href="#2-配置PicGo" class="headerlink" title="2.配置PicGo"></a>2.配置PicGo</h4><p><a href="https://nodejs.org/zh-cn/">点击下载node.js</a>，为安装插件做准备</p><p>【插件设置】——下载gitee插件</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305145931.png" alt="image-20210305145929348" style="zoom: 50%;" /><p>【PicGo设置】——开启Gitee图床——开启【时间戳重命名】</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305150117.png" alt="image-20210305150114651" style="zoom:50%;" /><p>【图床设置】——Gitee图床设置</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305150333.png" alt="image-20210305150331034" style="zoom:50%;" /><h4 id="3-配置Typora"><a href="#3-配置Typora" class="headerlink" title="3.配置Typora"></a>3.配置Typora</h4><p>【文件】——【偏好设置】——【图像】，PicGo路径为当前电脑安装路径</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305151539.png" alt="image-20210305151537874" style="zoom:50%;" /><p>【验证图片上传选项】</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305151955.png" alt="image-20210305151953065" style="zoom: 67%;" /><h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><p>​    运行PicGo，运行Typora，插入图片进行测试。右键插入的图片，点击【上传图片】，上传成功，并能正确显示，完成测试</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305152932.png" style="zoom:25%;" />]]></content>
    
    
    <summary type="html">图床上传</summary>
    
    
    
    <category term="办公技能" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E5%8A%9E%E5%85%AC%E6%8A%80%E8%83%BD/"/>
    
    
    <category term="Typora + PicGo + Gitee" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/Typora-PicGo-Gitee/"/>
    
  </entry>
  
  <entry>
    <title>个人分享平台构建（前导篇）——Markdown基础语法</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA(%E5%89%8D%E5%AF%BC%E7%AF%87)%E2%80%94%E2%80%94Markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA(%E5%89%8D%E5%AF%BC%E7%AF%87)%E2%80%94%E2%80%94Markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2021-09-16T17:27:15.043Z</published>
    <updated>2021-03-06T05:23:29.475Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/20210305161628.png" alt="个人分享平台构建"></p><h1 id="MarkDown常用语法"><a href="#MarkDown常用语法" class="headerlink" title="MarkDown常用语法"></a>MarkDown常用语法</h1><p><a href="https://www.bilibili.com/video/av87982836#reply2366896129">基础视频讲解链接</a><br><a href="https://www.bilibili.com/video/av88551739/">画图视频讲解链接</a></p><span id="more"></span><p>本篇为前导教程，帮助大家了解Markdown的基础语法 ，Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。了解Markdown语法规则有利于大家后期个人博客的撰写。</p><h2 id="语块及标识"><a href="#语块及标识" class="headerlink" title="语块及标识"></a>语块及标识</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```语言名称</span></span><br><span class="line"><span class="code">```(英文输入法下输入)</span></span><br></pre></td></tr></table></figure><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`行内代码`</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;一级引用</span><br><span class="line">&gt;&gt;二级引用</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***  或  ---  或  ___</span><br></pre></td></tr></table></figure><h2 id="文字效果"><a href="#文字效果" class="headerlink" title="文字效果"></a>文字效果</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 标题名字 （#个数代表标题级数）</span><br></pre></td></tr></table></figure><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本**  或  __文本__</span><br><span class="line">__(英文输入法下 Shift + -)</span><br></pre></td></tr></table></figure><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*文本*  或  _文本_</span><br></pre></td></tr></table></figure><h3 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***文本***  或  ___文本___</span><br></pre></td></tr></table></figure><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~文字~~</span><br></pre></td></tr></table></figure><h3 id="在Typora下需勾选扩展语法的效果"><a href="#在Typora下需勾选扩展语法的效果" class="headerlink" title="在Typora下需勾选扩展语法的效果"></a>在Typora下需勾选扩展语法的效果</h3><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==文本== （Typora下需勾选扩展语法)</span><br></pre></td></tr></table></figure><h4 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">水 H~<span class="number">2</span>~O</span><br><span class="line">双氧水 H~<span class="number">2</span>~O~<span class="number">2</span>~</span><br></pre></td></tr></table></figure><h4 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">面积 m^<span class="number">2</span>^</span><br><span class="line">体积 m^<span class="number">3</span>^</span><br></pre></td></tr></table></figure><h3 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h3><p>😁😀 （win标 + ;)</p><h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><h3 id="外部跳转"><a href="#外部跳转" class="headerlink" title="外部跳转"></a>外部跳转</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[描述](网址)</span><br></pre></td></tr></table></figure><h3 id="内部跳转"><a href="#内部跳转" class="headerlink" title="内部跳转"></a>内部跳转</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[描述]（#标题）</span><br></pre></td></tr></table></figure><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;网址&gt;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](图片本地地址)</span><br></pre></td></tr></table></figure><h3 id="网络图片"><a href="#网络图片" class="headerlink" title="网络图片"></a>网络图片</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](图片网络地址)</span><br></pre></td></tr></table></figure><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序表"><a href="#无序表" class="headerlink" title="无序表"></a>无序表</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 可以使用“*”作为标记</span><br><span class="line">+ 也可以使用“+”</span><br><span class="line">- 或者“-”</span><br></pre></td></tr></table></figure><h4 id="有序表"><a href="#有序表" class="headerlink" title="有序表"></a>有序表</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数字.空格</span><br><span class="line"><span class="number">1.</span> 有序表以数字和<span class="string">&#x27;.&#x27;</span>开始</span><br><span class="line"><span class="number">4.</span> 数字序列不会影响生成序列</span><br><span class="line"><span class="number">5</span>\. 数字\. 取消显示为列表</span><br></pre></td></tr></table></figure><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用|来分隔不同单元格，使用-来分隔表头和其他行,使用:来设置对齐</span><br><span class="line">姓名 | 年龄</span><br><span class="line">-- | --</span><br><span class="line">张三 | <span class="number">12</span></span><br><span class="line">李四 | <span class="number">23</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">MarkDown常用语法</summary>
    
    
    
    <category term="办公技能" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E5%8A%9E%E5%85%AC%E6%8A%80%E8%83%BD/"/>
    
    
    <category term="MarkDown" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(12)—流程控制结构</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(12)%E2%80%94%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(12)%E2%80%94%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</id>
    <published>2021-09-16T17:27:15.035Z</published>
    <updated>2021-08-20T09:36:19.621Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="流程控制结构"><a href="#流程控制结构" class="headerlink" title="流程控制结构"></a>流程控制结构</h3><h4 id="1-case结构——作为表达式"><a href="#1-case结构——作为表达式" class="headerlink" title="1. case结构——作为表达式"></a>1. case结构——作为表达式</h4><table><thead><tr><th></th><th>语法</th><th>位置</th></tr></thead><tbody><tr><td>情况一</td><td>case 表达式<br />when 值1 then 值1<br />when 值2 then 值2<br />…<br />else 值n<br />end;</td><td>Begin end中<br /> Begin end外面</td></tr><tr><td>情况二</td><td>case <br />when 条件1 then 值1<br />when 条件2 then 值2<br />…<br />else 值n<br />end;</td><td>Begin end中 <br />Begin end外面</td></tr></tbody></table><h4 id="2-case结构——作为独立的语句"><a href="#2-case结构——作为独立的语句" class="headerlink" title="2. case结构——作为独立的语句"></a>2. case结构——作为独立的语句</h4><table><thead><tr><th></th><th>语法</th><th>位置</th></tr></thead><tbody><tr><td>情况一</td><td>case <br />when 值1 then 语句1<br />when 值2 then 语句2<br />…<br />else 值n<br />end case;</td><td>Begin end中</td></tr><tr><td>情况二</td><td>case <br />when 值1 then 语句1<br />when 值2 then 语句2<br />…<br />else 值n<br />end case;</td><td>Begin end中</td></tr></tbody></table><h4 id="3-循环结构"><a href="#3-循环结构" class="headerlink" title="3. 循环结构"></a>3. 循环结构</h4><table><thead><tr><th>名称</th><th>语法</th><th>特点</th><th>位置</th></tr></thead><tbody><tr><td>while</td><td>Label: while loop_condition<br />do<br />      loop_list<br />End while label;</td><td>先判断后执行</td><td>Begin end中</td></tr><tr><td>repeat</td><td>Label: repeat<br />              loop_list<br />Until end_condition<br />end repeat label;</td><td>先执行后判断</td><td>Begin end中</td></tr><tr><td>loop</td><td>Label: loop<br />              loop_list<br />End loop label;</td><td>没有条件的死循环</td><td>Begin end中</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">流程控制结构</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(11)—存储过程和函数</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(11)%E2%80%94%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(11)%E2%80%94%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/</id>
    <published>2021-09-16T17:27:15.033Z</published>
    <updated>2021-08-20T09:22:05.496Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="存储过程和函数"><a href="#存储过程和函数" class="headerlink" title="存储过程和函数"></a>存储过程和函数</h3><h4 id="1-什么是存储过程和函数"><a href="#1-什么是存储过程和函数" class="headerlink" title="1. 什么是存储过程和函数"></a>1. 什么是存储过程和函数</h4><p>存储过程和函数： 事先经过编译并存储在数据库中的一段sql语句的集合。 </p><h4 id="2-使用存储过程和函数的好处"><a href="#2-使用存储过程和函数的好处" class="headerlink" title="2. 使用存储过程和函数的好处"></a>2. 使用存储过程和函数的好处</h4><p>使用好处：<br> 1、简化应用开发人员的很多工作<br>2、减少数据在数据库和应用服务器之间的传输<br>3、提高了数据处理的效率</p><h4 id="3-创建存储过程和函数"><a href="#3-创建存储过程和函数" class="headerlink" title="3. 创建存储过程和函数"></a>3. 创建存储过程和函数</h4><ul><li><p>创建存储过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create procedure 存储过程名 ([proc_parameter[,…]])</span><br><span class="line">[characteristic…]routine_body</span><br></pre></td></tr></table></figure></li><li><p>创建函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create function 函数名([func_parameter[,…]])</span><br><span class="line">returns type</span><br><span class="line">[characteristic…]routine_body</span><br></pre></td></tr></table></figure></li><li><p>proc_parameter: [in|out|inout] param_name type</p></li><li><p>Func_paramter: param_name type</p></li><li><p>Type: 任何有效的mysql数据类型</p></li><li><p>Characteristic: </p><p>language sql(默认，且推荐) </p><p>|[not] deterministic </p><p>|{contains sql|no sql</p><p>​                       |reads sql data</p><p>​                       |modifies sql data} </p><p>|sql security{definer|invoker} </p><p>|comment ‘string’</p></li><li><p>Rountine_body: 有效的sql 过程语句</p></li></ul><h4 id="4-修改存储过程和函数"><a href="#4-修改存储过程和函数" class="headerlink" title="4. 修改存储过程和函数"></a>4. 修改存储过程和函数</h4><ul><li><p>修改存储过程： <code>alter procedure 存储过程名 [charactristic…]</code></p></li><li><p>修改函数： <code>alter function 函数名 [charactristic…]</code></p><p> characteristic: </p><p>​             {contains sql|no sql|reads sql data|modifies sql data}<br>​             |sql security{definer|invoker}<br>​             |comment ‘string’</p></li></ul><h4 id="5-调用存储过程和函数"><a href="#5-调用存储过程和函数" class="headerlink" title="5. 调用存储过程和函数"></a>5. 调用存储过程和函数</h4><p>• 调用存储过程： call 存储过程名(参数列表) </p><p>• 调用函数： Select 函数名(参数列表)</p><p><strong>案例</strong></p><ul><li>查询员工名为king的所有记录 </li><li>根据输入的员工名，查询部门名 </li><li>根据指定的员工编号，返回工资 </li><li>根据指定的员工编号，返回工资和部门号 </li><li>将输入的a和b都翻倍并返回</li></ul><h4 id="6-修改存储过程或函数"><a href="#6-修改存储过程或函数" class="headerlink" title="6. 修改存储过程或函数"></a>6. 修改存储过程或函数</h4><p>说明：一次只能删除一个存储过程或者函数，并且要求有该 过程或函数的alter routine 权限 删除存储过程： <code>drop procedure [if exists] 存储过程名</code><br>删除函数： <code>drop function [if exists] 函数名</code></p><h4 id="7-查看存储过程和函数"><a href="#7-查看存储过程和函数" class="headerlink" title="7. 查看存储过程和函数"></a>7. 查看存储过程和函数</h4><ol><li><p>查看存储过程或函数的状态： </p><p><code>show &#123;procedure|function&#125; status like 存储过程或函数名</code></p></li><li><p>查看存储过程或函数的定义：</p><p><code> show create &#123;procedure|function&#125; 存储过程或函数名</code></p></li><li><p>通过查看information_schema.routines了解存储过程和函数的 信息（了解） </p><p><code>select * from rountines where rounine_name =存储过程名|函数名</code></p></li></ol>]]></content>
    
    
    <summary type="html">存储过程和函数</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(10)—视图</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(10)%E2%80%94%E8%A7%86%E5%9B%BE/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(10)%E2%80%94%E8%A7%86%E5%9B%BE/</id>
    <published>2021-09-16T17:27:15.031Z</published>
    <updated>2021-08-20T09:24:40.528Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><h4 id="1-什么是视图"><a href="#1-什么是视图" class="headerlink" title="1. 什么是视图"></a>1. 什么是视图</h4><ul><li><p>视图：MySQL从5.0.1版本开始提供视图功能。一种虚拟存在的表，行和列的数据来自定义视图的查询中使用的表 ，并且是在使用视图时动态生成的，只保存了sql逻辑，不保存查询结果 </p></li><li><p>应用场景： </p><ul><li>– 多个地方用到同样的查询结果 </li><li>– 该查询结果使用的sql语句较复杂</li></ul></li><li><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create view my_v1</span><br><span class="line">as</span><br><span class="line">select studentname,majorname</span><br><span class="line">from student s</span><br><span class="line">inner join major m</span><br><span class="line">on s.majorid &#x3D; m.majorid</span><br><span class="line">where s.majorid &#x3D; 1;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-1-常见题目"><a href="#1-1-常见题目" class="headerlink" title="1.1 常见题目"></a>1.1 常见题目</h5><ol><li>查询邮箱中包含a字符的员工名、部门名和工种信息</li><li>查询各部门的平均工资级别</li><li>查询平均工资最低的部门信息</li><li>查询平均工资最低的部门名和工资</li></ol><h5 id="1-2-视图的好处"><a href="#1-2-视图的好处" class="headerlink" title="1.2 视图的好处"></a>1.2 视图的好处</h5><p>• 重用sql语句 </p><p>• 简化复杂的sql操作，不必知道它的查询细节 </p><p>• 保护数据，提高安全性</p><h4 id="2-创建或修改视图"><a href="#2-创建或修改视图" class="headerlink" title="2 创建或修改视图"></a>2 创建或修改视图</h4><ul><li><p>创建视图的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create [or replace] view view_name</span><br><span class="line">as select_statement</span><br><span class="line">[with | cascaded | local | check option]</span><br></pre></td></tr></table></figure></li><li><p>修改视图的语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter view view_name</span><br><span class="line">as select_statement</span><br><span class="line">[with | cascaded | local | check option]</span><br></pre></td></tr></table></figure></li></ul><p>视图的可更新性和视图中查询的定义有关系，以下类型的视图是不能更新的。</p><ul><li>包含以下关键字的sql语句：分组函数、distinct、group by 、having、union或者union all</li><li>常量视图</li><li>Select中包含子查询 </li><li>join </li><li>from一个不能更新的视图 </li><li>where子句的子查询引用了from子句中的表</li></ul><h4 id="3-删除视图"><a href="#3-删除视图" class="headerlink" title="3. 删除视图"></a>3. 删除视图</h4><ul><li><p>删除视图的语法</p><p>用户可以一次删除一个或者多个视图，前提是必须有该视 图的drop权限。 </p><p><code>drop view [if exists] view_name,view_name …[restrict|cascade]</code></p></li></ul><h4 id="4-查看视图"><a href="#4-查看视图" class="headerlink" title="4. 查看视图"></a>4. 查看视图</h4><ul><li><p>查看视图的语法： </p><p>show tables; 如果需要查询某个视图的定义，可以使用show create view 命令进行查看： <code>show create view view_name \G</code></p></li></ul>]]></content>
    
    
    <summary type="html">视图</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(09)—事务</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(09)%E2%80%94%E4%BA%8B%E5%8A%A1/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(09)%E2%80%94%E4%BA%8B%E5%8A%A1/</id>
    <published>2021-09-16T17:27:15.030Z</published>
    <updated>2021-08-20T08:11:37.828Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><h4 id="1-事务的概念和特性"><a href="#1-事务的概念和特性" class="headerlink" title="1. 事务的概念和特性"></a>1. 事务的概念和特性</h4><h5 id="1-1-事务的概念"><a href="#1-1-事务的概念" class="headerlink" title="1.1 事务的概念"></a>1.1 事务的概念</h5><ul><li>事务：事务由单独单元的一个或多个SQL语句组成，在这个单元中，每个MySQL语句是相互依赖的。而整个单独单元作为一个不可分割的整体，如果单元中某条SQL语句一旦执行失败或产生错误，整个单元将会回滚。所有受到影响的数据将返回到事物开始以前的状态；如果单元中的所 有SQL语句均执行成功，则事物被顺利执行。</li></ul><h5 id="1-2-MySQL中的存储引擎"><a href="#1-2-MySQL中的存储引擎" class="headerlink" title="1.2 MySQL中的存储引擎"></a>1.2 MySQL中的存储引擎</h5><ol><li>概念：在mysql中的数据用各种不同的技术存储 在文件（或内存）中。</li><li>通过show engines；来查看mysql支持的存储引 擎。</li><li>在mysql中用的最多的存储引擎有：innodb， myisam ,memory 等。其中innodb支持事务，而 myisam、memory等不支持事务</li></ol><h5 id="1-3-事务的特点"><a href="#1-3-事务的特点" class="headerlink" title="1.3 事务的特点"></a>1.3 事务的特点</h5><ul><li><p>事务的ACID(acid)属性</p><ul><li><p>原子性(Atomicity)</p><p>原子性是指事务是一个不可分割的工作单位，事务中的操作要么 都发生，要么都不发生。</p></li><li><p>一致性(Consistency)</p><p>事务必须使数据库从一个一致性状态变换到另外一个一致性状态 。</p></li><li><p>隔离性(Isolation)</p><p>事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</p></li><li><p>持久性(Durability)</p><p>持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来的其他操作和数据库故障不应该对其有任何影响</p></li></ul></li></ul><h5 id="1-4-事务的使用"><a href="#1-4-事务的使用" class="headerlink" title="1.4 事务的使用"></a>1.4 事务的使用</h5><ul><li>以第一个DML语句的执行作为开始</li><li>以下面的其中之一作为结束<ul><li>commit或rollback语句</li><li>DDL或DCL语句（自动提交）</li><li>用户会话正常结束</li><li>系统异常终了</li></ul></li></ul><h4 id="2-事物的隔离级别"><a href="#2-事物的隔离级别" class="headerlink" title="2. 事物的隔离级别"></a>2. 事物的隔离级别</h4><ul><li><p>对于同时运行的多个事务, 当这些事务访问数据库中相同的数据时, 如果没有采取必要的隔离机制, 就会导致各种并发问题:</p><ul><li>脏读: 对于两个事务 T1, T2, T1 读取了已经被 T2 更新但还没有被提交的字段。之后, 若 T2 回滚, T1读取的内容就是临时且无效的。</li><li>不可重复读: 对于两个事务T1, T2, T1 读取了一个字段, 然后 T2 更新了该字段。之后, T1再次读取同一个字段, 值就不同了。</li><li>幻读: 对于两个事务T1, T2, T1 从一个表中读取了一个字段, 然后 T2 在该表中插 入了一些新的行。之后, 如果 T1 再次读取同一个表, 就会多出几行。</li></ul></li><li><p>数据库事务的隔离性: 数据库系统必须具有隔离并发运行各个事务的能力,  使它们不会相互影响, 避免各种并发问题。</p></li><li><p>一个事务与其他事务隔离的程度称为隔离级别。 数据库规定了多种事务隔离级别, 不同隔离级别对应不同的干扰程度, 隔离级别越高, 数据一致性就越好, 但并发性越弱。</p></li><li><p>数据库提供的4种事务隔离级别</p><table><thead><tr><th>隔离级别</th><th>描述</th></tr></thead><tbody><tr><td>READ UNCOMMITTED(读未提交数据)</td><td>允许事务读取未被其他事务提交的变更，脏读，不可重复读和幻读的问题都会出现</td></tr><tr><td>READ COMMITED(读已提交数据)</td><td>只允许事务读取已被其他事务提交的变更，可以避免脏读，但是不可重复读和幻读问题仍可能出现</td></tr><tr><td>REPEATABLE READ(可重复读)</td><td>确保事务可以多次从一个字段中读取相同的值。在这个事务持续期间，禁止其他事务对这个字段进行更新，可以避免脏读和不可重复读，但幻读的问题仍然存在</td></tr><tr><td>SERIALIZABLE(串行化)</td><td>确保事务可以从一个表中读取相同的行，在这个事务持续期间，禁止其他事务对该表执行插入，更新和删除操作，所有并发都能避免，但性能十分低下</td></tr></tbody></table><p>Oracle 支持的 2 种事务隔离级别：READ COMMITED,  SERIALIZABLE。 Oracle 默认的事务隔离级别为: READ  COMMITED；Mysql 支持 4 种事务隔离级别. Mysql 默认的事务隔离级别 为: REPEATABLE READ</p></li></ul><h4 id="3-事务的案例演示"><a href="#3-事务的案例演示" class="headerlink" title="3. 事务的案例演示"></a>3. 事务的案例演示</h4><h5 id="3-1-在-MySql-中设置隔离级别"><a href="#3-1-在-MySql-中设置隔离级别" class="headerlink" title="3.1 在 MySql 中设置隔离级别"></a>3.1 在 MySql 中设置隔离级别</h5><ul><li>每启动一个 mysql 程序, 就会获得一个单独的数据库连接. 每个数据库连接都有一个全局变量 @@tx_isolation, 表示当前的事务隔离级别</li><li>查看当前的隔离级别: SELECT @@tx_isolation;</li><li>设置当前 mySQL 连接的隔离级别:<ul><li>set transaction isolation level read committed;</li></ul></li><li>设置数据库系统的全局的隔离级别: <ul><li>set global transaction isolation level read committed；</li></ul></li></ul>]]></content>
    
    
    <summary type="html">事务</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(08)—约束和分页</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(08)%E2%80%94%E7%BA%A6%E6%9D%9F%E5%92%8C%E5%88%86%E9%A1%B5/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(08)%E2%80%94%E7%BA%A6%E6%9D%9F%E5%92%8C%E5%88%86%E9%A1%B5/</id>
    <published>2021-09-16T17:27:15.028Z</published>
    <updated>2021-08-20T08:12:15.858Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="约束和分页"><a href="#约束和分页" class="headerlink" title="约束和分页"></a>约束和分页</h3><h4 id="1-描述约束"><a href="#1-描述约束" class="headerlink" title="1. 描述约束"></a>1. 描述约束</h4><h5 id="1-1-什么是约束"><a href="#1-1-什么是约束" class="headerlink" title="1.1 什么是约束"></a>1.1 什么是约束</h5><p>为了保证数据的一致性和完整性，SQL规范以约束的方式对表数据进行额外的条件限制。 约束是表级的强制规定 。可以在创建表时规定约束（通过 CREATE  TABLE 语句），或者在表创建之后也可以（通过 ALTER TABLE 语句）</p><ul><li>有以下六种约束<ul><li>NOT NULL 非空约束，规定某个字段不能为空</li><li>UNIQUE 唯一约束，规定某个字符在整个表中是唯一的</li><li>PRIMARY KEY 主键（非空且唯一）</li><li>FOREIGN KEY 外键</li><li>CHECK 检查约束</li><li>DEFAULT 默认值</li></ul></li></ul><p>MySQL不支持check约束，但可以使用check约束，而没有任何效果；具体细节可以参阅W3Cschool手册</p><ul><li>根据约束数据列的限制，约束可以分为：<ul><li>单列约束：每个约束只约束一列</li><li>多列约束：每个约束可以约束多列</li></ul></li><li>根据约束的作用范围，约束可以分为：<ul><li>列级约束只能作用在一列上，跟在列的定义后面</li><li>表级约束可以作用在多个列上，不与列一起，而是单独定义</li></ul></li></ul><h4 id="2-创建和维护约束"><a href="#2-创建和维护约束" class="headerlink" title="2. 创建和维护约束"></a>2. 创建和维护约束</h4><h5 id="2-1-NOT-NULL约束"><a href="#2-1-NOT-NULL约束" class="headerlink" title="2.1 NOT NULL约束"></a>2.1 NOT NULL约束</h5><ul><li>非空约束用于确保当权列的值不为空值，非空约束只能出现在表对象的列上</li><li>NULL类型特征：<ul><li>所有的类型的值都可以是null，包括int,float等数据类型</li><li>空字符串””不等于null，0也不等于null</li></ul></li></ul><ol><li><p>创建not null约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">id int(10) not null,</span><br><span class="line">name varchar(20) not null default &#39;abc&#39;,</span><br><span class="line">sex char null</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>增加not null约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp</span><br><span class="line">modify sex varchar(30) not null;</span><br></pre></td></tr></table></figure></li><li><p>取消not null约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp</span><br><span class="line">modify sex varchar(30) null;</span><br></pre></td></tr></table></figure></li><li><p>取消not null约束，增加默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp</span><br><span class="line">modify name varchar(15) default &#39;abc&#39; null;</span><br></pre></td></tr></table></figure></li></ol><h5 id="2-2-UNIQUE约束"><a href="#2-2-UNIQUE约束" class="headerlink" title="2.2 UNIQUE约束"></a>2.2 UNIQUE约束</h5><ul><li><p>同一个表可以有多个唯一约束，多个列组合的约束。在创建唯一约束的时候，如果不给唯一约束名称，就默认和列名相同。</p></li><li><p>MySQL回给唯一约束的列默认创建一个唯一的索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int not null,</span><br><span class="line">    name varchar(25),</span><br><span class="line">    password varchar(16),</span><br><span class="line">    #使用表级约束语法</span><br><span class="line">    constraint uk_name_pwd unique(name,password)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>表示用户名和密码组合不能重复</p></li></ul><ol><li><p>添加唯一约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table user</span><br><span class="line">add unique(name,password);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table user</span><br><span class="line">add constraint uk_name_pwd unique(name,password);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table user</span><br><span class="line">modify name varchar(20) unique;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table user</span><br><span class="line">drop index uk_name_pwd;</span><br></pre></td></tr></table></figure></li></ol><h5 id="2-3-PRIMARY-KEY约束"><a href="#2-3-PRIMARY-KEY约束" class="headerlink" title="2.3 PRIMARY KEY约束"></a>2.3 PRIMARY KEY约束</h5><p>​         主键约束相当于唯一约束+非空约束的组合，主键约束列不允许重复，也不允许出现空值；如果是多列组合的主键约束，那么这些列都不允许重复；每个表最多只允许一个主键，建立主键约束可以在列级别创建，也可以在表级别创建；MySQL的主键名总是PRIMARY，当创建主键约束时，系统默认会在所在的列和列组合上<u><strong>建立唯一索引</strong></u></p><p><strong>列级模式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table emp4(</span><br><span class="line">id int auto_increment primary key;</span><br><span class="line">    name varchar(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>表级模式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table emp5(</span><br><span class="line">id int not null auto_increment,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    pwd varchar(15),</span><br><span class="line">    constraint emp5_id_pk primary key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>组合模式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table emp6(</span><br><span class="line">id int not null,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    pwd varchar(15),</span><br><span class="line">    constraint emp6_pk primary key(name,pwd)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><p>删除主键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp5</span><br><span class="line">drop primary key;</span><br></pre></td></tr></table></figure></li><li><p>添加主键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp5</span><br><span class="line">add primary key(name,pwd);</span><br></pre></td></tr></table></figure></li><li><p>修改主键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp5</span><br><span class="line">modify id int primary key;</span><br></pre></td></tr></table></figure></li></ol><h5 id="2-4-FOREIGN-KEY约束"><a href="#2-4-FOREIGN-KEY约束" class="headerlink" title="2.4 FOREIGN KEY约束"></a>2.4 FOREIGN KEY约束</h5><p>​          外键约束是保证一个或两个表之间的参照完整性，外键是构建于一个表的两个字段或是两个表的两个字段之间的参照关系。从表的外键值必须在主表中能找到或者为空。当主表的记录被从表参照时，主表的记录将不允许删除， 如果要删除数据，需要先删除从表中依赖该记录的数据，然后才可以删除主表的数据。还有一种就是级联删除子表数据。注意：外键约束的参照列，在主表中引用的只能是主键或唯一键约束的列，同一个表可以有多个外键约束</p><ol><li><p>创建外键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#主表</span><br><span class="line">create table dept(</span><br><span class="line">dept_id int auto_increment primary key,</span><br><span class="line">    dept_name varchar(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#从表</span><br><span class="line">create table emp(</span><br><span class="line">emp_id into auto_increment primary key,</span><br><span class="line">    last_name varchar(15),</span><br><span class="line">    dept_id int,</span><br><span class="line">    constraint emp_dept_id_fk foreign key(dept_id) </span><br><span class="line">    references dept(dept_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>创建多列外键组合，必须使用表级约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#主表</span><br><span class="line">create table calsses(</span><br><span class="line">id int,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    number int,</span><br><span class="line">    primary key(name,number)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#从表</span><br><span class="line">create table student(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">    classes_name varchar(20),</span><br><span class="line">    classes_number int,</span><br><span class="line">    foreign key(classes_name,classes_number)</span><br><span class="line">    references classes(name,number)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>删除外键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table emp</span><br><span class="line">drop foreign key emp_dept_id_fk;</span><br></pre></td></tr></table></figure></li><li><p>增加外键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table emp</span><br><span class="line">add [constraint emp_dept_id_fk] foreign key(dept_id)</span><br><span class="line">references dept(dept_id);</span><br></pre></td></tr></table></figure></li><li><p>FOREIGN KEY约束的关键字</p><p>FOREIGN KEY：在表级指定子表中的列</p><p>REFERENCES：标示在父表中的列</p><p>ON DELETE CASCADE(级联删除)：当父表中的列被删除时，子表中相对应的列也被删除</p><p>ON DELETE SET NULL(级联置空)：子表中相应的列置空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table student(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    classes_name varchar(20),</span><br><span class="line">    classes_number int,</span><br><span class="line">    #表级别联合外键</span><br><span class="line">    foreign key(classes_name,classes_number)</span><br><span class="line">    references classes(name,number)</span><br><span class="line">    on delete cascade</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><h5 id="2-5-CHECK约束"><a href="#2-5-CHECK约束" class="headerlink" title="2.5 CHECK约束"></a>2.5 CHECK约束</h5><p>MySQL可以使用check约束，但check约束对数据验证没有任何作用，添加数据时，没有任何错误或警告</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table temp(</span><br><span class="line">id int auto_increment,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    age int check(age &gt; 20),</span><br><span class="line">    primary key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="3-数据库分页"><a href="#3-数据库分页" class="headerlink" title="3. 数据库分页"></a>3. 数据库分页</h4><ul><li>背景<ul><li>查询返回的记录太多，查看起来不方便</li></ul></li><li>分页原理<ul><li>所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件</li></ul></li></ul><h5 id="3-1-使用limit实现分页"><a href="#3-1-使用limit实现分页" class="headerlink" title="3.1 使用limit实现分页"></a>3.1 使用limit实现分页</h5><ul><li><p>怎么分段，当前在第几段（每页有几条，当前在第几页）</p><ul><li>前10条记录：SELECT * FROM table LIMIT 0,10; </li><li>第11至20条记录：SELECT * FROM table LIMIT 10,10; </li><li>第21至30条记录： SELECT * FROM table LIMIT 20,10;</li></ul></li><li><p>公式：（当前页数-1）*每页条数，每页条数</p><p>SELECT * FROM table LIMIT(PageNo - 1)*PageSize,PageSize;</p></li><li><p>注意：</p><ul><li>limit子句必须放在整个查询语句的最后</li></ul></li></ul>]]></content>
    
    
    <summary type="html">约束和分页</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(07)—常见的数据类型</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(07)%E2%80%94%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(07)%E2%80%94%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-09-16T17:27:15.007Z</published>
    <updated>2021-08-20T05:58:49.501Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="常见的数据类型"><a href="#常见的数据类型" class="headerlink" title="常见的数据类型"></a>常见的数据类型</h3><h4 id="1-数值类型"><a href="#1-数值类型" class="headerlink" title="1. 数值类型"></a>1. 数值类型</h4><h5 id="1-1-整型"><a href="#1-1-整型" class="headerlink" title="1.1 整型"></a>1.1 整型</h5><table><thead><tr><th>整数类型</th><th>字节</th><th>范围</th></tr></thead><tbody><tr><td>Tinyint</td><td>1</td><td>有符号：-128<del>127 无符号：0</del>255</td></tr><tr><td>Smallint</td><td>2</td><td>有符号：-32768<del>32767 无符号：0</del>65535</td></tr><tr><td>Mediumint</td><td>3</td><td>有符号：-8388608<del>8388607 无符号：0</del>1677215</td></tr><tr><td>Int、integer</td><td>4</td><td>有符号：- 2147483648<del>2147483647 无符号：0</del>4294967295</td></tr><tr><td>Bigint</td><td>8</td><td>有符号： -9223372036854775808 <del>9223372036854775807 <br />无符号：0</del> 9223372036854775807*2+1</td></tr></tbody></table><h5 id="1-2-小数"><a href="#1-2-小数" class="headerlink" title="1.2 小数"></a>1.2 小数</h5><table><thead><tr><th>浮点数类型</th><th>字节</th><th>范围</th></tr></thead><tbody><tr><td>float</td><td>4</td><td>±1.75494351E-38~±3.402823466E+38</td></tr><tr><td>double</td><td>8</td><td>±2.2250738585072014E-308~ ±1.7976931348623157E+308</td></tr></tbody></table><table><thead><tr><th>定点数类型</th><th>字节</th><th>范围</th></tr></thead><tbody><tr><td>DEC(M,D) DECIMAL(M,D)</td><td>M+2</td><td>最大取值范围与double相同，给定decimal的有效取值范围由M和D 决定</td></tr></tbody></table><h5 id="1-3-位类型"><a href="#1-3-位类型" class="headerlink" title="1.3 位类型"></a>1.3 位类型</h5><table><thead><tr><th>位类型</th><th>字节</th><th>范围</th></tr></thead><tbody><tr><td>Bit(M)</td><td>1~8</td><td>Bit(1)~bit(8)</td></tr></tbody></table><h4 id="2-字符类型"><a href="#2-字符类型" class="headerlink" title="2. 字符类型"></a>2. 字符类型</h4><h5 id="2-1-char和varchar类型"><a href="#2-1-char和varchar类型" class="headerlink" title="2.1 char和varchar类型"></a>2.1 char和varchar类型</h5><p>说明：用来保存MySQL中比较短的字符串</p><table><thead><tr><th>字符串类型</th><th>最多字符数</th><th>描述以及存储需求</th></tr></thead><tbody><tr><td>char(M)</td><td>M</td><td>M为0-255之间的整数</td></tr><tr><td>varchar(M)</td><td>M</td><td>M为0-65535之间的整数</td></tr></tbody></table><h5 id="2-2-binary和varbinary类型"><a href="#2-2-binary和varbinary类型" class="headerlink" title="2.2 binary和varbinary类型"></a>2.2 binary和varbinary类型</h5><p>说明：类似于char和varvchar，不同的是他们包含二进制字符串而不包括非二进制字符串</p><h5 id="2-3-Enum类型"><a href="#2-3-Enum类型" class="headerlink" title="2.3 Enum类型"></a>2.3 Enum类型</h5><p>说明：又称为枚举类型，要求插入的值必须属于列表中指定的值之一</p><p>如果列表成员为1-255，则需要1字节存储</p><p>如果列表成员为25-65535，则需要2字节存储，最多需要65535个成员！</p><h5 id="2-4-Set类型"><a href="#2-4-Set类型" class="headerlink" title="2.4 Set类型"></a>2.4 Set类型</h5><p>说明：和Enum类型相似，里面可以保存0-64个成员。和Enum类型最大的区别是：SET类型一次可以选取多个成员，而Enum只能选一个，根据成员个数不同，存储所占字节也不相同</p><table><thead><tr><th>成员数</th><th>字节数</th></tr></thead><tbody><tr><td>1-8</td><td>1</td></tr><tr><td>9-16</td><td>2</td></tr><tr><td>17-24</td><td>3</td></tr><tr><td>25-32</td><td>4</td></tr><tr><td>33-64</td><td>8</td></tr></tbody></table><h4 id="3-日期类型"><a href="#3-日期类型" class="headerlink" title="3. 日期类型"></a>3. 日期类型</h4><table><thead><tr><th>日期和时间类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>date</td><td>4</td><td>1000-01-01</td><td>9999-12-31</td></tr><tr><td>datetime</td><td>8</td><td>1000-01-01 00:00:00</td><td>9999-12-31 23:59:59</td></tr><tr><td>timestamp</td><td>4</td><td>19700101080001</td><td>2038年的某个时刻</td></tr><tr><td>time</td><td>3</td><td>-838:59:59</td><td>838:59:59</td></tr><tr><td>year</td><td>1</td><td>1901</td><td>2155</td></tr></tbody></table><ol><li>Timestamp支持的时间范围较小，取值范围： 19700101080001——2038年的某个时间 Datetime的取值范围：1000-1-1 ——9999—12-31</li><li>timestamp和实际时区有关，更能反映实际的日期，而datetime则只能反映出插入时的当地时区</li><li>timestamp的属性受Mysql版本和SQLMode的影响很大</li></ol>]]></content>
    
    
    <summary type="html">常见的数据类型</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(06)—创建和管理表</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(06)%E2%80%94%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(06)%E2%80%94%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/</id>
    <published>2021-09-16T17:27:15.005Z</published>
    <updated>2021-08-20T03:40:11.509Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="创建和管理表"><a href="#创建和管理表" class="headerlink" title="创建和管理表"></a>创建和管理表</h3><h4 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h4><ul><li><p>创建一个保存员工信息的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database employee_date;</span><br><span class="line"></span><br><span class="line">[2021-08-20 10:57:37] 1 row affected in 16 ms</span><br></pre></td></tr></table></figure></li><li><p>相关其他命令</p><p><code>show database</code>：查看当前数据库</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201139802.png" alt="image-20210820105850350" style="zoom:50%;" /> <p><code>use employees</code>：“使用”一个数据库，使其作为当前数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myemployees&gt; use employee_date</span><br><span class="line">[2021-08-20 11:00:02] completed in 0 ms</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-1-命名规则"><a href="#1-1-命名规则" class="headerlink" title="1.1 命名规则"></a>1.1 命名规则</h5><p>数据库名不得超过30个字符，变量名限制为29个，必须只能包含A-Z,a-z,0-9,_共63个字符。不能在对象名的字符间留空格，必须不能和用户定义的其他对象重名，必须保证你的字段没有和和保留字、数据库系统或常用 方法冲突 •。保持字段名和类型的一致性,在命名字段并为其指定数 据类型的时候一定要保证一致性。假如数据类型在一 个表里是整数,那在另一个表里可就别变成字符型了</p><h4 id="2-创建表"><a href="#2-创建表" class="headerlink" title="2. 创建表"></a>2. 创建表</h4><p>CREAT TABLE语句</p><p>必须具备：</p><ul><li><p>CREATE TABLE 权限</p></li><li><p>存储空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE [schema.]table (column datatype [DEFAULT expr][,...]);</span><br></pre></td></tr></table></figure><p>必须指定：</p><p>表名；列名，数据类型，尺寸</p></li></ul><h5 id="2-1-创建表"><a href="#2-1-创建表" class="headerlink" title="2.1. 创建表"></a>2.1. 创建表</h5><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE dept(deptno INT(2),</span><br><span class="line">                 dname VARCHAR(14),</span><br><span class="line">                 loc VARCHAR(13));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201138414.png" alt="image-20210820110459757" style="zoom:50%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201139294.png" alt="image-20210820110527288" style="zoom: 33%;" /></p><p>确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE dept</span><br></pre></td></tr></table></figure><h4 id="3-描述各种数据类型"><a href="#3-描述各种数据类型" class="headerlink" title="3. 描述各种数据类型"></a>3. 描述各种数据类型</h4><h5 id="3-1-常用数据类型"><a href="#3-1-常用数据类型" class="headerlink" title="3.1 常用数据类型"></a>3.1 常用数据类型</h5><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>INT</td><td>使用4个字节保存整数数据</td></tr><tr><td>CHAR(size)</td><td>指定字符数据。若未指定，则默认一个字符，最大长度255</td></tr><tr><td>VARCHAR(size)</td><td>可变长字符数据，根据字符串实际长度保存，必须指定长度</td></tr><tr><td>FLOAT(M,D)</td><td>单精度，M=整数位+小数位，D=小数位。D&lt;=M&lt;=255，0&lt;=D&lt;=30,默认M+D&lt;=6</td></tr><tr><td>DOUBLE(M,D)</td><td>双精度。D&lt;=M&lt;=255,0&lt;=D&lt;=30,默认M+D&lt;=15</td></tr><tr><td>DATE</td><td>日期型数据，格式’YYYY-MM-DD’</td></tr><tr><td>BLOB</td><td>二进制形式的长文本数据，最大可达4G</td></tr><tr><td>TEXT</td><td>长文本数据，最大可达4G</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#创建表</span><br><span class="line">CREATE TABLE emp(</span><br><span class="line">#int类型，自增</span><br><span class="line">emp_id INT AUTO_INCREMENT,</span><br><span class="line">#最多保存2个中英文字符</span><br><span class="line">emp_name CHAR(20),</span><br><span class="line">#总位数不超过15位</span><br><span class="line">salaryDOUBLE,</span><br><span class="line">    #日期类型</span><br><span class="line">    birthdayDATE,</span><br><span class="line">    #主键</span><br><span class="line">    PRIMARY KEY(emp_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="4-2-使用子查询创建表"><a href="#4-2-使用子查询创建表" class="headerlink" title="4.2 使用子查询创建表"></a>4.2 使用子查询创建表</h5><p>使用AS subquery选项，将创建表和插入数据结合起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table [(column,column...)]</span><br><span class="line">AS subquery;</span><br></pre></td></tr></table></figure><p>指定的列和子查询中的列要一一对应，通过列名和默认值定义列</p><ol><li><p>复制现有表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table emp1 as select* from employees;</span><br><span class="line">create table emp2 as select* from employees [where ...];</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE dept80</span><br><span class="line">AS </span><br><span class="line">SELECT employee_id, last_name, </span><br><span class="line">   salary*12 ANNSAL, </span><br><span class="line">               hire_date</span><br><span class="line">        FROM employees</span><br><span class="line">        WHERE department_id &#x3D; 80;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201138385.png" alt="image-20210820111043990" style="zoom:50%;" /> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201111597.png" alt="image-20210820111132924"></p></li></ol><h4 id="4-修改表的定义"><a href="#4-修改表的定义" class="headerlink" title="4. 修改表的定义"></a>4. 修改表的定义</h4><p>ALTER TABLE语句</p><ul><li>向已有表中添加列</li><li>修改现有表中的列</li><li>删除现有表中的列</li><li>重命名现有表中的列</li></ul><ol><li><p>追加一个新列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table dept80</span><br><span class="line">add job_id varchar(15);</span><br><span class="line"></span><br><span class="line">[2021-08-20 11:12:51] completed in 28 ms</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201113602.png" alt="image-20210820111326187"></p></li><li><p>修改一个列</p><p>可以修改列的数据类型，尺寸和默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table dept80</span><br><span class="line">modify last_name varchar(30) default &#39;null_name&#39;;</span><br></pre></td></tr></table></figure><p>对默认值的修改只影响今后对表的修改</p></li><li><p>删除一个列</p><p>使用DROP COLUMN子句删除不在需要的列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table dept80</span><br><span class="line">drop column job_id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201138188.png" alt="image-20210820112733644" style="zoom:50%;" /> </li><li><p>重命名一个列</p><p>使用CHANGE old_column new_column dataType子句重命名列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table dept80</span><br><span class="line">change hiredate hire_date datetime;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201130946.png" alt="image-20210820113037400" style="zoom:50%;" /> </li></ol><h4 id="5-删除，重命名和清空表"><a href="#5-删除，重命名和清空表" class="headerlink" title="5. 删除，重命名和清空表"></a>5. 删除，重命名和清空表</h4><h5 id="5-1-删除表"><a href="#5-1-删除表" class="headerlink" title="5.1 删除表"></a>5.1 删除表</h5><p>数据和结构都被删除，所有正在运行的相关事务被提交，所有相关索引被删除，DROP TABLE语句不能回滚</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table dept;</span><br><span class="line"></span><br><span class="line">[2021-08-20 11:32:43] completed in 46 ms</span><br></pre></td></tr></table></figure><h5 id="5-2-清空表"><a href="#5-2-清空表" class="headerlink" title="5.2 清空表"></a>5.2 清空表</h5><ul><li><p>TRUNCATE TABLE语句</p><p>删除表中所有的数据，释放表的存储空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate table dept;</span><br></pre></td></tr></table></figure><ul><li><p>TRUNCATE语句不能回滚 </p></li><li><p>可以使用 DELETE 语句删除数据,可以回滚 </p></li><li><p>对比：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">delete from emp2;</span><br><span class="line">select * from emp2;</span><br><span class="line">rollback;</span><br><span class="line">select * from emp2;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="5-3-改变对象的名称"><a href="#5-3-改变对象的名称" class="headerlink" title="5.3 改变对象的名称"></a>5.3 改变对象的名称</h5><p>执行RENAME语句改变表，视图的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table dept80</span><br><span class="line">rename to detail_dept;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201138292.png" alt="image-20210820113816843" style="zoom:50%;" /> ]]></content>
    
    
    <summary type="html">创建和管理表</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(05)—数据处理之增删改</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(05)%E2%80%94%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(05)%E2%80%94%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9/</id>
    <published>2021-09-16T17:27:15.004Z</published>
    <updated>2021-08-20T02:16:08.368Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="数据处理之增删改"><a href="#数据处理之增删改" class="headerlink" title="数据处理之增删改"></a>数据处理之增删改</h3><h4 id="1-数据操纵语言"><a href="#1-数据操纵语言" class="headerlink" title="1. 数据操纵语言"></a>1. 数据操纵语言</h4><ul><li>DML(Data Manipulation Language — 数据操纵语言)可以在下列条件下执行<ul><li>向表中插入数据</li><li>修改现存数据</li><li>删除现存数据</li></ul></li><li>事务是由完成若干项工作的DML语言组成的</li></ul><h4 id="2-插入数据"><a href="#2-插入数据" class="headerlink" title="2. 插入数据"></a>2. 插入数据</h4><p>INSERT语句语法</p><p>一次向表中插入一条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table [(column [, column...])]</span><br><span class="line">VALUES (value [, value...]);</span><br></pre></td></tr></table></figure><ol><li><p>为每一列添加一个新值，按列的默认顺序列出各个列的值。在INSERT子句中随意列出列名和他们的值，字符和日期型数据应包含在单引号中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO</span><br><span class="line">employees(employee_id,last_name,email,hiredate,job_id)</span><br><span class="line">VALUES (300,&#39;Tom&#39;,&#39;tom@126.com&#39;,str_to_date(&#39;2021-3-21&#39;,&#39;%Y-%m-%d&#39;),&#39;SA_REP&#39;);</span><br><span class="line"></span><br><span class="line">[2021-08-19 17:56:28] 1 row affected in 14 ms</span><br></pre></td></tr></table></figure></li><li><p>向表中插入空值</p><p>隐式方式：在列名表中省略该值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into departments (department_id,department_name)</span><br><span class="line">values(280,&#39;Sel&#39;);</span><br><span class="line"></span><br><span class="line">[2021-08-19 18:03:01] 1 row affected in 11 ms</span><br></pre></td></tr></table></figure><p>显示方式：在VALUES子句集中指定空值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into departments</span><br><span class="line">values(290,&#39;Fri&#39;,null,null);</span><br><span class="line"></span><br><span class="line">[2021-08-19 18:04:56] 1 row affected in 18 ms</span><br></pre></td></tr></table></figure></li><li><p>插入指定的值</p><p>NOW()函数：记录当前系统的日期和时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">insert into employees(employee_id,</span><br><span class="line">                      first_name,</span><br><span class="line">                      last_name,</span><br><span class="line">                      email,</span><br><span class="line">                      phone_number,</span><br><span class="line">                      hiredate,</span><br><span class="line">                      job_id,</span><br><span class="line">                      salary,</span><br><span class="line">                      commission_pct,</span><br><span class="line">                      manager_id,</span><br><span class="line">                      department_id)</span><br><span class="line">values(207, </span><br><span class="line">&#39;Louis&#39;, &#39;Popp&#39;, </span><br><span class="line">&#39;LPOPP&#39;, &#39;515.124.4567&#39;, </span><br><span class="line">NOW(), &#39;AC_ACCOUNT&#39;, 6900, </span><br><span class="line">NULL, 205, 100);</span><br><span class="line"></span><br><span class="line">[2021-08-19 20:25:18] 1 row affected in 18 ms</span><br></pre></td></tr></table></figure></li><li><p>从其他表中拷贝数据</p><p>在INSERT语句中加入子查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myemployees&gt; insert into employees_test</span><br><span class="line">             select *</span><br><span class="line">             from employees</span><br><span class="line">             where department_id &#x3D; 110</span><br><span class="line">[2021-08-20 10:04:48] 2 rows affected in 12 ms</span><br></pre></td></tr></table></figure><p>不必书写 VALUES 子句,子查询中的值列表应与 INSERT 子句中的列名对应</p></li></ol><h4 id="3-更新数据"><a href="#3-更新数据" class="headerlink" title="3. 更新数据"></a>3. 更新数据</h4><p>UPDATE语句语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE table</span><br><span class="line">SET column &#x3D; value [, column &#x3D; value, ...]</span><br><span class="line">[WHERE condition]</span><br></pre></td></tr></table></figure><p>可以一次更新多条数据。如果需要回滚数据，需要保证在DML前，进行设置：SET AUTOCOMMIT = FALSE;</p><ol><li><p>使用WHERE子句指定需要更新的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">update employees</span><br><span class="line">set department_id &#x3D; 70</span><br><span class="line">where employee_id &#x3D; 113;</span><br><span class="line"></span><br><span class="line">[2021-08-20 10:10:44] 1 row affected in 0 ms</span><br></pre></td></tr></table></figure><p>如果省略 WHERE 子句，则表中的所有数据都将被更新</p></li></ol><h4 id="4-删除数据"><a href="#4-删除数据" class="headerlink" title="4. 删除数据"></a>4. 删除数据</h4><p>DELETE语句语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM table</span><br><span class="line">[WHERE condition];</span><br></pre></td></tr></table></figure><ol><li><p>使用WHERE子句删除指定的记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM departments</span><br><span class="line">WHERE department_name &#x3D; &#39;Finance&#39;;</span><br><span class="line"></span><br><span class="line">[2021-08-20 10:15:32] completed in 5 ms</span><br></pre></td></tr></table></figure><p>如果省略 WHERE 子句，则表中的全部数据将被删除</p></li></ol>]]></content>
    
    
    <summary type="html">数据处理之增删改</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(04)—常见函数</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(04)%E2%80%94%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(04)%E2%80%94%E5%AD%90%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-09-16T17:27:15.002Z</published>
    <updated>2021-08-19T05:01:06.093Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>概念：出现在其他语句内部的select语句，称为子 查询或内查询；内部嵌套其他select语句的查询，称为外查询或主 查询<br>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select first_name </span><br><span class="line">from employees </span><br><span class="line">where department_id in(</span><br><span class="line">select department_id </span><br><span class="line">    from departments</span><br><span class="line">where location_id&#x3D;1700</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><ul><li><p>子查询要包含在括号内</p></li><li><p>将子查询放在比较条件的右侧</p></li><li><p>单行操作符对象单行子查询，多行操作符对应多行子查询</p></li><li><p>单行子查询</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108190927328.png" alt="image-20210819092714187"></p></li><li><p>多行子查询</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108190928644.png" alt="image-20210819092801406"></p></li></ul><h4 id="1-单行子查询"><a href="#1-单行子查询" class="headerlink" title="1. 单行子查询"></a>1. 单行子查询</h4><p>只返回一行，使用单行比较操作符</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>=</td><td>Equal to</td></tr><tr><td>&gt;</td><td>Greater than</td></tr><tr><td>&gt;=</td><td>Greater than or equal to</td></tr><tr><td>&lt;</td><td>Less than</td></tr><tr><td>&lt;=</td><td>Less than or equal to</td></tr><tr><td>&lt;&gt;</td><td>Not equal to</td></tr></tbody></table><p>子查询语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT select_list</span><br><span class="line">FROM table</span><br><span class="line">WHERE expr operator</span><br><span class="line">(SELECT select_list</span><br><span class="line">  FROM table);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>子查询 (内查询) 在主查询之前一次执行完成。 子查询的结果被主查询(外查询)使用 。</p><p>使用子查询解决问题</p><p>谁的工资比Abel高？</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108190936564.png" alt="image-20210819093644144"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT last_name</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary &gt;(SELECT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE last_name &#x3D; &#39;Abel&#39;);</span><br></pre></td></tr></table></figure><img src="../../../../Users/xiong/AppData/Roaming/Typora/typora-user-images/image-20210819094032607.png" alt="image-20210819094032607" style="zoom:50%;" /> <ol><li><p>执行单行子查询</p><p>返回job_id与141号员工相同，salary比143号员工多的员工的姓名，job_id和工资</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where job_id &#x3D; (select job_id </span><br><span class="line">                from employees </span><br><span class="line">                where employee_id &#x3D; 141)</span><br><span class="line">and salary &gt; (select salary</span><br><span class="line">             from employees</span><br><span class="line">             where employee_id &#x3D; 143);</span><br></pre></td></tr></table></figure><img src="../../../../Users/xiong/AppData/Roaming/Typora/typora-user-images/image-20210819095441015.png" alt="image-20210819095441015" style="zoom: 50%;" /> </li><li><p>在子查询中使用组函数</p><p>返回公司工资最少的员工的last_name，job_id和salary</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary &#x3D; (select min(salary)</span><br><span class="line">    from employees</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191041825.png" alt="image-20210819101029244" style="zoom: 50%;" /> </li><li><p>子查询中的HAVING子句</p><p>首先执行子查询，向主查询中的HAVING子句返回结果</p><p>查询最低工资大于50号部门最低工资的部门id和其最低工资</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select department_id,min(salary)</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line">having min(salary) &gt; (select min(salary) </span><br><span class="line">                      from employees </span><br><span class="line">                      where department_id &#x3D; 50);</span><br></pre></td></tr></table></figure><img src="../../../../Users/xiong/AppData/Roaming/Typora/typora-user-images/image-20210819105231528.png" alt="image-20210819105231528" style="zoom:50%;" /> </li></ol><h4 id="2-多行子查询"><a href="#2-多行子查询" class="headerlink" title="2. 多行子查询"></a>2. 多行子查询</h4><p>返回多行，使用多行比较操作符</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>IN/NOT IN</td><td>等于列表中的任意一个</td></tr><tr><td>ANY | SOME</td><td>和子查询返回的某一个值比较</td></tr><tr><td>ALL</td><td>和子查询返回的所有值比较</td></tr></tbody></table><p>体会any和all的区别</p><ol><li><p>使用IN操作符</p><p>返回location_id是1400或1700的部门中的所有员工姓名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name</span><br><span class="line">from employeesleft join locations</span><br><span class="line">on location_id in (1400,1700);</span><br></pre></td></tr></table></figure><img src="../../../../Users/xiong/AppData/Roaming/Typora/typora-user-images/image-20210819124909755.png" alt="image-20210819124909755" style="zoom:50%;" /> </li><li><p>在多行子查询中使用ANY操作符</p><p>返回其他部门中比job_id为’IT_PROG’部门<u>任意某一</u>工资低的员工的员工号、姓名、job_id以及salary</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary &lt; any(select salary</span><br><span class="line">                  from employees</span><br><span class="line">                  where job_id &#x3D; &#39;IT_PROG&#39;)</span><br><span class="line">                  and job_id &lt;&gt; &#39;IT_PROG&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191257996.png" alt="image-20210819125713691"></p></li><li><p>在多行子查询中使用ALL操作符</p><p>返回其它部门中比job_id为‘IT_PROG’部门<u>所有</u>工资都低的员工 的员工号、姓名、job_id 以及salary</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary &lt; all(select salary</span><br><span class="line">                  from employees</span><br><span class="line">                  where job_id &#x3D; &#39;IT_PROG&#39;)</span><br><span class="line">                  and job_id &lt;&gt; &#39;IT_PROG&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191300990.png" alt="image-20210819130023721"></p></li></ol>]]></content>
    
    
    <summary type="html">子查询</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(03)—常见函数</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(03)%E2%80%94%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(03)%E2%80%94%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</id>
    <published>2021-09-16T17:27:15.000Z</published>
    <updated>2021-08-19T01:13:45.924Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><h4 id="1-字符函数"><a href="#1-字符函数" class="headerlink" title="1. 字符函数"></a>1. 字符函数</h4><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108182038721.png" alt="image-20210818203807288"></p><h5 id="1-1-大小写控制函数"><a href="#1-1-大小写控制函数" class="headerlink" title="1.1 大小写控制函数"></a>1.1 大小写控制函数</h5><p>这类函数改变字符的大小写</p><table><thead><tr><th>函数</th><th>结果</th></tr></thead><tbody><tr><td>LOWER(‘SQL Course’)</td><td>sql course</td></tr><tr><td>UPPER(‘SQL Course’)</td><td>SQL COURSE</td></tr></tbody></table><h5 id="1-2-字符控制函数"><a href="#1-2-字符控制函数" class="headerlink" title="1.2 字符控制函数"></a>1.2 字符控制函数</h5><table><thead><tr><th>函数</th><th>结果</th></tr></thead><tbody><tr><td>CONCAT(‘Hello’,’World’)</td><td>HelloWorld</td></tr><tr><td>SUBSTR(‘HelloWorld’,1,5)</td><td>Hello</td></tr><tr><td>LENGTH(‘HelloWorld’)</td><td>10</td></tr><tr><td>INSTR(‘HelloWorld’,’W’)</td><td>6</td></tr><tr><td>LPAD(salary,10,’*’)</td><td>*****24000</td></tr><tr><td>RPAD(salary,10,’*’)</td><td>24000*****</td></tr><tr><td>TRIM(‘H’FROM’HelloWorld’)</td><td>elloWorld</td></tr><tr><td>REPLACE(‘abcd’,’b’,’m’)</td><td>amcd</td></tr></tbody></table><h4 id="2-数字函数"><a href="#2-数字函数" class="headerlink" title="2 数字函数"></a>2 数字函数</h4><ul><li><p>ROUND：四舍五入</p><p>ROUND(45.926,2) ——&gt; 45.93</p></li><li><p>TRUNCATE：截断</p><p>TRUNC(45.926,2) ——&gt; 45.92</p></li><li><p>MOD：求余</p><p>MOD(1600,300) ——&gt; 100</p></li></ul><h4 id="3-日期函数"><a href="#3-日期函数" class="headerlink" title="3. 日期函数"></a>3. 日期函数</h4><ul><li><p>now：获取当前日期</p></li><li><p>str_to_date：将日期格式的字符转换成指定格式的日期</p><p>str_to_date(‘9-13-1999’,’%m-%d-%Y’)              1993-09-13</p></li><li><p>date_format：将日期转化成字符</p><p>date_format(‘2021/6/6’,’%Y年%m月%d日’)     2021年6月6日</p></li></ul><table><thead><tr><th>序号</th><th>格式</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td>%Y</td><td>四位的年份</td></tr><tr><td>2</td><td>%y</td><td>2位的年份</td></tr><tr><td>3</td><td>%m</td><td>月份(01，02….11，12)</td></tr><tr><td>4</td><td>%c</td><td>月份(1,2…11,12)</td></tr><tr><td>5</td><td>%d</td><td>日(01，02)</td></tr><tr><td>6</td><td>%H</td><td>小时(24小时制)</td></tr><tr><td>7</td><td>%h</td><td>小时(12小时制)</td></tr><tr><td>8</td><td>%i</td><td>分钟(00,01….59)</td></tr><tr><td>9</td><td>%s</td><td>秒(00,01…..59)</td></tr></tbody></table><h4 id="4-其他函数"><a href="#4-其他函数" class="headerlink" title="4. 其他函数"></a>4. 其他函数</h4><h4 id="5-流程控制函数"><a href="#5-流程控制函数" class="headerlink" title="5. 流程控制函数"></a>5. 流程控制函数</h4><h5 id="5-1-条件表达式"><a href="#5-1-条件表达式" class="headerlink" title="5.1 条件表达式"></a>5.1 条件表达式</h5><ul><li><p>在SQL语句中使用IF-THEN-ELSE逻辑</p></li><li><p>使用方法</p><p>—CASE表达式</p><p>在本需要使用IF-THEN-ELSE逻辑时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CASE expr WHEN comparison_expr1 THEN return_expr1</span><br><span class="line">[WHEN comparison_expr2 THEN return_expr2</span><br><span class="line">WHEN comparison_exprn THEN return_exprn</span><br><span class="line">ELSE else_expr]</span><br><span class="line">END</span><br></pre></td></tr></table></figure></li><li><pre><code class="mysql">SELECT last_name, job_id, salary,    CASE job_id WHEN &#39;IT_PROG&#39; THEN 1.10*salary                WHEN &#39;ST_CLERK&#39; THEN 1.15*salary                WHEN &#39;SA_REP&#39; THEN 1.20*salary    ELSE salary END &quot;REVISED_SALARY&quot;FROM employees;</code></pre><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108190911003.png" alt="image-20210819091115579"></p></li></ul>]]></content>
    
    
    <summary type="html">常见函数</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(02)—数据处理之查询</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(02)%E2%80%94%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E6%9F%A5%E8%AF%A2/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(02)%E2%80%94%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-09-16T17:27:14.998Z</published>
    <updated>2021-08-20T09:49:12.102Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h3><p>使用前，对当前数据库写入测试用的数据库脚本，点击下载脚本</p><h4 id="1-基本的SELECT语句"><a href="#1-基本的SELECT语句" class="headerlink" title="1. 基本的SELECT语句"></a>1. 基本的SELECT语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * | &#123;[DISTINCT] cloumn | expression [alias],...&#125;</span><br><span class="line">FROM table;</span><br></pre></td></tr></table></figure><p>SELECT    标识选择哪些列<br>FROM        标识从哪个表中选择</p><ol><li><p>选择全部列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use myemployees;</span><br><span class="line">select *</span><br><span class="line">from departments;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172236487.png" alt="image-20210817223641403"></p></li><li><p>选择特定列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select department_id, location_id</span><br><span class="line">from departments;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172240127.png" alt="image-20210817224055778" style="zoom:50%;" /> </li><li><p>使用别名</p><p>重命名一个列。 便于计算。紧跟列名，也可以在列名和别名之间加入关键字 ‘AS’，别名使用双引号，以便在别名中包含空 格或特殊的字符并区分大小写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select last_name as name, commission_pct comm</span><br><span class="line">from employees;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702327.png" alt="image-20210817224341768" style="zoom: 67%;" /> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT last_name &quot;Name&quot;, salary*12 &quot;Annual Salary&quot;</span><br><span class="line">FROM employees;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702009.png" alt="image-20210817224607348" style="zoom: 50%;" /> </li></ol><p><strong>字符串</strong> </p><p> 字符串可以是 SELECT 列表中的一个字符,数字,日期。 </p><p> 日期和字符只能在单引号中出现。</p><p>每当返回一行时，字符串被输出一次</p><p><strong>显示表结构</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE employees;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172250194.png" alt="image-20210817225013421"></p><h4 id="2-过滤和排序数据"><a href="#2-过滤和排序数据" class="headerlink" title="2. 过滤和排序数据"></a>2. 过滤和排序数据</h4><h5 id="2-1-过滤"><a href="#2-1-过滤" class="headerlink" title="2.1 过滤"></a>2.1 过滤</h5><p>使用where子句，将不满足条件的行过滤掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *|&#123;[DISTINCT] column|expression [alias],...&#125;</span><br><span class="line">FROM table</span><br><span class="line">[WHERE condition(s)];</span><br></pre></td></tr></table></figure><p>WHERE 子句紧随 FROM 子句</p><p>返回在90号部门工作的所有员工的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,job_id,department_id</span><br><span class="line">from employees</span><br><span class="line">where department_id &#x3D; 90;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172254393.png" alt="image-20210817225405029"></p><h6 id="2-1-1-比较运算符"><a href="#2-1-1-比较运算符" class="headerlink" title="2.1.1 比较运算符"></a>2.1.1 比较运算符</h6><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>=</td><td>等于 (不是 ==)</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于、等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&lt;&gt;</td><td>不等于（也可以是!=)</td></tr></tbody></table><p>查询薪资在3000以下的员工的姓氏和薪资</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT last_name, salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary &lt;&#x3D; 3000;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702407.png" alt="image-20210817225941018" style="zoom:50%;" /> <h6 id="2-1-2-1其他比较运算符"><a href="#2-1-2-1其他比较运算符" class="headerlink" title="2.1.2 1其他比较运算符"></a>2.1.2 1其他比较运算符</h6><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>BETWEEN …AND…</td><td>在两个值之间 (包含边界)</td></tr><tr><td>IN(set)</td><td>等于值列表中的一个</td></tr><tr><td>LIKE</td><td>模糊查询</td></tr><tr><td>IS NULL</td><td>空值</td></tr></tbody></table><ol><li><p>使用BETWEEN AND运算来显示在一个区间内的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,salary</span><br><span class="line">from employees</span><br><span class="line">where salary between 2500 and 3500;</span><br></pre></td></tr></table></figure></li></ol><p>​          <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702778.png" alt="image-20210818101509030" style="zoom: 50%;" /></p><ol start="2"><li><p>使用IN运算显示列表中的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,salary,manager_id</span><br><span class="line">from employees</span><br><span class="line">where manager_id in (100,101,201);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181021440.png" alt="image-20210818102130760"></p></li><li><p>使用LIKE运算选择类似的值</p><p>选择条件可以包含字符或数字：</p><ul><li>%代表零个或多个字符（任意个字符）</li><li>_代表一个字符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select first_name</span><br><span class="line">from employees</span><br><span class="line">where first_name like &#39;S%&#39;;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702056.png" alt="image-20210818102756282" style="zoom:50%;" /> </li><li><p>使用IS(NOT)NULL判断空值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,manager_id</span><br><span class="line">from employees</span><br><span class="line">where manager_id is null;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702584.png" alt="image-20210818104508246" style="zoom: 50%;" /> </li></ol><h6 id="2-1-3-逻辑运算"><a href="#2-1-3-逻辑运算" class="headerlink" title="2.1.3 逻辑运算"></a>2.1.3 逻辑运算</h6><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>AND</td><td>逻辑与</td></tr><tr><td>OR</td><td>逻辑或</td></tr><tr><td>NOT</td><td>逻辑否</td></tr></tbody></table><ol><li><p>AND要求并的关系为真</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary &gt;&#x3D; 1000</span><br><span class="line">and job_id like &#39;%MAN%&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181052461.png" alt="image-20210818105203409"></p></li><li><p>OR要求或关系为真</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,job_id,salary</span><br><span class="line">from employees</span><br><span class="line">where salary &gt;&#x3D; 10000</span><br><span class="line">or job_id like &#39;%MAN%&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181104628.png" alt="image-20210818110427489"></p></li><li><p>NOT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select last_name,job_id</span><br><span class="line">from employees</span><br><span class="line">where job_id</span><br><span class="line">not in (&#39;IT_PROG&#39;,&#39;ST_CLERK&#39;,&#39;SA_REP&#39;);</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181702141.png" alt="image-20210818110731163" style="zoom:50%;" /> </li></ol><h6 id="2-1-4-ORDER-BY子句"><a href="#2-1-4-ORDER-BY子句" class="headerlink" title="2.1.4 ORDER BY子句"></a>2.1.4 ORDER BY子句</h6><p>使用ORDER BY子句排序</p><ul><li>ASC(ascend)：升序</li><li>DESC(descend)：降序</li><li>ORDER BY子句在SELECT语句的结尾</li></ul><ol><li><p>默认使用升序排列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,job_id,department_id,heirdate</span><br><span class="line">from employees</span><br><span class="line">order by hiredate;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181114297.png" alt="image-20210818111440587"></p></li><li><p>使用降序排列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,job_id,department_id,hiredate</span><br><span class="line">from employees</span><br><span class="line">order by hiredate desc;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181126715.png" alt="image-20210818112612280"></p></li><li><p>按别名排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select employee_id,last_name,salary*12 &#39;annual salary&#39;</span><br><span class="line">from employees</span><br><span class="line">order by &#39;annual salary&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181132667.png" alt="image-20210818113244031"></p></li><li><p>按照ORDER BY列表的顺序排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,department_id,salary</span><br><span class="line">from employees</span><br><span class="line">order by department_id,salary desc;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181136217.png" alt="image-20210818113616110"></p><p>可以使用不在SELECT列表里中的列排序</p></li></ol><h4 id="3-分组函数"><a href="#3-分组函数" class="headerlink" title="3. 分组函数"></a>3. 分组函数</h4><h5 id="3-1-什么是分组函数"><a href="#3-1-什么是分组函数" class="headerlink" title="3.1 什么是分组函数"></a>3.1 什么是分组函数</h5><p>分组函数作用于一组数据，并对一组数据返回一个值</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181142674.png" alt="image-20210818114256311"></p><h5 id="3-2-组函数类型"><a href="#3-2-组函数类型" class="headerlink" title="3.2 组函数类型"></a>3.2 组函数类型</h5><ul><li>AVG()</li><li>COUNT()</li><li>MAX()</li><li>MIN()</li><li>SUM()</li></ul><h5 id="3-3-组函数语法"><a href="#3-3-组函数语法" class="headerlink" title="3.3 组函数语法"></a>3.3 组函数语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT [column,] group_function(column), ...</span><br><span class="line">FROM table</span><br><span class="line">[WHERE condition]</span><br><span class="line">[GROUP BY column]</span><br><span class="line">[ORDER BY column];</span><br></pre></td></tr></table></figure><ol><li><p>AVG(平均值)、MIN(最小值)、 MAX(最大值)、SUM(合计)函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select avg(salary),max(salary),min(salary),sum(salary)</span><br><span class="line">from employees</span><br><span class="line">where job_id like &#39;%REP%&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701771.png" alt="image-20210818114856880"></p></li><li><p>COUNT(*)返回表中记录总数，适用于任意数据类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select count(*)</span><br><span class="line">from employees</span><br><span class="line">where department_id &#x3D; 50;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701166.png" alt="image-20210818115408365" style="zoom:50%;" /> <p>COUNT(expr)返回expr不为空的记录总数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,count(commission_pct)</span><br><span class="line">from employees</span><br><span class="line">where department_id &#x3D; 50;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701531.png" alt="image-20210818115815622" style="zoom:50%;" /> </li></ol><h5 id="3-4-分组数据"><a href="#3-4-分组数据" class="headerlink" title="3.4 分组数据"></a>3.4 分组数据</h5><h6 id="3-4-1-单列分组"><a href="#3-4-1-单列分组" class="headerlink" title="3.4.1 单列分组"></a>3.4.1 单列分组</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181159664.png" alt="image-20210818115909354"></p><p>GROUP BY子句语法，可以使用GROUP BY子句将表中的数据分成若干组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT column, group_function(column)</span><br><span class="line">FROM table</span><br><span class="line">[WHERE condition]</span><br><span class="line">[GROUP BY group_by_expression]</span><br><span class="line">[ORDER BY column];</span><br></pre></td></tr></table></figure><p>明确：WHERE一定放在FROM后面</p><ol><li><p>在SELECT 列表中所有未包含在组函数中的列都应该包含 在 GROUP BY 子句中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select department_id,AVG(salary)</span><br><span class="line">from employees</span><br><span class="line">group by department_id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701632.png" alt="image-20210818120451894" style="zoom:50%;" /> </li><li><p>包含在GROUP BY子句中的列不必包含在SELECT列表中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select avg(salary)</span><br><span class="line">from employees</span><br><span class="line">group by department_id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701071.png" alt="image-20210818121325998" style="zoom:50%;" /> </li></ol><h6 id="3-4-2-多列分组"><a href="#3-4-2-多列分组" class="headerlink" title="3.4.2 多列分组"></a>3.4.2 多列分组</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181215576.png" alt="image-20210818121522543"></p><ol><li><p>在GROUP BY子句中包含多个列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select department_id,dept_id,job_id,sum(salary)</span><br><span class="line">from employees</span><br><span class="line">group by department_id,job_id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181223117.png" alt="image-20210818122333093" style="zoom:50%;" /> </li></ol><h6 id="3-4-3-过滤分组"><a href="#3-4-3-过滤分组" class="headerlink" title="3.4.3 过滤分组"></a>3.4.3 过滤分组</h6><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181545183.png" alt="image-20210818154507053"></p><p>使用HAVING过滤分组</p><ol><li><p>行已经被分组</p></li><li><p>使用了组函数</p></li><li><p>满足HAVING子句中条件的分组将被显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT column, group_function</span><br><span class="line">FROM table</span><br><span class="line">[WHERE condition]</span><br><span class="line">[GROUP BY group_by_expression]</span><br><span class="line">[HAVING group_condition]</span><br><span class="line">[ORDER BY column];</span><br></pre></td></tr></table></figure></li><li><p>HAVING子句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select department_id,MAX(salary)</span><br><span class="line">from employees</span><br><span class="line">group by department_id</span><br><span class="line">having max(salary)&gt;10000;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181701982.png" alt="image-20210818155219393" style="zoom:50%;" /> </li></ol><h6 id="3-4-4-SELECT语句执行顺序"><a href="#3-4-4-SELECT语句执行顺序" class="headerlink" title="3.4.4 SELECT语句执行顺序"></a>3.4.4 <a href="https://www.cnblogs.com/warehouse/p/9410599.html">SELECT语句执行顺序</a></h6><p>having子句与where都是设定条件筛选的语句，有相似之处也有区别。</p><p>having与where的区别:<br>having是在分组后对数据进行过滤<br>where是在分组前对数据进行过滤<br>having后面可以使用聚合函数<br>where后面不可以使用聚合</p><p>在查询过程中执行顺序：from&gt;where&gt;group（含聚合）&gt;having&gt;order&gt;select。</p><p>所以聚合语句(sum,min,max,avg,count)要比having子句优先执行，而where子句在查询过程中执行优先级别优先于聚合语句(sum,min,max,avg,count)。<br>where子句：<br>select sum(num) as rmb from order where id&gt;10<br>//只有先查询出id大于10的记录才能进行聚合语句</p><p>having子句:<br>select reports， count(<em>)  from employees group by reports having count(</em>) &gt; 4<br>上例having条件表达示为聚合语句，肯定的说having子句查询过程执行优先级别低于聚合语句。<br>再换句说话说把上面的having换成where则会出错，统计分组数据时用到聚合语句。<br>对分组数据再次判断时要用having。如果不用这些关系就不存在使用having。直接使用where就行了。<br>having就是来弥补where在分组数据判断时的不足。因为where执行优先级别要快于聚合语句。</p><p>聚合函数：<br>例如SUM, COUNT, MAX, AVG等。这些函数和其它函数的根本区别就是它们一般作用在多条记录上。</p><p>HAVING子句可以让我们直接筛选成组后的各组数据，也可以在聚合后对组记录进行筛选，而WHERE子句在聚合前先筛选记录，也就是说作用在GROUP BY 子句和HAVING子句前。</p><h6 id="3-4-5-非法使用组函数"><a href="#3-4-5-非法使用组函数" class="headerlink" title="3.4.5 非法使用组函数"></a>3.4.5 非法使用组函数</h6><p>不能在WHERE子句中使用组函数</p><p>可以在HAVING子句中使用组函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT department_id, AVG(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE AVG(salary) &gt; 8000</span><br><span class="line">GROUP BY department_id;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WHERE AVG(salary) &gt; 8000</span><br><span class="line">*</span><br><span class="line">ERROR at line 3:</span><br><span class="line">ORA-00934: group function is not allowed here</span><br></pre></td></tr></table></figure><h4 id="4-多表查询"><a href="#4-多表查询" class="headerlink" title="4. 多表查询"></a>4. 多表查询</h4><p>两表做笛卡尔积</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181700156.png" alt="image-20210818165345140" style="zoom:45.5%;" />  <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201748927.png" alt="image-20210819115650359" style="zoom:50%;" /> <h5 id="4-1-多表连接"><a href="#4-1-多表连接" class="headerlink" title="4.1 多表连接"></a>4.1 多表连接</h5><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select name,boyName </span><br><span class="line">from beauty,boys;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181700756.png" alt="image-20210818161943007" style="zoom:50%;" /> <h5 id="4-2-笛卡尔集"><a href="#4-2-笛卡尔集" class="headerlink" title="4.2 笛卡尔集"></a>4.2 笛卡尔集</h5><p>笛卡尔集会在下面的条件下产生</p><p>①省略连接条件；②连接条件无效；③所有表中的所有行互相链接</p><p>为了避免笛卡尔集，可以在WHERE加入有效的连接条件</p><h5 id="4-3-MySQL连接"><a href="#4-3-MySQL连接" class="headerlink" title="4.3 MySQL连接"></a>4.3 MySQL连接</h5><p>使用连接在多个表中查询数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table1.column, table2.column</span><br><span class="line">FROM table1, table2</span><br><span class="line">WHERE table1.column1 &#x3D; table2.column2;</span><br></pre></td></tr></table></figure><p>在 WHERE 子句中写入连接条件。 在表中有相同列时，在列名之前加上表名前缀</p><ol><li><p>等值连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select beauty.id,name,boyName</span><br><span class="line">from beauty,boys</span><br><span class="line">where beauty.boyfriend_id&#x3D;boys.id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181700310.png" alt="image-20210818165426323" style="zoom:50%;" /> <p>区分重复的列名：使用表名前缀在多个表中区分相同的列，在不同表中具有相同列名的列可以用表的别名加以区分，如果使用了表别名，则在select语句中需要使用表别名代替表名，表别名最多支持32个字符长度，但建议越少越好</p></li><li><p>表的别名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select bt.id,name,boyName</span><br><span class="line">from beauty bt, boys b</span><br><span class="line">where bt.boyfriend_id&#x3D;b.id;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181700310.png" alt="image-20210818165426323" style="zoom:50%;" /> </li></ol><h5 id="4-4-连接多个表"><a href="#4-4-连接多个表" class="headerlink" title="4.4 连接多个表"></a>4.4 连接多个表</h5><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181704125.png" alt="image-20210818170424732"></p><p>连接 n个表,至少需要 n-1个连接条件。 例如：连接 三个表，至少需要两个连接条件。</p><ol><li><p>查询出公司员工的 last_name, department_name, city</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select last_name,department_name,city</span><br><span class="line">from employees,departments,locations</span><br><span class="line">where employees.department_id &#x3D; departments.department_id </span><br><span class="line">and departments.location_id &#x3D; locations.location_id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181710569.png" alt="image-20210818171002376"></p></li></ol><h5 id="4-5-使用ON子句创建连接"><a href="#4-5-使用ON子句创建连接" class="headerlink" title="4.5 使用ON子句创建连接"></a>4.5 使用ON子句创建连接</h5><p>自然连接中是以具有相同名字的列为连接条件的，可以使用ON子句指定额外的连接条件，这个连接条件是与其他条件分开的，ON子句使语句具有更高的易读性</p><h6 id="4-5-1-JOIN连接"><a href="#4-5-1-JOIN连接" class="headerlink" title="4.5.1 JOIN连接"></a>4.5.1 JOIN连接</h6><p><strong>分类：</strong></p><ul><li><p>内连接 [inner] join on</p><p>（典型的连接运算，使用像 = 或 &lt;&gt; 之类的比较运算符）。包括相等联接和自然联接。<u>内联接</u>使用比较运算符根据每个表<u>共有的列</u>的值匹配两个表中的行。例如，检索 students和courses表中学生标识号相同的所有行。</p></li><li><p>外连接</p><p>外联接可以是左向外连接、右向连接或完整外部连接。在 FROM子句中指定外联接时，可以由下列几组关键字中的一组指定： </p><ol><li><p>LEFT JOIN或LEFT OUTER JOIN   </p><p>左向外联接的结果集包括 LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。</p></li><li><p>RIGHT JOIN 或 RIGHT OUTER JOIN   </p><p>右向外联接是左向外联接的反向联接。将返回右表的所有行。如果右表的某行在左表中没有匹配行，则将为左表返回空值。 </p></li><li><p>FULL JOIN 或 FULL OUTER JOIN</p><p>完整外部联接返回左表和右表中的所有行。当某行在另一个表中没有匹配行时，则另一个表的选择列表列包含空值。如果表之间有匹配行，则整个结果集行包含基表的数据值。</p></li></ol></li><li><p>交叉联接 </p><p>交叉联接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉联接也称作笛卡尔积。 </p><p>FROM 子句中的表或视图可通过内联接或完整外部联接按任意顺序指定；但是，用左或右向外联接指定表或视图时，表或视图的顺序很重要。有关使用左或右向外联接排列表的更多信息，请参见使用外联接。</p></li></ul><p><strong>示例</strong></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191158985.png" alt="image-20210819115832571">  </p><ol><li><p>内连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select bt.*,boys.*</span><br><span class="line">from beauty bt inner join boys on bt.boyfriend_id &#x3D; boys.id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191134586.png" alt="image-20210819113439230"></p></li><li><p>左连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select bt.*,boys.*</span><br><span class="line">from beauty bt left join boys on bt.boyfriend_id &#x3D; boys.id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191137831.png" alt="image-20210819113745505"></p><p>左表独有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select bt.*,boys.*</span><br><span class="line">from beauty bt left join boys on bt.boyfriend_id &#x3D; boys.id</span><br><span class="line">where boys.id is null;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191205623.png" alt="image-20210819120507351"></p></li><li><p>右连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select bt.*,boys.*</span><br><span class="line">from beauty bt right join boys on bt.boyfriend_id &#x3D; boys.id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191200995.png" alt="image-20210819120023490"></p><p>右表独有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select bt.*,boys.*</span><br><span class="line">from beauty bt right join boys on bt.boyfriend_id &#x3D; boys.id</span><br><span class="line">where bt.boyfriend_id is null;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191207304.png" alt="image-20210819120702172"></p></li><li><p>完全连接</p><p>oracle里面有full join,但是在mysql中没有full join。我们可以使用union来达到目的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select bt.* from beauty bt left join boys on bt.boyfriend_id &#x3D; boys.id</span><br><span class="line">union</span><br><span class="line">select bt.* from beauty bt right join boys on bt.boyfriend_id &#x3D; boys.id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191201518.png" alt="image-20210819120133259"></p><p>并集去交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from beauty bt left join boys on bt.boyfriend_id &#x3D; boys.id</span><br><span class="line">where boys.id is null</span><br><span class="line">union</span><br><span class="line">select * from beauty bt right join boys on bt.boyfriend_id &#x3D; boys.id</span><br><span class="line">where bt.boyfriend_id is null;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108191212037.png" alt="image-20210819121248356"></p></li></ol><ul><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181731726.png" alt="image-20210818173141054"></li><li><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108181732947.png" alt="image-20210818173235317"></li></ul><h4 id="5-SELECT语句执行顺序"><a href="#5-SELECT语句执行顺序" class="headerlink" title="5. SELECT语句执行顺序"></a>5. <a href="https://www.cnblogs.com/warehouse/p/9410599.html">SELECT语句执行顺序</a></h4><p>查询操作是关系数据库中使用最为频繁的操作，也是构成其他SQL语句（如DELETE、UPDATE）的基础。我们知道，SQL 查询的大致语法结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(5)SELECT DISTINCT &lt;select_list&gt;                     </span><br><span class="line">(1)FROM &lt;left_table&gt; &lt;join_type&gt; JOIN &lt;right_table&gt; ON &lt;on_predicate&gt;</span><br><span class="line">(2)WHERE &lt;where_predicate&gt;</span><br><span class="line">(3)GROUP BY &lt;group_by_specification&gt;</span><br><span class="line">(4)HAVING &lt;having_predicate&gt;</span><br><span class="line">(6)ORDER BY &lt;order_by_list&gt;</span><br><span class="line">(7)LIMIT n, m</span><br></pre></td></tr></table></figure><p>这些步骤执行时，每个步骤都会产生一个虚拟表，该虚拟表被用作下一个步骤的输入。这些虚拟表对调用者（客户端应用程序或者外部查询）不可用。只是最后一步生成的表才会返回给调用者。如果没有在查询中指定某一子句，将跳过相应的步骤。</p><p>SELECT各个阶段分别干了什么：</p><h5 id="5-1-FROM阶段"><a href="#5-1-FROM阶段" class="headerlink" title="5.1 FROM阶段"></a>5.1 FROM阶段</h5><p>FROM阶段标识出查询的来源表，并处理表运算符。在涉及到联接运算的查询中（各种JOIN），主要有以下几个步骤：</p><ul><li><strong>求笛卡尔积</strong>。不论是什么类型的联接运算，首先都是执行交叉连接（CROSS JOIN），求笛卡儿积（Cartesian product），生成虚拟表VT1-J1。</li><li><strong>ON筛选器</strong>。 这个阶段对上个步骤生成的VT1-J1进行筛选，根据ON子句中出现的谓词进行筛选，让谓词取值为true的行通过了考验，插入到VT1-J2。</li><li><strong>添加外部行</strong>。如果指定了OUTER JOIN，如LEFT OUTERJOIN、RIGHT OUTER JOIN，还需要将VT1-J2中没有找到匹配的行，作为外部行添加到VT1-J2中，生成VT1-J3。如果FROM子句包含两个以上表，则对上一个连接生成的结果表VT1-J3和下一个表重复依次执行3个步骤，直到处理完所有的表为止。</li></ul><p>经过以上步骤，FROM阶段就完成了。</p><h5 id="5-2-WHERE阶段"><a href="#5-2-WHERE阶段" class="headerlink" title="5.2 WHERE阶段"></a>5.2 WHERE阶段</h5><p>WHERE阶段是根据<where_predicate>中条件对VT1中的行进行筛选，让条件成立的行才会插入到VT2中。<strong>此时数据还没有分组，所以不能在WHERE中出现对统计的过滤。</strong></p><h5 id="5-3-GROUP-BY阶段"><a href="#5-3-GROUP-BY阶段" class="headerlink" title="5.3 GROUP BY阶段"></a>5.3 GROUP BY阶段</h5><p>GROUP阶段按照指定的列名列表，将VT2中的行进行分组，生成VT3。最后每个分组只有一行。<strong>在GROUP BY阶段，数据库认为两个NULL值是相等的，因此会将NULL值分到同一个分组中。</strong></p><h5 id="5-4-HAVING阶段"><a href="#5-4-HAVING阶段" class="headerlink" title="5.4 HAVING阶段"></a>5.4 HAVING阶段</h5><p>该阶段根据HAVING子句中出现的谓词对VT3的分组进行筛选，并将符合条件的组插入到VT4中。<strong>COUNT(expr) 会返回expr不为NULL的行数，count(1)、count(*)会返回包括NULL值在内的所有数量。</strong></p><h5 id="5-5-SELECT阶段"><a href="#5-5-SELECT阶段" class="headerlink" title="5.5 SELECT阶段"></a>5.5 SELECT阶段</h5><p>这个阶段是投影的过程，处理SELECT子句提到的元素，产生VT5。这个步骤一般按下列顺序进行：</p><ul><li>计算SELECT列表中的表达式，生成VT5-1。</li><li>若有DISTINCT，则删除VT5-1中的重复行，生成VT5-2。</li></ul><h5 id="5-6-ORDER-BY阶段"><a href="#5-6-ORDER-BY阶段" class="headerlink" title="5.6 ORDER BY阶段"></a>5.6 ORDER BY阶段</h5><p>根据ORDER BY子句中指定的列明列表，对VT5-2中的行，进行排序，生成VT6。<strong>如果不指定排序，数据并非总是按照主键顺序进行排序的。NULL被视为最小值。</strong></p><h5 id="5-7-LIMIT阶段"><a href="#5-7-LIMIT阶段" class="headerlink" title="5.7 LIMIT阶段"></a>5.7 LIMIT阶段</h5><p>取出指定行的记录，产生虚拟表VT7，并返回给查询用户。<strong>LIMIT n, m的效率是十分低的，一般可以通过在WHERE条件中指定范围来优化 \</strong>WHERE** id &gt; ? limit 10。**</p>]]></content>
    
    
    <summary type="html">数据查询</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(01)—安装与使用</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(01)%E2%80%94%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(01)%E2%80%94%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2021-09-16T17:27:14.997Z</published>
    <updated>2021-08-20T09:47:23.620Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h3><p><strong>图解MySQL程序结构</strong></p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171027291.png" alt="image-20210817100754276" style="zoom:50%;" /><h4 id="1-MySQL数据库产品的介绍"><a href="#1-MySQL数据库产品的介绍" class="headerlink" title="1. MySQL数据库产品的介绍"></a>1. MySQL数据库产品的介绍</h4><h5 id="1-1-MySQL产品的特点"><a href="#1-1-MySQL产品的特点" class="headerlink" title="1.1 MySQL产品的特点"></a>1.1 MySQL产品的特点</h5><ul><li><p>MySQL数据库隶属于MySQL AB公司，总部位于瑞典，后被Oracle收购。</p></li><li><p>优点： </p><p>– 成本低：开放源代码，一般可以免费试用 </p><p>– 性能高：执行很快 </p><p>– 简单：很容易安装和使用</p></li></ul><h4 id="2-MySQL数据库的安装"><a href="#2-MySQL数据库的安装" class="headerlink" title="2. MySQL数据库的安装"></a>2. MySQL数据库的安装</h4><ul><li><p>DBMS分为两类： </p><p>– 基于共享文件系统的DBMS （Access ） </p><p>– 基于客户机——服务器的DBMS （MySQL、Oracle、SqlServer）</p></li><li><p>MySQL的版本</p><ul><li><p>社区版（免费）</p></li><li><p>企业版（收费）</p><p>Windows平台下下载：<a href="http://dev.mysql.com/downloads/mysql">http://dev.mysql.com/downloads/mysql</a></p></li></ul></li></ul><h5 id="2-1下载"><a href="#2-1下载" class="headerlink" title="2.1下载"></a>2.1下载</h5><p>Windows安装程序MySQL Installer MSI。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171030928.png" alt="image-20210817103058472"></p><p>下载离线安装版（文件大的那个）。需要注意的是，这里的32-bit是指安装程序Installer是32位，并非指下载的MySQL是32位，实际上MySQL会适应系统位数。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171029732.png" alt="image-20210817102936648"></p><p>点击**”No thanks, just start my download”**开始下载。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171028108.png" alt="image-20210817102826741"></p><h5 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a>2.2 安装</h5><p>下载完成之后双击安装，可以选择自定义安装。</p><p> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171017712.png" alt="img"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171048497.png" alt="image-20210817104842064"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171050085.png" alt="image-20210817104958534"></p><p>我一般安装以下两个就够。具体情况请根据你的实际需求。</p><p>MySQL Server 8.0.26 - X64：服务器</p><p>MySQL Workench 8.0.26 - X64：数据可视化管理工具</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171104207.png" alt="image-20210817110434593"></p><p>一路执行或下一步。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171107298.png" alt="image-20210817110700697"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171108111.png" alt="image-20210817110839698"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171109803.png" alt="image-20210817110919637"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171110503.png" alt="image-20210817111049201"></p><p>这一步要注意，最好选择传统密码验证方式，否则使用第三方数据库管理软件在连接时会报错。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171111872.png" alt="image-20210817111151168"></p><p>密码很重要，本人设置密码与锁屏密码一致，便于记忆</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171137068.png" alt="image-20210817113736168"></p><p>Windows Service Name: Windows托管服务名，用于停止、启动</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171139109.png" alt="image-20210817113910167"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171141021.png" alt="image-20210817114145727"></p><p> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171142899.png" alt="image-20210817114218504"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171142563.png" alt="image-20210817114243171"></p><p> <img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171143976.png" alt="image-20210817114306719"></p><p>添加MySQL系统环境变量。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171145920.png" alt="image-20210817114532726"></p><p>到此，安装完成！ </p><h5 id="2-3-验证登陆"><a href="#2-3-验证登陆" class="headerlink" title="2.3 验证登陆"></a>2.3 验证登陆</h5><p>打开管理员CMD，输入密码。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171149249.png" alt="image-20210817114954715"></p><h5 id="2-4-使用workbench可视化工具"><a href="#2-4-使用workbench可视化工具" class="headerlink" title="2.4 使用workbench可视化工具"></a>2.4 使用workbench可视化工具</h5><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171151817.png" alt="image-20210817115112191"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171152038.png" alt="image-20210817115234402"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171153321.png" alt="image-20210817115345133"></p><h5 id="2-5-更改MySQL数据存储路径的方法"><a href="#2-5-更改MySQL数据存储路径的方法" class="headerlink" title="2.5 更改MySQL数据存储路径的方法"></a>2.5 更改MySQL数据存储路径的方法</h5><p><strong>先停止mysql服务</strong></p><p>(1)停止服务，管理员进入cmd &gt;net stop MySQL (mysql的服务名：查找方法：右键我的电脑–&gt;管理–&gt;服务，然后找到mysql的服务名即可)；</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171158804.png" alt="image-20210817115856877"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171201941.png" alt="image-20210817120106794"></p><p>(2)将mysql安装路径下的data目录下的文件（通常是C:\ProgramData\MySQL\MySQL Server\Data）拷贝到自己想要储存的路径如：datadir=C:\Files\MySQLData；</p><p>(3)修改”my.ini”配置文件，记事本打开找到Datadir的部分 </p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171203012.png" alt="image-20210817120357477"></p><p>修改为： </p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171225736.png" alt="image-20210817122546594"></p><p>datadir=C:/Files/MySQLData\Data【备注：这里是”/”而不是”\”，一般的配置文件都这样】</p><p>(4)重启mysql服务验证一下是否成功，管理员进入cmd &gt;net start MySQL80</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171226682.png" alt="image-20210817122630329"></p><p>接着进入mysql创建一个数据库看一下</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171234450.png" alt="image-20210817123421886"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171234290.png" alt="image-20210817123447043"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;mysql –u root –p</span><br><span class="line">&gt;输入密码</span><br><span class="line">&gt;create database xiong;</span><br></pre></td></tr></table></figure><p>可以看到原先的data目录没有生成”xiong”的database，而在我们新建的mysqlData路径目录下多了”xiong”的database。更改到此完毕。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171235349.png" alt="image-20210817123519140"></p><h5 id="2-6MySQL卸载"><a href="#2-6MySQL卸载" class="headerlink" title="2.6MySQL卸载"></a>2.6MySQL卸载</h5><h6 id="（1）先停止服务"><a href="#（1）先停止服务" class="headerlink" title="（1）先停止服务"></a>（1）先停止服务</h6><p>服务器名是你安装时写的Windows服务名。</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171237110.png" alt="image-20210817123717794"></p><h6 id="（2）1-使用安装程序Installer卸载"><a href="#（2）1-使用安装程序Installer卸载" class="headerlink" title="（2）1.使用安装程序Installer卸载"></a>（2）1.使用安装程序Installer卸载</h6><p>安装程序不仅用来安装MySQL（可安装多个不同版本的MySQL服务），还可以用来修复及卸载MySQL。使用它卸载的好处就是能卸载干净，卸载不干净再重装很可能会出问题！</p><p>点击Remove</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171239379.png" alt="image-20210817123906965"></p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108171239001.png" alt="image-20210817123947729"></p><p> 完成卸载，重启计算机。</p><h6 id="（2）2-使用命令卸载"><a href="#（2）2-使用命令卸载" class="headerlink" title="（2）2.使用命令卸载"></a>（2）2.使用命令卸载</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql　　　　　　# 停服务</span><br><span class="line">mysqld remove mysql　　　# 卸载服务</span><br></pre></td></tr></table></figure><h5 id="2-7-启动和停止MySQL服务"><a href="#2-7-启动和停止MySQL服务" class="headerlink" title="2.7. 启动和停止MySQL服务"></a>2.7. 启动和停止MySQL服务</h5><ul><li><p>方式一：通过计算机管理方式</p><p>右击计算机—管理—服务—启动或停止MySQL服务</p></li><li><p>方式二：通过命令行方式</p><p>启动：net start mysql服务名</p><p>停止：net stop mysql服务名</p></li></ul><h5 id="2-8-MySQL服务端的登录和退出"><a href="#2-8-MySQL服务端的登录和退出" class="headerlink" title="2.8 MySQL服务端的登录和退出"></a>2.8 MySQL服务端的登录和退出</h5><ul><li><p>登录</p><p>mysql -h 主机名 -u 用户名 -p 密码</p></li><li><p>退出</p><p>exit</p></li></ul><h4 id="3-MySQL数据库的使用"><a href="#3-MySQL数据库的使用" class="headerlink" title="3. MySQL数据库的使用"></a>3. MySQL数据库的使用</h4><h5 id="3-1-MySQL语法规范"><a href="#3-1-MySQL语法规范" class="headerlink" title="3.1 MySQL语法规范"></a>3.1 MySQL语法规范</h5><ul><li>不区分大小写</li><li>每句话用;或\g结尾</li><li>各子句一般分行写</li><li>关键字不能缩写也不能分行</li><li>用缩进提高语句的可读性</li><li>注释<ul><li>单行注释 ：#注释文字</li><li>单行注释：– 注释文字</li><li>多行注释：/*注释文字*/</li></ul></li></ul><ol><li><p>进入mysql，在命令行中输入：mysql -uroot -p ####(其中：####表示密码)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">xiong@SURFACE-PRO6 C:\Users\xiong</span><br><span class="line"># net start MySQL80</span><br><span class="line">MySQL80 服务正在启动 .</span><br><span class="line">MySQL80 服务已经启动成功。</span><br><span class="line"></span><br><span class="line">xiong@SURFACE-PRO6 C:\Users\xiong</span><br><span class="line"># mysql -h localhost -P 3306 -u root -p</span><br><span class="line">Enter password: ******</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 8</span><br><span class="line">Server version: 8.0.26 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and&#x2F;or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and&#x2F;or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></li><li><p>新建一个数据库：<code>create database 数据库名;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create xiong;</span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br></pre></td></tr></table></figure></li><li><p>查看mysql中有哪些个数据库：<code>show databases;</code></p><p>xiong为自己建立的数据库，其他几个数据库为mysql自带的样例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| xiong              |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用一个数据库：<code>use数据库名称;</code></p><p>使用“xiong”数据库，显示 Database changed</p><ol><li><p>使用<code>show tables;</code>，查看数据库表中的内容，显示为Empty set</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use xiong                                                                  </span><br><span class="line">Database changed                                                                    </span><br><span class="line">mysql&gt; show tables                                                                  </span><br><span class="line">    -&gt; ;                                                                            </span><br><span class="line">Empty set (0.01 sec)                                                                </span><br></pre></td></tr></table></figure></li><li><p>查看当前所处的数据库：<code>select database();</code></p><p>显示处在“xiong”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| xiong      |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>在“xiong”里查看“mysql”数据库</p><p><code>show tables from 数据库名;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables from mysql;</span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">| Tables_in_mysql                                      |</span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">| columns_priv                                         |</span><br><span class="line">| component                                            |</span><br><span class="line">| db                                                   |</span><br><span class="line">| default_roles                                        |</span><br><span class="line">| engine_cost                                          |</span><br><span class="line">| func                                                 |</span><br><span class="line">| general_log                                          |</span><br><span class="line">| global_grants                                        |</span><br><span class="line">| gtid_executed                                        |</span><br><span class="line">| help_category                                        |</span><br><span class="line">| help_keyword                                         |</span><br><span class="line">| help_relation                                        |</span><br><span class="line">| help_topic                                           |</span><br><span class="line">| innodb_index_stats                                   |</span><br><span class="line">| innodb_table_stats                                   |</span><br><span class="line">| password_history                                     |</span><br><span class="line">| plugin                                               |</span><br><span class="line">| procs_priv                                           |</span><br><span class="line">| proxies_priv                                         |</span><br><span class="line">| replication_asynchronous_connection_failover         |</span><br><span class="line">| replication_asynchronous_connection_failover_managed |</span><br><span class="line">| replication_group_configuration_version              |</span><br><span class="line">| replication_group_member_actions                     |</span><br><span class="line">| role_edges                                           |</span><br><span class="line">| server_cost                                          |</span><br><span class="line">| servers                                              |</span><br><span class="line">| slave_master_info                                    |</span><br><span class="line">| slave_relay_log_info                                 |</span><br><span class="line">| slave_worker_info                                    |</span><br><span class="line">| slow_log                                             |</span><br><span class="line">| tables_priv                                          |</span><br><span class="line">| time_zone                                            |</span><br><span class="line">| time_zone_leap_second                                |</span><br><span class="line">| time_zone_name                                       |</span><br><span class="line">| time_zone_transition                                 |</span><br><span class="line">| time_zone_transition_type                            |</span><br><span class="line">| user                                                 |</span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">37 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></li></ol></li><li><p>在数据库中新建一个表：<code>create database 表名(列名 类型,...);</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table stuinfo(</span><br><span class="line">    -&gt; id int,</span><br><span class="line">    -&gt; name varchar(20)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_xiong |</span><br><span class="line">+-----------------+</span><br><span class="line">| stuinfo         |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ol><li><p>查看表的结构 <code>desc 表名;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc stuinfo;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int         | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></li><li><p>在表中添加数据<code>insert into 表名 values(属性1，属性2...) (属性1的值，属性2的值...);</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc stuinfo;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int         | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into stuinfo (id, name) values(1001,&#39;小天才&#39;);</span><br><span class="line">Query OK, 1 row affected (0.11 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into stuinfo (id, name) values(1002,&quot;花江&quot;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from stuinfo;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">| 1001 | 小天才 |</span><br><span class="line">| 1002 | 花江   |</span><br><span class="line">+------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>修改表中数据 <code>update 表名 set 属性 = xxx where 限制条件;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update stuinfo</span><br><span class="line">    -&gt; set name &#x3D; &quot;天空龙&quot;</span><br><span class="line">    -&gt; where id &#x3D; 1002;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from stuinfo;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">| 1001 | 小天才 |</span><br><span class="line">| 1002 | 天空龙 |</span><br><span class="line">+------+--------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></li></ol></li><li><p>查看服务器版本：</p><ol><li><p>在mysql命令行下：<code>select version();</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.26    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure></li><li><p>在cmd下：<code>mysql --version</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xiong@SURFACE-PRO6 C:\Users\xiong</span><br><span class="line"># mysql --version</span><br><span class="line">mysql  Ver 8.0.26 for Win64 on x86_64 (MySQL Community Server - GPL)</span><br></pre></td></tr></table></figure></li></ol></li></ol><h5 id="3-2-图形化数据库管理软件的使用"><a href="#3-2-图形化数据库管理软件的使用" class="headerlink" title="3.2 图形化数据库管理软件的使用"></a>3.2 图形化数据库管理软件的使用</h5><p>此处以DataGrip为例</p><p>1.新建项目</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172049413.png" alt="image-20210817204911546"></p><p>2.选择数据源</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172048910.png" alt="image-20210817204810167"></p><p>3.设置</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172046663.png" alt="image-20210817204608049"></p><p>4.连接成功</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172047820.png" alt="image-20210817204715308"></p><p>5.右键选中的数据库连接。选择Jump to Query Console，即可在控制台中书写sql语句了</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172109063.png" alt="image-20210817210942876"></p><p>6.添加多个数据库源：File –&gt; DataSource –&gt;选择数据源</p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108201746453.png" alt="image-20210817211336419" style="zoom:50%;" /> <p>点击 + 选择数据库类型，并新建连接</p><p><img src="https://gitee.com/xiongzero/PicGo/raw/master/img/202108172114883.png" alt="image-20210817211437787"></p>]]></content>
    
    
    <summary type="html">安装与使用</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL(00)—数据库和SQL</title>
    <link href="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(00)%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CSQL/"/>
    <id>https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/2021/09/17/MySQL(00)%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CSQL/</id>
    <published>2021-09-16T17:27:14.996Z</published>
    <updated>2021-08-17T02:06:56.607Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="数据库和SQL"><a href="#数据库和SQL" class="headerlink" title="数据库和SQL"></a>数据库和SQL</h3><h4 id="1-数据库的好处"><a href="#1-数据库的好处" class="headerlink" title="1. 数据库的好处"></a>1. 数据库的好处</h4><p>保存数据的容器：数组、集合、文件……</p><p>实现数据持久化，使用完整的管理系统统一管理，易于查询</p><h4 id="2-数据库概念"><a href="#2-数据库概念" class="headerlink" title="2. 数据库概念"></a>2. 数据库概念</h4><p><strong>DB：</strong></p><p>数据库(database)：存储数据的“仓库”。它保存了一系列有组织的数据</p><p><strong>DBMS：</strong></p><p>数据库管理系统(Database Management System)：数据库是通过DBMS创建和操作的容器</p><p><strong>SQL：</strong></p><p>结构化查询语言(Structure Query Language)：专门用来与数据库通信的语言</p><h4 id="3-数据库管理系统"><a href="#3-数据库管理系统" class="headerlink" title="3. 数据库管理系统"></a>3. 数据库管理系统</h4><p>常见的数据库管理系统：MySQL、Oracle、DB2、SqlServer等</p><h4 id="4-SQL语言概述"><a href="#4-SQL语言概述" class="headerlink" title="4. SQL语言概述"></a>4. SQL语言概述</h4><p>SQL的优点：</p><ol><li>不是某个特定数据库供应商专有的语言，几乎所有DBMS都支持SQL</li><li>简单易学</li><li>虽然简单，但实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作。</li></ol><h4 id="5-SQL语言分类"><a href="#5-SQL语言分类" class="headerlink" title="5. SQL语言分类"></a>5. SQL语言分类</h4><ol><li>DML(Data Manipulation Languaage)：数据操纵语言，用于添加、删除、修改、查询数据库记录，并检查数据完整性</li><li>DDL(Data Definition Language)：数据定义语言，用于库和表的创建、修改、删除</li><li>DCL(Data Control Language)：数据控制语言，用于定义用户的访问权限和安全级别</li></ol><h5 id="5-1-DML"><a href="#5-1-DML" class="headerlink" title="5.1 DML"></a>5.1 DML</h5><p>DML用于查询与修改数据记录，包括如下SQL语句：</p><ul><li>INSERT：添加数据到数据库中</li><li>UPDATE：修改数据库中的数据</li><li>DELETE：删除数据库中的数据</li><li>SELECT：选择(查询)数据<ul><li>SELECT是SQL语言的基础，最为重要</li></ul></li></ul><h5 id="5-2-DDL"><a href="#5-2-DDL" class="headerlink" title="5.2 DDL"></a>5.2 DDL</h5><p>DDL用于定义数据库的结构，比如创建、修改或删除数据库对象，包括如下SQL语句：</p><ul><li>CREAT TABLE：创建数据库表</li><li>ALTER TABLE：更改表结构、添加、删除、修改列长度</li><li>DROP TABLE：删除表</li><li>CREATE INDEX：在表上建立索引</li><li>DROP INDEX：删除索引</li></ul><h5 id="5-3-DCL"><a href="#5-3-DCL" class="headerlink" title="5.3 DCL"></a>5.3 DCL</h5><p>DCL用来控制数据库的访问，包括如下SQL语句：</p><ul><li>GRANT：授予访问权限</li><li>REVOKE：撤销访问权限</li><li>COMMIT：提交事务处理</li><li>ROLLBACK：事务处理回退</li><li>SAVEPOINT：设置保存点</li><li>LOCK：对数据库的特定部分进行锁定</li></ul>]]></content>
    
    
    <summary type="html">数据库和SQL</summary>
    
    
    
    <category term="编程" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://github.com/xiongzhuozhuo/xiongzhuozhuo.github.io/tags/MySQL/"/>
    
  </entry>
  
</feed>
